{"config":{"indexing":"full","lang":["en","ja","ru"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"BLIKVM Overview BLIKVM is an open-source KVM, it has four versions: v1 CM4, v2 PCIe, v3 HAT and the v4 Allwinner. This device helps to manage servers or workstations remotely, regardless of the health of the operating system or whether one is installed. You can fix any problem, configure the BIOS, and even reinstall the OS using the virtual CD-ROM or Flash Drive. Unlike software-based remote management, you don't need to install any software on the controlled computer, providing non-intrusive control. Here you will find comprehensive information about all aspects of the operation of BLIKVM. Join our BLIKVM Discord Community for Support, FAQ & News! FEATURE BliKVM v1 CM4 BliKVM v2 PCIe BliKVM v3 HAT BliKVM v4 /H313 SOC Raspberry CM4 Raspberry CM4 Raspberry 4B Allwinner H616/H313 Supported resolutions 1920x1080@60Hz 1920x1080@60Hz 1920x1080@50Hz 3840x2160@30Hz HDMI Capture TC358743 TC358743 TC358743 MS2131 HDMI Loop Through No No No Yes POE No Yes Yes Yes DC-IN No No No Yes USB-C Power Yes Yes Yes Yes USB Power/Data Splitter Yes Yes(external) Yes Yes Serial Console No Yes Yes Yes ATX controls Yes Yes Yes Yes BIOS controls Yes Yes Yes Yes Open source system Yes Yes Yes Yes Reinstall the controlled computer system Yes Yes Yes Yes FAN Yes(Not support PWM controls) Yes Yes Optional(default with heat sink) Display Module OLED 128x64 white OLED 128x32 white OLED 128x64 white LCD 240x240 color Real Time Clock Yes(DS1307) Yes(PCF8563) Yes(PCF8563) Yes(PCF8563) Case Metallic Black No Metallic Black White Blue Orange(1U rack compatible) Metallic Black(1U rack compatible) Buzzer No No No Yes Custom button No No No Yes Software update Yes Yes Yes Yes 32GB SD Card Yes (OS included) Yes (OS included) Yes (OS included) Yes (OS included) HDMI backpower mitigation No Yes Yes Yes Professional technical support Yes Yes Yes Yes Features Video capture (1080P 60Hz) Keyboard forwarding Mouse forwarding ATX Fan Control Fullscreen mode Paste text from clipboard VPN support Mass Storage Drive (emulate a CD-ROM or Flash Drive) Multiport KVM over IP OLED to display system info, like temp, uptime, IP Password authentication Support multiple languages Wake-on-LAN Guides 1. BLIKVM v1 CM4 version 2. BLIKVM v2 PCIE version 3. BLIKVM v3 HAT version 4. BliKVM v4 Allwinner version","title":"BLIKVM Overview"},{"location":"#blikvm-overview","text":"BLIKVM is an open-source KVM, it has four versions: v1 CM4, v2 PCIe, v3 HAT and the v4 Allwinner. This device helps to manage servers or workstations remotely, regardless of the health of the operating system or whether one is installed. You can fix any problem, configure the BIOS, and even reinstall the OS using the virtual CD-ROM or Flash Drive. Unlike software-based remote management, you don't need to install any software on the controlled computer, providing non-intrusive control. Here you will find comprehensive information about all aspects of the operation of BLIKVM. Join our BLIKVM Discord Community for Support, FAQ & News! FEATURE BliKVM v1 CM4 BliKVM v2 PCIe BliKVM v3 HAT BliKVM v4 /H313 SOC Raspberry CM4 Raspberry CM4 Raspberry 4B Allwinner H616/H313 Supported resolutions 1920x1080@60Hz 1920x1080@60Hz 1920x1080@50Hz 3840x2160@30Hz HDMI Capture TC358743 TC358743 TC358743 MS2131 HDMI Loop Through No No No Yes POE No Yes Yes Yes DC-IN No No No Yes USB-C Power Yes Yes Yes Yes USB Power/Data Splitter Yes Yes(external) Yes Yes Serial Console No Yes Yes Yes ATX controls Yes Yes Yes Yes BIOS controls Yes Yes Yes Yes Open source system Yes Yes Yes Yes Reinstall the controlled computer system Yes Yes Yes Yes FAN Yes(Not support PWM controls) Yes Yes Optional(default with heat sink) Display Module OLED 128x64 white OLED 128x32 white OLED 128x64 white LCD 240x240 color Real Time Clock Yes(DS1307) Yes(PCF8563) Yes(PCF8563) Yes(PCF8563) Case Metallic Black No Metallic Black White Blue Orange(1U rack compatible) Metallic Black(1U rack compatible) Buzzer No No No Yes Custom button No No No Yes Software update Yes Yes Yes Yes 32GB SD Card Yes (OS included) Yes (OS included) Yes (OS included) Yes (OS included) HDMI backpower mitigation No Yes Yes Yes Professional technical support Yes Yes Yes Yes","title":"BLIKVM Overview"},{"location":"#features","text":"Video capture (1080P 60Hz) Keyboard forwarding Mouse forwarding ATX Fan Control Fullscreen mode Paste text from clipboard VPN support Mass Storage Drive (emulate a CD-ROM or Flash Drive) Multiport KVM over IP OLED to display system info, like temp, uptime, IP Password authentication Support multiple languages Wake-on-LAN","title":"Features"},{"location":"#guides","text":"1. BLIKVM v1 CM4 version 2. BLIKVM v2 PCIE version 3. BLIKVM v3 HAT version 4. BliKVM v4 Allwinner version","title":"Guides"},{"location":"BLIHAT-Installation/","text":"BLIHAT Installation Guide 1. Unpack and take out the devices Open the protective bag 2. Install the main device Flip to back Open the case Flip to back, unscrew the two screws on the back Open the protective bag and take out the parts Install Micro SD card Install the FFC cable Install the HAT on the Raspberry Pi 4 Install the four Hex Spacers Install the C790 module, use the long screws you just removed Install the audio cable Stick a heat conductive sheet on the back of the Raspberry Pi 4, tear off the protective film of the sheet Install the HAT into the case Pay attention to the alignment of the holes Flip to back and install 4 screws Install five case screws Install the mounting ear as needed The main device installation is complete","title":"v3 HAT Illustrated Instructions"},{"location":"BLIHAT-Installation/#blihat-installation-guide","text":"","title":"BLIHAT Installation Guide"},{"location":"BLIHAT-Installation/#1-unpack-and-take-out-the-devices","text":"Open the protective bag","title":"1. Unpack and take out the devices"},{"location":"BLIHAT-Installation/#2-install-the-main-device","text":"Flip to back Open the case Flip to back, unscrew the two screws on the back Open the protective bag and take out the parts Install Micro SD card Install the FFC cable Install the HAT on the Raspberry Pi 4 Install the four Hex Spacers Install the C790 module, use the long screws you just removed Install the audio cable Stick a heat conductive sheet on the back of the Raspberry Pi 4, tear off the protective film of the sheet Install the HAT into the case Pay attention to the alignment of the holes Flip to back and install 4 screws Install five case screws Install the mounting ear as needed The main device installation is complete","title":"2. Install the main device"},{"location":"BLIKVM-CM4-guide/","text":"BLIKVM-CM4 version guide Geerling: Engineering Test video BliKVM v1 is a production-ready, plug and play KVM-over-IP device that offers professional users a convenient solution for remote server or workstation management . It is based on Linux and fully open source. With BliKVM, you can easily power on/off, restart your computer, configure UEFI/BIOS settings, and perform OS reinstallation using an emulated Mass Storage Device . BliKVM simulates a keyboard, mouse, and monitor, all accessible through a web browser, ensuring a seamless user experience. Its hardware-level access guarantees independence from specific remote ports, protocols, or services , making it a highly flexible and reliable remote management solution for professionals! BliKVM v1 Datasheet Features Video capture (HDMI, support 1080P@60Hz input) Keyboard forwarding Mouse forwarding Mass Storage Drive ATX Control the server power using ATX functions Fullscreen mode Access via Web UI Support multi language switching Serial console port OLED display Real Time Clock (RTC) FAN Installation requirements If you have an assembly kit, you will need the following things Raspberry CM4 with 1Gb RAM or more. USB-C to USB-A cable. HDMI cable. Straight Ethernet cable (for the ATX board connection). Power supply unit (5.1V 3A USB-C, recommended by the Raspberry Pi). Power supply You must use a USB-C to USB-A cable. Using a USB-C to USB-C cable will not work. This is an incompatibility in the hardware design and will be fixed in a later version. Basic setup 1. The SD card preloaded with the factory default image does not require burning. If you need to reflash the system or for DIY purposes, you can follow Flash the memory card or eMMC 2. If you have a non-plug version, refer to the video and instructions below for device installation: Use the provided screwdriver to open the metal casing and remove the PCB motherboard. Install the CM4 onto the PCB motherboard, ensuring that the two rows of card slots are aligned. Apply the thermal conductive silicone pad onto the CM4 main chip to facilitate heat dissipation using the metal casing. The fan is not connected by default as the metal casing provides sufficient heat dissipation. Depending on your CM4 version, selectively install the Wi-Fi antenna. Reassemble the PCB motherboard and the metal casing to complete the installation. Please note that translations might vary depending on context and specific terminology used in technical instructions. Video Guide: Metal case step by step Ortimo: BLIKVM with Raspberry PI CM4 16GB EMMC setup 3. Connect BLIKVM to the computer according to the diagram below: HDMI IN and otg port must be connected to the computer. ATX too, but it\u2019s optional, read below. There should be no USB hub between BLIKVM and the computer, as some UEFI/BIOS cannot detect them at the boot stage. BLIKVM supports 1080p60Hz or lower about HDMI source. Connect Ethernet to the network and PWR IN to the BLIKVM power supply. 4. ATX connection To manage the power of your computer, you will connect CN-ATX port to the computer.The user can use the ATX cable provided with the product to connect the product and the motherboard ATX switch of the controlled computer. The length of the ATX cable is 60CM, you can also use the double female Dupont cables. To accommodate ATX control boards with Ethernet ports, v1 has a dedicated ATX expansion kit available. This kit enables customers to connect the ATX board installed on the chassis panel directly using an Ethernet cable. 5. After all the connecting cables are properly set up, power on the BliKVM until the display screen shows an image, indicating that the device has successfully started. 6. Read the \"First Steps\" guide carefully. It provides instructions on how to find the device on the network, how to log in, change passwords, and more. Follow the steps described there and then return to this page. As BliKVM v1 also supports PiKVM OS, if your v1 comes with PiKVM as the factory OS, please refer to the documentation for web usage instructions . 7. Try managing your computer using the BliKVM web interface. Make sure you can see the image and that the keyboard and mouse are working properly. If you encounter any issues, check out our FAQ (it's very helpful). If you find no solution there, seek support in our Discord chat room . 8. You can explore other pages in the wiki to discover more features of BliKVM. Enjoy your experience! Wi-Fi Antenna Connection If your CM4 has Wi-Fi functionality, open the metal casing of v1 and attach the Wi-Fi antenna from the package to the IPX interface on the CM4, as shown by the red box in the diagram below; the installation location on the casing for the antenna is defined as position 11 in the interface layout diagram. Support 1080p60hz HDMI input First in V2.2 version, there is CSI channel switch. This switch is switch 2 csi channels or 4 csi channels. In other versions, the switch is obsolete. Newer keeps the factory state, ignore this switch. Only flip the switch when the device is powered off, otherwise it may cause permanent damage! The four small switches should be up or down at the same time. Product List BLIKVM v1 excluding CM4 Case 1 PCB 1 Fan 1 SD card 32G 1 ATX Dupont Cables 1 OLED 1 BLIKVM v1 including CM4102000 Case 1 PCB 1 CM4102000 1 Fan 1 SD card 32G 1 ATX Dupont Cables 1 OLED 1 WiFi antenna 1 BLIKVM v1 including CM4002000 Case 1 PCB 1 CM4002000 1 Fan 1 SD card 32G 1 ATX Dupont Cables 1 WiFi antenna 1 Buy link Buy v1","title":"BliKVM v1 CM4 Guide"},{"location":"BLIKVM-CM4-guide/#blikvm-cm4-version-guide","text":"Geerling: Engineering Test video BliKVM v1 is a production-ready, plug and play KVM-over-IP device that offers professional users a convenient solution for remote server or workstation management . It is based on Linux and fully open source. With BliKVM, you can easily power on/off, restart your computer, configure UEFI/BIOS settings, and perform OS reinstallation using an emulated Mass Storage Device . BliKVM simulates a keyboard, mouse, and monitor, all accessible through a web browser, ensuring a seamless user experience. Its hardware-level access guarantees independence from specific remote ports, protocols, or services , making it a highly flexible and reliable remote management solution for professionals! BliKVM v1 Datasheet","title":"BLIKVM-CM4 version guide"},{"location":"BLIKVM-CM4-guide/#features","text":"Video capture (HDMI, support 1080P@60Hz input) Keyboard forwarding Mouse forwarding Mass Storage Drive ATX Control the server power using ATX functions Fullscreen mode Access via Web UI Support multi language switching Serial console port OLED display Real Time Clock (RTC) FAN","title":"Features"},{"location":"BLIKVM-CM4-guide/#installation-requirements","text":"If you have an assembly kit, you will need the following things Raspberry CM4 with 1Gb RAM or more. USB-C to USB-A cable. HDMI cable. Straight Ethernet cable (for the ATX board connection). Power supply unit (5.1V 3A USB-C, recommended by the Raspberry Pi). Power supply You must use a USB-C to USB-A cable. Using a USB-C to USB-C cable will not work. This is an incompatibility in the hardware design and will be fixed in a later version.","title":"Installation requirements"},{"location":"BLIKVM-CM4-guide/#basic-setup","text":"1. The SD card preloaded with the factory default image does not require burning. If you need to reflash the system or for DIY purposes, you can follow Flash the memory card or eMMC 2. If you have a non-plug version, refer to the video and instructions below for device installation: Use the provided screwdriver to open the metal casing and remove the PCB motherboard. Install the CM4 onto the PCB motherboard, ensuring that the two rows of card slots are aligned. Apply the thermal conductive silicone pad onto the CM4 main chip to facilitate heat dissipation using the metal casing. The fan is not connected by default as the metal casing provides sufficient heat dissipation. Depending on your CM4 version, selectively install the Wi-Fi antenna. Reassemble the PCB motherboard and the metal casing to complete the installation. Please note that translations might vary depending on context and specific terminology used in technical instructions. Video Guide: Metal case step by step Ortimo: BLIKVM with Raspberry PI CM4 16GB EMMC setup 3. Connect BLIKVM to the computer according to the diagram below: HDMI IN and otg port must be connected to the computer. ATX too, but it\u2019s optional, read below. There should be no USB hub between BLIKVM and the computer, as some UEFI/BIOS cannot detect them at the boot stage. BLIKVM supports 1080p60Hz or lower about HDMI source. Connect Ethernet to the network and PWR IN to the BLIKVM power supply. 4. ATX connection To manage the power of your computer, you will connect CN-ATX port to the computer.The user can use the ATX cable provided with the product to connect the product and the motherboard ATX switch of the controlled computer. The length of the ATX cable is 60CM, you can also use the double female Dupont cables. To accommodate ATX control boards with Ethernet ports, v1 has a dedicated ATX expansion kit available. This kit enables customers to connect the ATX board installed on the chassis panel directly using an Ethernet cable. 5. After all the connecting cables are properly set up, power on the BliKVM until the display screen shows an image, indicating that the device has successfully started. 6. Read the \"First Steps\" guide carefully. It provides instructions on how to find the device on the network, how to log in, change passwords, and more. Follow the steps described there and then return to this page. As BliKVM v1 also supports PiKVM OS, if your v1 comes with PiKVM as the factory OS, please refer to the documentation for web usage instructions . 7. Try managing your computer using the BliKVM web interface. Make sure you can see the image and that the keyboard and mouse are working properly. If you encounter any issues, check out our FAQ (it's very helpful). If you find no solution there, seek support in our Discord chat room . 8. You can explore other pages in the wiki to discover more features of BliKVM. Enjoy your experience!","title":"Basic setup"},{"location":"BLIKVM-CM4-guide/#wi-fi-antenna-connection","text":"If your CM4 has Wi-Fi functionality, open the metal casing of v1 and attach the Wi-Fi antenna from the package to the IPX interface on the CM4, as shown by the red box in the diagram below; the installation location on the casing for the antenna is defined as position 11 in the interface layout diagram.","title":"Wi-Fi Antenna Connection"},{"location":"BLIKVM-CM4-guide/#support-1080p60hz-hdmi-input","text":"First in V2.2 version, there is CSI channel switch. This switch is switch 2 csi channels or 4 csi channels. In other versions, the switch is obsolete. Newer keeps the factory state, ignore this switch. Only flip the switch when the device is powered off, otherwise it may cause permanent damage! The four small switches should be up or down at the same time.","title":"Support 1080p60hz HDMI input"},{"location":"BLIKVM-CM4-guide/#product-list","text":"BLIKVM v1 excluding CM4 Case 1 PCB 1 Fan 1 SD card 32G 1 ATX Dupont Cables 1 OLED 1 BLIKVM v1 including CM4102000 Case 1 PCB 1 CM4102000 1 Fan 1 SD card 32G 1 ATX Dupont Cables 1 OLED 1 WiFi antenna 1 BLIKVM v1 including CM4002000 Case 1 PCB 1 CM4002000 1 Fan 1 SD card 32G 1 ATX Dupont Cables 1 WiFi antenna 1","title":"Product List"},{"location":"BLIKVM-CM4-guide/#buy-link","text":"Buy v1","title":"Buy link"},{"location":"BLIKVM-HAT-guide/","text":"BLIKVM HAT version guide Introduction BLIKVM hat Video The Raspberry Pi IPKVM HAT is an add-on board for Raspberry Pi 4, made especially for KVM Over IP. The BLIKVM-RPI4 is a Raspberry Pi 4 PoE KVM HAT. This product\u2019s key features include video capture, ATX adapter, PoE, OLED and RTC. The product has a customized metal case to dissipate heat and provide protection for the HAT. The product can be easily installed on a standard 1U rack. The product is currently perfectly compatible with BliKVM image and PiKVM image. Features Video capture (HDMI, support 1080P@50Hz input) Keyboard forwarding Mouse forwarding Mass Storage Drive ATX Adapter : Control the server power using ATX functions Fullscreen mode Access via Web UI Multi Language switching support PoE support Serial console port OLED display Real Time Clock (RTC) PWM FAN Interface HAT part: HDMI IN ATX Port OLED PoE jumper Raspberry 4B part: SD CARD ACT LED PWR LED USB-PC HDMI 0 HDMI 1 A/V ETH(1000M) & PoE 2x USB 2.0 Ports & 2x USB 3.0 Ports Installation requirements If you have an assembly kit, you will need the following things Raspberry Pi 4B with 1Gb RAM or more. HDMI cable. Straight Ethernet cable (for the ATX board connection). Power supply unit & cable(5.1V 3A USB-C, recommended by the Raspberry Pi). Basic setup 1. Flash the memory card or eMMC 2. Build BLIKVM according to the video instructions or review the illustrated instructions : Video Guide: Metal case step by step 3. Install the ATX adapter board The board has a standard PCIe I/O bracket and a low profile PCIe I/O bracket. Choose one as needed Use Dupont cables to connect ATX adapter board to motherboard and chassis panel. There are clear pin definitions on the board for easy wiring. Mount the ATX adapter board to the case shell Use a RJ45 network cable to connect the board to the CN-ATX interface of the HAT 4. Connect the HDMI cable Connect the HDMI output port of the computer directly to the HDMI IN port of the HAT with an HDMI cable. The HDMI pass-through EDID emulator is not necessary! If your computer does not output the correct HDMI format, plug the HDMI pass-through EDID emulator into the HDMI output port of the computer. This allows you to configure a fixed HDMI output format on your computer. 5. Install the USB cable Connect the RPI4 port to the Raspberry Pi 4 Connect the USB port to the controlled computer When using PoE power supply, there is no need to connect the PWR port. When not using PoE power supply, connect the PWR port to a standard 5V/3A USB power supply. 6. Test Powered by PoE, the HAT is connected to the router via the network cable The screen displays the current status of the device, including the machine's IP address Access the IP address of the HAT in the browser. Enjoy! Specification HDMI IN The bridge chip is Toshiba TC358743, which supports both video and audio(I2S), and the highest input resolution is 1080p@50fps. Fixed HDMI back power issue. CN-ATX The CN-ATX interface is connected to the ATX adapter board (an accessory for the HAT) through a network cable, which can turn on, off, and restart the controlled computer. Display A white OLED display with a resolution of 128x32, and the chip is SSD1306. This display can show the temperature, IP address and other information of the Raspberry Pi. PoE Standard: IEEE 802.3af PoE Input voltage: 37-57 V DC Output power: 5 V DC/2.4 A Plug in the PoE jumper cap to enable PoE power supply FAN The IPKVM HAT is fitted with a small fan that is controlled by your Raspberry Pi via GPIO12. Real Time Clock (RTC) The clock chip is PCF8563 that is controlled by your Raspberry Pi via I2C. The coin cell battery is installed under the HDMI IN module. Accessories ATX adapter board This board is connected to the switch port on the motherboard of the controlled computer with DuPont cables. The board has a standard PCIe I/O bracket and a low profile PCIe I/O bracket. USB/PWR splitter Connect the RPI4 port to your Raspberry Pi 4. Connect the USB port to the controlled computer. When using PoE power supply, there is no need to connect the PWR port. When not using PoE power supply, connect the PWR port to a standard 5V/3A USB power supply. HDMI pass-through EDID emulator If the controlled computer does not output HDMI images correctly, please use this accessory. Connect the Source port to the controlled computer, connect the Sink port to the HAT. Then you can set the correct HDMI output on the controlled computer. Metal case The metal case protects the HAT and improve heat dissipation. There are clear port markings on the case. The case can be easily installed on a standard 1U rack. List Product List Raspberry Pi IPKVM HAT 1 ATX adapter board 1 USB/PWR splitter 1 HDMI pass-through EDID emulator 1 Metal case 1 32G TF card 1 USB Type-C to USB Type-C Cable 30cm 1 Dupont Cables 8pin Male to Male 40cm 1 Dupont Cables 8pin Male to Female 40cm 1 Phillips screwdriver 1 Cross Wrench Sleeve 1 List of items prepared by the user Raspberry Pi 4 1 RJ45 network cable 2 USB Type-A to USB Type-C Cable 2 HDMI cable 1 PoE-sourcing equipment or 5V/3A USB adapter 1 CR1220 coin cell battery 1 Buy link Buy v3","title":"BliKVM v3 HAT Guide"},{"location":"BLIKVM-HAT-guide/#blikvm-hat-version-guide","text":"","title":"BLIKVM HAT version guide"},{"location":"BLIKVM-HAT-guide/#introduction","text":"BLIKVM hat Video The Raspberry Pi IPKVM HAT is an add-on board for Raspberry Pi 4, made especially for KVM Over IP. The BLIKVM-RPI4 is a Raspberry Pi 4 PoE KVM HAT. This product\u2019s key features include video capture, ATX adapter, PoE, OLED and RTC. The product has a customized metal case to dissipate heat and provide protection for the HAT. The product can be easily installed on a standard 1U rack. The product is currently perfectly compatible with BliKVM image and PiKVM image.","title":"Introduction"},{"location":"BLIKVM-HAT-guide/#features","text":"Video capture (HDMI, support 1080P@50Hz input) Keyboard forwarding Mouse forwarding Mass Storage Drive ATX Adapter : Control the server power using ATX functions Fullscreen mode Access via Web UI Multi Language switching support PoE support Serial console port OLED display Real Time Clock (RTC) PWM FAN","title":"Features"},{"location":"BLIKVM-HAT-guide/#interface","text":"HAT part: HDMI IN ATX Port OLED PoE jumper Raspberry 4B part: SD CARD ACT LED PWR LED USB-PC HDMI 0 HDMI 1 A/V ETH(1000M) & PoE 2x USB 2.0 Ports & 2x USB 3.0 Ports","title":"Interface"},{"location":"BLIKVM-HAT-guide/#installation-requirements","text":"If you have an assembly kit, you will need the following things Raspberry Pi 4B with 1Gb RAM or more. HDMI cable. Straight Ethernet cable (for the ATX board connection). Power supply unit & cable(5.1V 3A USB-C, recommended by the Raspberry Pi).","title":"Installation requirements"},{"location":"BLIKVM-HAT-guide/#basic-setup","text":"1. Flash the memory card or eMMC 2. Build BLIKVM according to the video instructions or review the illustrated instructions : Video Guide: Metal case step by step 3. Install the ATX adapter board The board has a standard PCIe I/O bracket and a low profile PCIe I/O bracket. Choose one as needed Use Dupont cables to connect ATX adapter board to motherboard and chassis panel. There are clear pin definitions on the board for easy wiring. Mount the ATX adapter board to the case shell Use a RJ45 network cable to connect the board to the CN-ATX interface of the HAT 4. Connect the HDMI cable Connect the HDMI output port of the computer directly to the HDMI IN port of the HAT with an HDMI cable. The HDMI pass-through EDID emulator is not necessary! If your computer does not output the correct HDMI format, plug the HDMI pass-through EDID emulator into the HDMI output port of the computer. This allows you to configure a fixed HDMI output format on your computer. 5. Install the USB cable Connect the RPI4 port to the Raspberry Pi 4 Connect the USB port to the controlled computer When using PoE power supply, there is no need to connect the PWR port. When not using PoE power supply, connect the PWR port to a standard 5V/3A USB power supply. 6. Test Powered by PoE, the HAT is connected to the router via the network cable The screen displays the current status of the device, including the machine's IP address Access the IP address of the HAT in the browser. Enjoy!","title":"Basic setup"},{"location":"BLIKVM-HAT-guide/#specification","text":"HDMI IN The bridge chip is Toshiba TC358743, which supports both video and audio(I2S), and the highest input resolution is 1080p@50fps. Fixed HDMI back power issue. CN-ATX The CN-ATX interface is connected to the ATX adapter board (an accessory for the HAT) through a network cable, which can turn on, off, and restart the controlled computer. Display A white OLED display with a resolution of 128x32, and the chip is SSD1306. This display can show the temperature, IP address and other information of the Raspberry Pi. PoE Standard: IEEE 802.3af PoE Input voltage: 37-57 V DC Output power: 5 V DC/2.4 A Plug in the PoE jumper cap to enable PoE power supply FAN The IPKVM HAT is fitted with a small fan that is controlled by your Raspberry Pi via GPIO12. Real Time Clock (RTC) The clock chip is PCF8563 that is controlled by your Raspberry Pi via I2C. The coin cell battery is installed under the HDMI IN module.","title":"Specification"},{"location":"BLIKVM-HAT-guide/#accessories","text":"","title":"Accessories"},{"location":"BLIKVM-HAT-guide/#atx-adapter-board","text":"This board is connected to the switch port on the motherboard of the controlled computer with DuPont cables. The board has a standard PCIe I/O bracket and a low profile PCIe I/O bracket.","title":"ATX adapter board"},{"location":"BLIKVM-HAT-guide/#usbpwr-splitter","text":"Connect the RPI4 port to your Raspberry Pi 4. Connect the USB port to the controlled computer. When using PoE power supply, there is no need to connect the PWR port. When not using PoE power supply, connect the PWR port to a standard 5V/3A USB power supply.","title":"USB/PWR splitter"},{"location":"BLIKVM-HAT-guide/#hdmi-pass-through-edid-emulator","text":"If the controlled computer does not output HDMI images correctly, please use this accessory. Connect the Source port to the controlled computer, connect the Sink port to the HAT. Then you can set the correct HDMI output on the controlled computer.","title":"HDMI pass-through EDID emulator"},{"location":"BLIKVM-HAT-guide/#metal-case","text":"The metal case protects the HAT and improve heat dissipation. There are clear port markings on the case. The case can be easily installed on a standard 1U rack.","title":"Metal case"},{"location":"BLIKVM-HAT-guide/#list","text":"","title":"List"},{"location":"BLIKVM-HAT-guide/#product-list","text":"Raspberry Pi IPKVM HAT 1 ATX adapter board 1 USB/PWR splitter 1 HDMI pass-through EDID emulator 1 Metal case 1 32G TF card 1 USB Type-C to USB Type-C Cable 30cm 1 Dupont Cables 8pin Male to Male 40cm 1 Dupont Cables 8pin Male to Female 40cm 1 Phillips screwdriver 1 Cross Wrench Sleeve 1","title":"Product List"},{"location":"BLIKVM-HAT-guide/#list-of-items-prepared-by-the-user","text":"Raspberry Pi 4 1 RJ45 network cable 2 USB Type-A to USB Type-C Cable 2 HDMI cable 1 PoE-sourcing equipment or 5V/3A USB adapter 1 CR1220 coin cell battery 1","title":"List of items prepared by the user"},{"location":"BLIKVM-HAT-guide/#buy-link","text":"Buy v3","title":"Buy link"},{"location":"BLIKVM-PCIE-guide/","text":"BLIKVM PCIe Introduction BLIKVM PCIe is a PCIe add-in card based on Raspberry Pi CM4 for KVM Over IP. This product\u2019s key features include video capture, ATX controller, PoE, OLED , UART and RTC. The card has a standard PCIe I/O bracket and a low profile PCIe I/O bracket. The product is currently perfectly compatible with blikvm image and pikvm image. Installation requirements You will need the following things Raspberry Pi CM4(if you order PCIe card only). PoE-sourcing equipment or 5V/3A USB adapter. CR1220 coin cell battery. Features Video capture (HDMI, support 1080P@60Hz input) Keyboard forwarding Mouse forwarding Mass Storage Drive ATX Control the server power using ATX functions Fullscreen mode Access via Web UI Support multi language switching Support PoE Serial console port OLED display Real Time Clock (RTC) PWM Fan Basic setup 1. If you have an assembly kit, Flash the memory card or eMMC 2.Build BLIKVM according to the illustrated instructions : Geerling: Engineering Test video Craft Computing: Never Pay For IPMI Again - BliKVM Review Specification hardware feature list 1 HDMI in 2 USB-PC port 3 Power Input 5V 3A 4 RJ45 100M Ethernet port & PoE 5 ATX control port 6 OLED Display 7 PWM FAN 8 BOOT 9 REAL TIME CLOCK(RTC) 10 UART port 11 USB-PC port HDMI IN The bridge chip is Toshiba TC358743, which supports both video and audio(I2S), and the highest input resolution is 1080p@60fps. Fixed HDMI back power issue. USB-PC The BLIKVM PCIe card provides two USB interfaces, one is PC-IN (type c interface) and the other is USB-PC2 (pin interface). The purpose of these two interfaces is to connect to the USB of the controlled computer, used to control the mouse and keyboard. At the same time, only one interface can be used. The purpose of designing two interfaces is to directly use USB PC2 when the user's PC host has a row pin USB interface, which will make the wiring more concise. POWER-IN When using PoE power supply, there is no need to connect the PWR-IN port. When not using PoE power supply, connect the PWR-IN port to a standard 5V/3A USB power supply. ETHERNET-PoE Gigabit Ethernet port Standard: IEEE 802.3af PoE Input voltage: 37-57 V DC Output power: 5 V DC/2.4 A ATX-Connecter Connect to power control interface on the motherboard of the controlled computer with DuPont cables. It can turn on, off, and restart the controlled computer. The pin is defined on the printing of the PCIe board, BTN means button. According to the instructions of the computer motherboard, first find the position of the ATX function related pins on the motherboard, and then unplug the ATX ray that has been connected to the motherboard. After unplugging, the power button of the computer will lose its function. There are two rows of 8PIN pins on the PCIe board. It is unnecessary to distinguish between the two rows of pins when they are used with the same functions. One row of pins is used for KVM to control ATX-related functions, and the other row of pins is connected to the ATX DuPont head unplugged from the main board to maintain the original chassis power button function. Connect each wire according to the specific pin definitions on the motherboard and PCIe. See the following figure for the connection relationship\uff1a OLED Display A white OLED display with a resolution of 128x64, and the chip is SSD1306. This display can show the temperature, IP address and other information of the Raspberry Pi. FAN The Card HAT is fitted with a small fan that is controlled by your Raspberry Pi CM4 via GPIO12. BOOT Fit jumper to disable eMMC Boot Real Time Clock (RTC) The clock chip is PCF8563 that is controlled by your Raspberry Pi CM4 via I2C. The CR1220 battery is installed under the HDMI IN module. UART Connect the serial port to debug your Raspberry Pi CM4. The uart of Raspberry Pi CM4. G for GND, T(GPIO 14) for TXD, R(GPIO 15) for RXD. Connect serial cable wires to G T R connectors on the PCIe board. NOTE: black wire = Ground, whiTe = Tx, and gReen = Rx; For specific methods, please refer to this document . Accessories HDMI pass-through EDID emulator If the controlled computer does not output HDMI images correctly, please use this accessory. Connect the Source port to the controlled computer, connect the Sink port to the HAT. Then you can set the correct HDMI output on the controlled computer. VGA-HDMI module When your device does not have an HDMI output interface, you can use a VGA to HDMI module. USB to TTL module Connect your computer usb interface with the serial port of BLIKVM to debug your Raspberry Pi CM4. Fan Use a cooling fan to cool the Raspberry Pi CM4, but installing a fan will make the product thicker than a standard PCIe add-in card. Dimensions Test Video BLIKVM hardware PCIe version is tested wonderful based on pikvm software. Notes To prevent the CM4 module from contacting the SD card holder, do not remove the insulating tape List Product List BLIKVM PCIe card version 1 BLIKVM PCIe add-in card 1 Cooling fan 1 OLED display 1 USB to TTL module 1 HDMI pass-through EDID emulator 1 VGA-HDMI module 1 32G Micro SD card 1 HDMI cable 0.5m 1 HDMI Coupler 1 Network cable 1m 1 USB-A to USB-C cable 1m 2 Dupont USB cable 0.4m 1 WiFi antenna 1 Dupont Cables 8pin Male to Male 40cm 1 Dupont Cables 8pin Male to Female 40cm 1 Metal heatsink 1 Phillips screwdriver 1 Cross Wrench Sleeve 1 BLIKVM PCIe plug-n-play version 1 BLIKVM PCIe add-in card 1 CM4 102000 1 Cooling fan 1 OLED display 1 USB to TTL module 1 HDMI pass-through EDID emulator 1 VGA-HDMI module 1 32G Micro SD card 1 HDMI cable 0.5m 1 HDMI Coupler 1 Network cable 1m 1 USB-A to USB-C cable 1m 2 Dupont USB cable 0.4m 1 WiFi antenna 1 Dupont Cables 8pin Male to Male 40cm 1 Dupont Cables 8pin Male to Female 40cm 1 Metal heatsink 1 Phillips screwdriver 1 Cross Wrench Sleeve 1 List of items prepared by the user Raspberry Pi CM4(if you order PCIe card only) 1 PoE-sourcing equipment or 5V/3A USB adapter 1 CR1220 coin cell battery 1 Buy link Buy v2 3D printable case A simple snap fit case for the PCIe. Download file","title":"BliKVM v2 PCIe Guide"},{"location":"BLIKVM-PCIE-guide/#blikvm-pcie","text":"","title":"BLIKVM PCIe"},{"location":"BLIKVM-PCIE-guide/#introduction","text":"BLIKVM PCIe is a PCIe add-in card based on Raspberry Pi CM4 for KVM Over IP. This product\u2019s key features include video capture, ATX controller, PoE, OLED , UART and RTC. The card has a standard PCIe I/O bracket and a low profile PCIe I/O bracket. The product is currently perfectly compatible with blikvm image and pikvm image.","title":"Introduction"},{"location":"BLIKVM-PCIE-guide/#installation-requirements","text":"You will need the following things Raspberry Pi CM4(if you order PCIe card only). PoE-sourcing equipment or 5V/3A USB adapter. CR1220 coin cell battery.","title":"Installation requirements"},{"location":"BLIKVM-PCIE-guide/#features","text":"Video capture (HDMI, support 1080P@60Hz input) Keyboard forwarding Mouse forwarding Mass Storage Drive ATX Control the server power using ATX functions Fullscreen mode Access via Web UI Support multi language switching Support PoE Serial console port OLED display Real Time Clock (RTC) PWM Fan","title":"Features"},{"location":"BLIKVM-PCIE-guide/#basic-setup","text":"1. If you have an assembly kit, Flash the memory card or eMMC 2.Build BLIKVM according to the illustrated instructions : Geerling: Engineering Test video Craft Computing: Never Pay For IPMI Again - BliKVM Review","title":"Basic setup"},{"location":"BLIKVM-PCIE-guide/#specification","text":"hardware feature list 1 HDMI in 2 USB-PC port 3 Power Input 5V 3A 4 RJ45 100M Ethernet port & PoE 5 ATX control port 6 OLED Display 7 PWM FAN 8 BOOT 9 REAL TIME CLOCK(RTC) 10 UART port 11 USB-PC port HDMI IN The bridge chip is Toshiba TC358743, which supports both video and audio(I2S), and the highest input resolution is 1080p@60fps. Fixed HDMI back power issue. USB-PC The BLIKVM PCIe card provides two USB interfaces, one is PC-IN (type c interface) and the other is USB-PC2 (pin interface). The purpose of these two interfaces is to connect to the USB of the controlled computer, used to control the mouse and keyboard. At the same time, only one interface can be used. The purpose of designing two interfaces is to directly use USB PC2 when the user's PC host has a row pin USB interface, which will make the wiring more concise. POWER-IN When using PoE power supply, there is no need to connect the PWR-IN port. When not using PoE power supply, connect the PWR-IN port to a standard 5V/3A USB power supply. ETHERNET-PoE Gigabit Ethernet port Standard: IEEE 802.3af PoE Input voltage: 37-57 V DC Output power: 5 V DC/2.4 A ATX-Connecter Connect to power control interface on the motherboard of the controlled computer with DuPont cables. It can turn on, off, and restart the controlled computer. The pin is defined on the printing of the PCIe board, BTN means button. According to the instructions of the computer motherboard, first find the position of the ATX function related pins on the motherboard, and then unplug the ATX ray that has been connected to the motherboard. After unplugging, the power button of the computer will lose its function. There are two rows of 8PIN pins on the PCIe board. It is unnecessary to distinguish between the two rows of pins when they are used with the same functions. One row of pins is used for KVM to control ATX-related functions, and the other row of pins is connected to the ATX DuPont head unplugged from the main board to maintain the original chassis power button function. Connect each wire according to the specific pin definitions on the motherboard and PCIe. See the following figure for the connection relationship\uff1a OLED Display A white OLED display with a resolution of 128x64, and the chip is SSD1306. This display can show the temperature, IP address and other information of the Raspberry Pi. FAN The Card HAT is fitted with a small fan that is controlled by your Raspberry Pi CM4 via GPIO12. BOOT Fit jumper to disable eMMC Boot Real Time Clock (RTC) The clock chip is PCF8563 that is controlled by your Raspberry Pi CM4 via I2C. The CR1220 battery is installed under the HDMI IN module. UART Connect the serial port to debug your Raspberry Pi CM4. The uart of Raspberry Pi CM4. G for GND, T(GPIO 14) for TXD, R(GPIO 15) for RXD. Connect serial cable wires to G T R connectors on the PCIe board. NOTE: black wire = Ground, whiTe = Tx, and gReen = Rx; For specific methods, please refer to this document .","title":"Specification"},{"location":"BLIKVM-PCIE-guide/#accessories","text":"HDMI pass-through EDID emulator If the controlled computer does not output HDMI images correctly, please use this accessory. Connect the Source port to the controlled computer, connect the Sink port to the HAT. Then you can set the correct HDMI output on the controlled computer. VGA-HDMI module When your device does not have an HDMI output interface, you can use a VGA to HDMI module. USB to TTL module Connect your computer usb interface with the serial port of BLIKVM to debug your Raspberry Pi CM4. Fan Use a cooling fan to cool the Raspberry Pi CM4, but installing a fan will make the product thicker than a standard PCIe add-in card.","title":"Accessories"},{"location":"BLIKVM-PCIE-guide/#dimensions","text":"","title":"Dimensions"},{"location":"BLIKVM-PCIE-guide/#test-video","text":"BLIKVM hardware PCIe version is tested wonderful based on pikvm software.","title":"Test Video"},{"location":"BLIKVM-PCIE-guide/#notes","text":"To prevent the CM4 module from contacting the SD card holder, do not remove the insulating tape","title":"Notes"},{"location":"BLIKVM-PCIE-guide/#list","text":"","title":"List"},{"location":"BLIKVM-PCIE-guide/#product-list","text":"BLIKVM PCIe card version 1 BLIKVM PCIe add-in card 1 Cooling fan 1 OLED display 1 USB to TTL module 1 HDMI pass-through EDID emulator 1 VGA-HDMI module 1 32G Micro SD card 1 HDMI cable 0.5m 1 HDMI Coupler 1 Network cable 1m 1 USB-A to USB-C cable 1m 2 Dupont USB cable 0.4m 1 WiFi antenna 1 Dupont Cables 8pin Male to Male 40cm 1 Dupont Cables 8pin Male to Female 40cm 1 Metal heatsink 1 Phillips screwdriver 1 Cross Wrench Sleeve 1 BLIKVM PCIe plug-n-play version 1 BLIKVM PCIe add-in card 1 CM4 102000 1 Cooling fan 1 OLED display 1 USB to TTL module 1 HDMI pass-through EDID emulator 1 VGA-HDMI module 1 32G Micro SD card 1 HDMI cable 0.5m 1 HDMI Coupler 1 Network cable 1m 1 USB-A to USB-C cable 1m 2 Dupont USB cable 0.4m 1 WiFi antenna 1 Dupont Cables 8pin Male to Male 40cm 1 Dupont Cables 8pin Male to Female 40cm 1 Metal heatsink 1 Phillips screwdriver 1 Cross Wrench Sleeve 1","title":"Product List"},{"location":"BLIKVM-PCIE-guide/#list-of-items-prepared-by-the-user","text":"Raspberry Pi CM4(if you order PCIe card only) 1 PoE-sourcing equipment or 5V/3A USB adapter 1 CR1220 coin cell battery 1","title":"List of items prepared by the user"},{"location":"BLIKVM-PCIE-guide/#buy-link","text":"Buy v2","title":"Buy link"},{"location":"BLIKVM-PCIE-guide/#3d-printable-case","text":"A simple snap fit case for the PCIe. Download file","title":"3D printable case"},{"location":"BLIKVM-PCIe-installation/","text":"BLIKVM PCIe CM4 Installation Guide 1. Unpack and take out the devices Product List 2. Install the main device Install CM4 and 4 Hex spacers (This article takes CM4 lite as an example, using the image in the Micro SD card, CM4 eMMC user need to burn the image by yourself.)Stick a heat conductive sheet on the top of CM4 , tear off the protective film of the sheet. The main device installation is complete. 3. Connect USB and ATX The motherboard used in this article is Asus H520M-E, the interface definition of different motherboards may be different, please refer to your motherboard manual. 4. Connect OLED The OLED you received does not have a bracket installed. Please refer to the picture for installation. In addition, OLED support is made of acrylic material, which needs to be used after removing the protective film on the surface. The above is the installation steps, and the effect of not tearing the film is as follows. In actual use, please remove the protective film. 5. Connect the HDMI cable Connect the HDMI output port of the computer directly to the HDMI IN port of the product with an HDMI cable. The HDMI pass-through EDID emulator is not necessary! If your computer does not output the correct HDMI format, plug the HDMI pass-through EDID emulator into the HDMI output port of the computer. This allows you to configure a fixed HDMI output format on your computer. 6. Connect the network cable Gigabit Ethernet port standard: IEEE 802.3af PoE input voltage:37v-57v. When using PoE power supply, there is no need to connect the PWR-IN port. 7. Connect PWR-IN When not using PoE power supply, connect the PWR-IN port to a standard 5V/3A USB power supply. 8. Test OLED screen showing device IP and other information. Access the IP address in browser. After passing the test, install the product into the computer case. 9. Install the product into the computer case Disconnect power and wiring, install the product on the motherboard, and reconnect the cables after installation is complete. The color of ATX cable received in different batches may be different. Please directly refer to the pin definition for connection Enjoy! Appendix 1. Install a low profile PCIe I/O bracket Note Appendix 2. Install the cooling fan Usually the metal heatsink is sufficient, the cooling fan is not necessary. The cooling fan is controlled by CM4 via GPIO12. Appendix 3. Install wifi antenna Note","title":"v2 PCIe Illustrated Instructions"},{"location":"BLIKVM-PCIe-installation/#blikvm-pcie-cm4-installation-guide","text":"","title":"BLIKVM PCIe CM4 Installation Guide"},{"location":"BLIKVM-PCIe-installation/#1-unpack-and-take-out-the-devices","text":"Product List","title":"1. Unpack and take out the devices"},{"location":"BLIKVM-PCIe-installation/#2-install-the-main-device","text":"Install CM4 and 4 Hex spacers (This article takes CM4 lite as an example, using the image in the Micro SD card, CM4 eMMC user need to burn the image by yourself.)Stick a heat conductive sheet on the top of CM4 , tear off the protective film of the sheet. The main device installation is complete.","title":"2. Install the main device"},{"location":"BLIKVM-PCIe-installation/#3-connect-usb-and-atx","text":"The motherboard used in this article is Asus H520M-E, the interface definition of different motherboards may be different, please refer to your motherboard manual.","title":"3. Connect USB and ATX"},{"location":"BLIKVM-PCIe-installation/#4-connect-oled","text":"The OLED you received does not have a bracket installed. Please refer to the picture for installation. In addition, OLED support is made of acrylic material, which needs to be used after removing the protective film on the surface. The above is the installation steps, and the effect of not tearing the film is as follows. In actual use, please remove the protective film.","title":"4. Connect OLED"},{"location":"BLIKVM-PCIe-installation/#5-connect-the-hdmi-cable","text":"Connect the HDMI output port of the computer directly to the HDMI IN port of the product with an HDMI cable. The HDMI pass-through EDID emulator is not necessary! If your computer does not output the correct HDMI format, plug the HDMI pass-through EDID emulator into the HDMI output port of the computer. This allows you to configure a fixed HDMI output format on your computer.","title":"5. Connect the HDMI cable"},{"location":"BLIKVM-PCIe-installation/#6-connect-the-network-cable","text":"Gigabit Ethernet port standard: IEEE 802.3af PoE input voltage:37v-57v. When using PoE power supply, there is no need to connect the PWR-IN port.","title":"6. Connect the network cable"},{"location":"BLIKVM-PCIe-installation/#7-connect-pwr-in","text":"When not using PoE power supply, connect the PWR-IN port to a standard 5V/3A USB power supply.","title":"7. Connect PWR-IN"},{"location":"BLIKVM-PCIe-installation/#8-test","text":"OLED screen showing device IP and other information. Access the IP address in browser. After passing the test, install the product into the computer case.","title":"8. Test"},{"location":"BLIKVM-PCIe-installation/#9-install-the-product-into-the-computer-case","text":"Disconnect power and wiring, install the product on the motherboard, and reconnect the cables after installation is complete. The color of ATX cable received in different batches may be different. Please directly refer to the pin definition for connection Enjoy!","title":"9. Install the product into the computer case"},{"location":"BLIKVM-PCIe-installation/#appendix-1-install-a-low-profile-pcie-io-bracket","text":"Note","title":"Appendix 1. Install a low profile PCIe  I/O bracket"},{"location":"BLIKVM-PCIe-installation/#appendix-2-install-the-cooling-fan","text":"Usually the metal heatsink is sufficient, the cooling fan is not necessary. The cooling fan is controlled by CM4 via GPIO12.","title":"Appendix 2. Install the cooling fan"},{"location":"BLIKVM-PCIe-installation/#appendix-3-install-wifi-antenna","text":"Note","title":"Appendix 3. Install wifi antenna"},{"location":"BliKVM-v4-guide/","text":"BliKVM v4 Allwinner BliKVM v4 is a production-ready, plug and play KVM-over-IP device that offers professional users a convenient solution for remote server or workstation management . It is based on Linux and fully open source. With BliKVM, you can easily power on/off, restart your computer, configure UEFI/BIOS settings, and perform OS reinstallation using an emulated Mass Storage Device . BliKVM simulates a keyboard, mouse, and monitor, all accessible through a web browser, ensuring a seamless user experience. Its hardware-level access guarantees independence from specific remote ports, protocols, or services , making it a highly flexible and reliable remote management solution for professionals! BliKVM V4 Datasheet Craft Computing: Goodbye IPMI - Blicube BliKVM V4 Review Lawrence Systems: Blicube BliKVM V4: Is This the Best Linux IP KVM Yet? RainCat: How to install PiKVM on BliKVM v4 Allwinner Features Video capture (HDMI, support 4K@30Hz input) Keyboard forwarding Mouse forwarding HDMI video loop through ATX Control the server power using ATX functions Fullscreen mode Access via Web UI Support multi language switching Support PoE & DC Support WiFi Serial console port 1.33 inch color display Real Time Clock (RTC) HDMI input supported resolution types Installation Requirements In addition to the v4 kit, you will need the following equipment: Power adapter (5V 3A, USB-C port, or 12V 2A DC port). If you plan to use PoE (Power over Ethernet) or if the USB ports on your controlled computers provide sufficient power, a separate power adapter is not required. HDMI cables (at least one). If you also need to use the HDMI loop-out interface, you will need two cables. Ethernet cable(s) (provide based on your requirements). One cable is required for using the ATX power switch function, and one cable is required for using the Ethernet connection. USB-C to USB-A cable (for mouse and keyboard data transmission). Terminal Upgrade Notice! Before upgrading, execute the following command, otherwise, after running apt-get update and apt-get upgrade, the image will fail to start. apt-mark hold linux-dtb-edge-sunxi64 linux-image-edge-sunxi64 Video Guide: Unpacking and connecting case step by step Installation Steps 1. Open the v4 kit package and connect the BliKVM to the controlled computer according to the connection diagram shown below: ATX Connection Please refer to the ATX Connection Guide . 2. Once all the cables are connected, power on the BliKVM. Wait until the display shows the interface, indicating that the device has started up successfully. 3. Read the \"First Steps\" guide carefully. It provides instructions on how to find the device on the network, how to log in, change passwords, and more. Follow the steps described there and then return to this page. 4. Try managing your computer using the BliKVM web interface. Make sure you can see the image and that the keyboard and mouse are working properly. If you encounter any issues, check out our FAQ (it's very helpful). If you find no solution there, seek support in our Discord chat room . 5. You can explore other pages in the wiki to discover more features of BliKVM. Enjoy your experience! Video Mode v4 supports a maximum video input of 4K30Hz, and the default transmission resolution is 1920x1080. Packing List BLIKVM v4 1 WiFi Antenna 1 ATX adapter board 1 ATX Dupont Cables 8pin Male to Male 60cm 1 ATX Dupont Cables 8pin Male to Female 60cm 1 1U Rack Mounting Ears 2 M2.5x5 Screws 8 Silicone Bumper Pellets 1 Serial Console Access via the 5V Port The 5V port can be used both for power supply and serial console access at the same time. The default baud rate is 115200. There is an onboard CH341-based USB to UART converter present inside BliKVM v4 which is connected to UART0 of the mCore-H616 SoC , so you can connect a USB port of a PC to the 5V port without an external UART and a USB-C to dupont adapter. PC USB port current output Be careful when trying to use the 5V port because a PC USB port alone may not be able to provide 3A (5V) which is a documented requirement for the board to work. Either use a 12V 2A DC port at the same time as using the 5V port for serial communication without a USB Splitter board, or use the splitter board to split out the VCC pin and use a separate 5V 3A power supply to provide power to the 5V port's VCC pin. Likewise, when disconnecting a cable from the 12V 2A DC port while BliKVM is powered on, make sure to disconnect the cable from the 5V port first (because that will become the power source for BliKVM v4 after the 12V 2A source is disconnected unless a splitter is used). You should see something like this in your host kernel log (if you are using a Linux-based OS) when attaching a USB cable to the 5V port of BliKVM v4: usb 1-1.2: new full-speed USB device number 12 using xhci_hcd usb 1-1.2: New USB device found, idVendor=1a86, idProduct=7523, bcdDevice=81.34 usb 1-1.2: New USB device strings: Mfr=0, Product=2, SerialNumber=0 usb 1-1.2: Product: USB Serial ch341 1-1.2:1.0: ch341-uart converter detected usb 1-1.2: ch341-uart converter now attached to ttyUSB0 Accessing this port can then be done using GNU screen or TIO : tio /dev/ttyUSB0 mangopimcore login: blikvm # ... If you need to check how much data is received over UART0 you can do this by looking at the counters exposed via proc as follows (the rx counter should increase when the data is sent from an external host if the built-in USB to UART converter is working properly): root@mangopimcore:~# grep '0: uart' /proc/tty/driver/serial 0: uart:16550A mmio:0x05000000 irq:284 tx:20306 rx:40 pe:1 RTS|DTR Dev If you want to develop or port software on v4 hardware yourself, you can refer to this hardware resource description . Buy link Buy v4","title":"BliKVM v4 Allwinner Guide"},{"location":"BliKVM-v4-guide/#blikvm-v4-allwinner","text":"BliKVM v4 is a production-ready, plug and play KVM-over-IP device that offers professional users a convenient solution for remote server or workstation management . It is based on Linux and fully open source. With BliKVM, you can easily power on/off, restart your computer, configure UEFI/BIOS settings, and perform OS reinstallation using an emulated Mass Storage Device . BliKVM simulates a keyboard, mouse, and monitor, all accessible through a web browser, ensuring a seamless user experience. Its hardware-level access guarantees independence from specific remote ports, protocols, or services , making it a highly flexible and reliable remote management solution for professionals! BliKVM V4 Datasheet Craft Computing: Goodbye IPMI - Blicube BliKVM V4 Review Lawrence Systems: Blicube BliKVM V4: Is This the Best Linux IP KVM Yet? RainCat: How to install PiKVM on BliKVM v4 Allwinner","title":"BliKVM v4 Allwinner"},{"location":"BliKVM-v4-guide/#features","text":"Video capture (HDMI, support 4K@30Hz input) Keyboard forwarding Mouse forwarding HDMI video loop through ATX Control the server power using ATX functions Fullscreen mode Access via Web UI Support multi language switching Support PoE & DC Support WiFi Serial console port 1.33 inch color display Real Time Clock (RTC) HDMI input supported resolution types","title":"Features"},{"location":"BliKVM-v4-guide/#installation-requirements","text":"In addition to the v4 kit, you will need the following equipment: Power adapter (5V 3A, USB-C port, or 12V 2A DC port). If you plan to use PoE (Power over Ethernet) or if the USB ports on your controlled computers provide sufficient power, a separate power adapter is not required. HDMI cables (at least one). If you also need to use the HDMI loop-out interface, you will need two cables. Ethernet cable(s) (provide based on your requirements). One cable is required for using the ATX power switch function, and one cable is required for using the Ethernet connection. USB-C to USB-A cable (for mouse and keyboard data transmission). Terminal Upgrade Notice! Before upgrading, execute the following command, otherwise, after running apt-get update and apt-get upgrade, the image will fail to start. apt-mark hold linux-dtb-edge-sunxi64 linux-image-edge-sunxi64 Video Guide: Unpacking and connecting case step by step","title":"Installation Requirements"},{"location":"BliKVM-v4-guide/#installation-steps","text":"1. Open the v4 kit package and connect the BliKVM to the controlled computer according to the connection diagram shown below: ATX Connection Please refer to the ATX Connection Guide . 2. Once all the cables are connected, power on the BliKVM. Wait until the display shows the interface, indicating that the device has started up successfully. 3. Read the \"First Steps\" guide carefully. It provides instructions on how to find the device on the network, how to log in, change passwords, and more. Follow the steps described there and then return to this page. 4. Try managing your computer using the BliKVM web interface. Make sure you can see the image and that the keyboard and mouse are working properly. If you encounter any issues, check out our FAQ (it's very helpful). If you find no solution there, seek support in our Discord chat room . 5. You can explore other pages in the wiki to discover more features of BliKVM. Enjoy your experience!","title":"Installation Steps"},{"location":"BliKVM-v4-guide/#video-mode","text":"v4 supports a maximum video input of 4K30Hz, and the default transmission resolution is 1920x1080.","title":"Video Mode"},{"location":"BliKVM-v4-guide/#packing-list","text":"BLIKVM v4 1 WiFi Antenna 1 ATX adapter board 1 ATX Dupont Cables 8pin Male to Male 60cm 1 ATX Dupont Cables 8pin Male to Female 60cm 1 1U Rack Mounting Ears 2 M2.5x5 Screws 8 Silicone Bumper Pellets 1","title":"Packing List"},{"location":"BliKVM-v4-guide/#serial-console-access-via-the-5v-port","text":"The 5V port can be used both for power supply and serial console access at the same time. The default baud rate is 115200. There is an onboard CH341-based USB to UART converter present inside BliKVM v4 which is connected to UART0 of the mCore-H616 SoC , so you can connect a USB port of a PC to the 5V port without an external UART and a USB-C to dupont adapter. PC USB port current output Be careful when trying to use the 5V port because a PC USB port alone may not be able to provide 3A (5V) which is a documented requirement for the board to work. Either use a 12V 2A DC port at the same time as using the 5V port for serial communication without a USB Splitter board, or use the splitter board to split out the VCC pin and use a separate 5V 3A power supply to provide power to the 5V port's VCC pin. Likewise, when disconnecting a cable from the 12V 2A DC port while BliKVM is powered on, make sure to disconnect the cable from the 5V port first (because that will become the power source for BliKVM v4 after the 12V 2A source is disconnected unless a splitter is used). You should see something like this in your host kernel log (if you are using a Linux-based OS) when attaching a USB cable to the 5V port of BliKVM v4: usb 1-1.2: new full-speed USB device number 12 using xhci_hcd usb 1-1.2: New USB device found, idVendor=1a86, idProduct=7523, bcdDevice=81.34 usb 1-1.2: New USB device strings: Mfr=0, Product=2, SerialNumber=0 usb 1-1.2: Product: USB Serial ch341 1-1.2:1.0: ch341-uart converter detected usb 1-1.2: ch341-uart converter now attached to ttyUSB0 Accessing this port can then be done using GNU screen or TIO : tio /dev/ttyUSB0 mangopimcore login: blikvm # ... If you need to check how much data is received over UART0 you can do this by looking at the counters exposed via proc as follows (the rx counter should increase when the data is sent from an external host if the built-in USB to UART converter is working properly): root@mangopimcore:~# grep '0: uart' /proc/tty/driver/serial 0: uart:16550A mmio:0x05000000 irq:284 tx:20306 rx:40 pe:1 RTS|DTR","title":"Serial Console Access via the 5V Port"},{"location":"BliKVM-v4-guide/#dev","text":"If you want to develop or port software on v4 hardware yourself, you can refer to this hardware resource description .","title":"Dev"},{"location":"BliKVM-v4-guide/#buy-link","text":"Buy v4","title":"Buy link"},{"location":"Datasheet-BliKVM-v4/","text":"BliKVM v4 Allwinner (H616/H313 SOC) BliKVM is a production-ready, plug and play KVM-over-IP device that offers professional users a convenient solution for remote server or workstation management . It is based on Linux and fully open source. With BliKVM, you can easily power on/off, restart your computer, configure UEFI/BIOS settings, and perform OS reinstallation using an emulated Mass Storage Device . BliKVM simulates a keyboard, mouse, and monitor, all accessible through a web browser, ensuring a seamless user experience. Its hardware-level access guarantees independence from specific remote ports, protocols, or services , making it a highly flexible and reliable remote management solution for professionals! Connectivity Diagram 1 USB 2.0 port 10 Antenna interface 2 Power Input 5V 3A & UART 11 RJ45 100M Ethernet port & PoE 3 RJ45 ATX control port 12 Display 1.33 inch LCD 4 HDMI video loop through port 13 Power LED (red) 5 USB-PC port 14 User defined button SW1 6 Power Input 12V 2A 5.5*2.1mm 15 ACT LED (green) 7 HDMI video input port 16 Display ON/OFF button 8 HDMI input status LED (green) 17 Micro SD card slot 9 HDMI output status LED (yellow) Specifications Parameter name Characteristics Power 5V 3A 5V port, USB-PC port 12V 2A 12V port PoE Power over Ethernet (IEEE802.3af compliant) 48V DC Connectivity/Interfaces HDMI-IN HDMI video input port HDMI-OUT HDMI video loop through port USB-PC Keyboard, mouse, mass storage, and other external device emulation) ATX Turn on/off or restart the controlled computer WiFi & Bluetooth IEEE802.11 b/g/n + BLE4.2 Micro SD card slot Persistent storage for OS and your data 5V port 5V 3A power or serial console management port Displays and indicators LED indicators Power LED, ACT LED, HDMI input status LED (green)\uff0c HDMI output status LED (yellow) LCD display LCD 240x240 1.33 inch User defined button SW1 Buzzer Find me Video Supported resolutions Up to 4k@30Hz Video compression methods MJPEG Core Chip ALLWINNER H616/H313 RAM 1GB Power consumption Up to 15W Environmental Operating temperature 0\u00b0C to 70\u00b0C Storage temperature -20\u00b0C to 60\u00b0C Dimensions and weight Size 100 (L) x 134 (W) x 44.4 (H) mm Weight 0.45 kg BLIKVM CM4 version OLED display The product comes standard with a monochrome OLED display with a resolution of 128x64, and the chip is SSD1306. The user connects the display to the product with the wiring of the display. The module is connected to CM4 through the I^2^C interface. The wiring definition is shown in the following table. This is a library for the monochrome OLEDs based on SSD1306 drivers. Display(SSD1306) CM4 GND GND VCC 3.3V SCL GPIO3(SCL1,I^2^C) SDA GPIO2(SDA1,I^2^C) Dimensions Schematic Diagram","title":"BliKVM v4 Allwinner (H616/H313 SOC)"},{"location":"Datasheet-BliKVM-v4/#blikvm-v4-allwinner-h616h313-soc","text":"BliKVM is a production-ready, plug and play KVM-over-IP device that offers professional users a convenient solution for remote server or workstation management . It is based on Linux and fully open source. With BliKVM, you can easily power on/off, restart your computer, configure UEFI/BIOS settings, and perform OS reinstallation using an emulated Mass Storage Device . BliKVM simulates a keyboard, mouse, and monitor, all accessible through a web browser, ensuring a seamless user experience. Its hardware-level access guarantees independence from specific remote ports, protocols, or services , making it a highly flexible and reliable remote management solution for professionals!","title":"BliKVM v4 Allwinner (H616/H313 SOC)"},{"location":"Datasheet-BliKVM-v4/#connectivity-diagram","text":"1 USB 2.0 port 10 Antenna interface 2 Power Input 5V 3A & UART 11 RJ45 100M Ethernet port & PoE 3 RJ45 ATX control port 12 Display 1.33 inch LCD 4 HDMI video loop through port 13 Power LED (red) 5 USB-PC port 14 User defined button SW1 6 Power Input 12V 2A 5.5*2.1mm 15 ACT LED (green) 7 HDMI video input port 16 Display ON/OFF button 8 HDMI input status LED (green) 17 Micro SD card slot 9 HDMI output status LED (yellow)","title":"Connectivity Diagram"},{"location":"Datasheet-BliKVM-v4/#specifications","text":"Parameter name Characteristics Power 5V 3A 5V port, USB-PC port 12V 2A 12V port PoE Power over Ethernet (IEEE802.3af compliant) 48V DC Connectivity/Interfaces HDMI-IN HDMI video input port HDMI-OUT HDMI video loop through port USB-PC Keyboard, mouse, mass storage, and other external device emulation) ATX Turn on/off or restart the controlled computer WiFi & Bluetooth IEEE802.11 b/g/n + BLE4.2 Micro SD card slot Persistent storage for OS and your data 5V port 5V 3A power or serial console management port Displays and indicators LED indicators Power LED, ACT LED, HDMI input status LED (green)\uff0c HDMI output status LED (yellow) LCD display LCD 240x240 1.33 inch User defined button SW1 Buzzer Find me Video Supported resolutions Up to 4k@30Hz Video compression methods MJPEG Core Chip ALLWINNER H616/H313 RAM 1GB Power consumption Up to 15W Environmental Operating temperature 0\u00b0C to 70\u00b0C Storage temperature -20\u00b0C to 60\u00b0C Dimensions and weight Size 100 (L) x 134 (W) x 44.4 (H) mm Weight 0.45 kg BLIKVM CM4 version OLED display The product comes standard with a monochrome OLED display with a resolution of 128x64, and the chip is SSD1306. The user connects the display to the product with the wiring of the display. The module is connected to CM4 through the I^2^C interface. The wiring definition is shown in the following table. This is a library for the monochrome OLEDs based on SSD1306 drivers. Display(SSD1306) CM4 GND GND VCC 3.3V SCL GPIO3(SCL1,I^2^C) SDA GPIO2(SDA1,I^2^C)","title":"Specifications"},{"location":"Datasheet-BliKVM-v4/#dimensions-schematic-diagram","text":"","title":"Dimensions Schematic Diagram"},{"location":"Dev-BliKVM-v4-Allwinner/","text":"Dev BliKVM v4 Allwinner (H616/H313 SOC) BliKVM is a production-ready, plug and play KVM-over-IP device that offers professional users a convenient solution for remote server or workstation management . It is based on Linux and fully open source. With BliKVM, you can easily power on/off, restart your computer, configure UEFI/BIOS settings, and perform OS reinstallation using an emulated Mass Storage Device . BliKVM simulates a keyboard, mouse, and monitor, all accessible through a web browser, ensuring a seamless user experience. Its hardware-level access guarantees independence from specific remote ports, protocols, or services , making it a highly flexible and reliable remote management solution for professionals! System Block Diagram Functional Module Panel Function Pin Description Button SW1 GPIOI1(257) Press for high level Button SW1 GPIOI2(258) Press for high level LED ACT GPIOI5(261) Low level enable LED LED PWR 3V3 PWR LED is always on after power on ATX Function Pin Description LED-PWR GPIOH10(234) Light on for high level LED-HDD GPIOH9(233) Light on for high level SW-PWR GPIOH4(228) High level enable SW-RST GPIOI16(272) High level enable BUZZER Function Pin Description Buzzer GPIOI15(271) High level enable FAN Function Pin Description Fan GPIOI13(269) High level enable LCD Display 1.33-inch LCD display module, driver chip ST7789, resolution 240x240. Function Pin Description LCD_EN GPIOI4(260) Backlight high level enable LCD_RST GPIOI6(262) Reset Low level enable LCD_DC GPIOI3(259) Data/command control pin SPI1_CS GPIOH5 SPI1_CLK GPIOH6 SPI1_MOSI GPIOH7 GND GND 3V3 3V3","title":"v4 Allwinner Dev Guide"},{"location":"Dev-BliKVM-v4-Allwinner/#dev-blikvm-v4-allwinner-h616h313-soc","text":"BliKVM is a production-ready, plug and play KVM-over-IP device that offers professional users a convenient solution for remote server or workstation management . It is based on Linux and fully open source. With BliKVM, you can easily power on/off, restart your computer, configure UEFI/BIOS settings, and perform OS reinstallation using an emulated Mass Storage Device . BliKVM simulates a keyboard, mouse, and monitor, all accessible through a web browser, ensuring a seamless user experience. Its hardware-level access guarantees independence from specific remote ports, protocols, or services , making it a highly flexible and reliable remote management solution for professionals!","title":"Dev BliKVM v4 Allwinner (H616/H313 SOC)"},{"location":"Dev-BliKVM-v4-Allwinner/#system-block-diagram","text":"","title":"System Block Diagram"},{"location":"Dev-BliKVM-v4-Allwinner/#functional-module","text":"","title":"Functional Module"},{"location":"Dev-BliKVM-v4-Allwinner/#panel","text":"Function Pin Description Button SW1 GPIOI1(257) Press for high level Button SW1 GPIOI2(258) Press for high level LED ACT GPIOI5(261) Low level enable LED LED PWR 3V3 PWR LED is always on after power on","title":"Panel"},{"location":"Dev-BliKVM-v4-Allwinner/#atx","text":"Function Pin Description LED-PWR GPIOH10(234) Light on for high level LED-HDD GPIOH9(233) Light on for high level SW-PWR GPIOH4(228) High level enable SW-RST GPIOI16(272) High level enable","title":"ATX"},{"location":"Dev-BliKVM-v4-Allwinner/#buzzer","text":"Function Pin Description Buzzer GPIOI15(271) High level enable","title":"BUZZER"},{"location":"Dev-BliKVM-v4-Allwinner/#fan","text":"Function Pin Description Fan GPIOI13(269) High level enable","title":"FAN"},{"location":"Dev-BliKVM-v4-Allwinner/#lcd-display","text":"1.33-inch LCD display module, driver chip ST7789, resolution 240x240. Function Pin Description LCD_EN GPIOI4(260) Backlight high level enable LCD_RST GPIOI6(262) Reset Low level enable LCD_DC GPIOI3(259) Data/command control pin SPI1_CS GPIOH5 SPI1_CLK GPIOH6 SPI1_MOSI GPIOH7 GND GND 3V3 3V3","title":"LCD Display"},{"location":"Expand_Filesystem/","text":"Expand Filesystem If you find that the free space of the raspberry pi SD card or eMMC is smaller than the capacity of the actual SD card or eMMC, you need to do the following to expand the raspberry pi. If you find that the system does not have the raspi config tool, you can use Method 2 (use the GParted partition tool). Method 1: Use raspi-config tool If you are using a mirror after June 2023 and have added a third read-write partition, this method is no longer applicable. Please refer to method 2 and method 3. 1. Open raspi-config. sudo raspi-config 2. Choose Advancd Options\uff1a 3. Choose Expand Filesystem\uff1a 4. Ok: 5. Execute the command resize2fs /dev/mmcblk0p2 in the terminal to see that the SD card has been successfully expanded. Method 2: Use GParted tool 1. Connect the SD card or EMMc that has burned the image to the computer through USB. Take the GParted partition tool on Linux as an example. Other platforms also have similar partition tools. Open GParted software and select SD card: 2. By observing the partition of the SD card in the above figure, we can find that 2.01GB and 21.87GB of space are unused before and after the sdb3 partition, which is the space we want to expand. Select the sdb3 partition and click Resize. 3. You can drag the white partition of sdb3 to the leftmost and rightmost, or fill in 25958 with \"Previous Free Space\" as \"0\" and \"New Size\" as \"Maximum Size\", and then click Resize in the lower right corner. Then click OK to see that all unused space of sd has been used. 4. Insert the SD card into the device and start it. Method 3: Use script If you are using a BliKVM image, you can run the following script on KVM to automatically expand the space. 1. Log in to the KVM terminal, confirm that the system has read and write permissions, run vim expand.sh on any path, and write the following content to expand.sh. If your hardware is v1 , v2 or v3 , use: #!/bin/bash set -x resize_mmcblk0p3 () { echo \"Resizing mmcblk0p3 partition...\" parted /dev/mmcblk0 resizepart 3 100 % resize2fs /dev/mmcblk0p3 echo \"mmcblk0p3 partition resized successfully.\" } echo \"Starting partition resizing...\" resize_mmcblk0p3 echo \"Partition resizing completed.\" If your hardware is v4 , use: #!/bin/bash set -x resize_mmcblk0p1 () { echo \"Resizing mmcblk0p1 partition...\" parted /dev/mmcblk0 resizepart 1 100 % resize2fs /dev/mmcblk0p1 echo \"mmcblk0p1 partition resized successfully.\" } echo \"Starting partition resizing...\" resize_mmcblk0p1 echo \"Partition resizing completed.\" If you are using a PiKVM image, you can run the script below on the KVM to automatically expand the space. 1. Log in to the KVM terminal, confirm that the system has read and write permissions, run vim expand.sh on any path, and write the following content to expand.sh #!/bin/bash set -x if grep -q 'X-kvmd\\.otgmsd' /etc/fstab ; then part = $( grep 'X-kvmd\\.otgmsd' /etc/fstab | awk '{print $1}' ) # shellcheck disable=SC2206 splitted =( ${ part //=/ } ) if [ \" ${ splitted [0] } \" == LABEL ] ; then label = ${ splitted [1] } part = $( blkid -c /dev/null -L \" $label \" ) else label = PIMSD fi unset splitted disk = /dev/ $( lsblk -no pkname \" $part \" ) npart = $( cat \"/sys/class/block/ ${ part // \\/ dev \\/ / } /partition\" ) umount \" $part \" parted \" $disk \" -a optimal -s resizepart \" $npart \" 100 % yes | mkfs.ext4 -L \" $label \" -F -m 0 \" $part \" mount \" $part \" unset disk part npart label fi 2. Execute bash expand.sh on the terminal and wait for the execution to complete.","title":"Expand Filesystem"},{"location":"Expand_Filesystem/#expand-filesystem","text":"If you find that the free space of the raspberry pi SD card or eMMC is smaller than the capacity of the actual SD card or eMMC, you need to do the following to expand the raspberry pi. If you find that the system does not have the raspi config tool, you can use Method 2 (use the GParted partition tool).","title":"Expand Filesystem"},{"location":"Expand_Filesystem/#method-1-use-raspi-config-tool","text":"If you are using a mirror after June 2023 and have added a third read-write partition, this method is no longer applicable. Please refer to method 2 and method 3. 1. Open raspi-config. sudo raspi-config 2. Choose Advancd Options\uff1a 3. Choose Expand Filesystem\uff1a 4. Ok: 5. Execute the command resize2fs /dev/mmcblk0p2 in the terminal to see that the SD card has been successfully expanded.","title":"Method 1: Use raspi-config tool"},{"location":"Expand_Filesystem/#method-2-use-gparted-tool","text":"1. Connect the SD card or EMMc that has burned the image to the computer through USB. Take the GParted partition tool on Linux as an example. Other platforms also have similar partition tools. Open GParted software and select SD card: 2. By observing the partition of the SD card in the above figure, we can find that 2.01GB and 21.87GB of space are unused before and after the sdb3 partition, which is the space we want to expand. Select the sdb3 partition and click Resize. 3. You can drag the white partition of sdb3 to the leftmost and rightmost, or fill in 25958 with \"Previous Free Space\" as \"0\" and \"New Size\" as \"Maximum Size\", and then click Resize in the lower right corner. Then click OK to see that all unused space of sd has been used. 4. Insert the SD card into the device and start it.","title":"Method 2: Use GParted tool"},{"location":"Expand_Filesystem/#method-3-use-script","text":"If you are using a BliKVM image, you can run the following script on KVM to automatically expand the space. 1. Log in to the KVM terminal, confirm that the system has read and write permissions, run vim expand.sh on any path, and write the following content to expand.sh. If your hardware is v1 , v2 or v3 , use: #!/bin/bash set -x resize_mmcblk0p3 () { echo \"Resizing mmcblk0p3 partition...\" parted /dev/mmcblk0 resizepart 3 100 % resize2fs /dev/mmcblk0p3 echo \"mmcblk0p3 partition resized successfully.\" } echo \"Starting partition resizing...\" resize_mmcblk0p3 echo \"Partition resizing completed.\" If your hardware is v4 , use: #!/bin/bash set -x resize_mmcblk0p1 () { echo \"Resizing mmcblk0p1 partition...\" parted /dev/mmcblk0 resizepart 1 100 % resize2fs /dev/mmcblk0p1 echo \"mmcblk0p1 partition resized successfully.\" } echo \"Starting partition resizing...\" resize_mmcblk0p1 echo \"Partition resizing completed.\" If you are using a PiKVM image, you can run the script below on the KVM to automatically expand the space. 1. Log in to the KVM terminal, confirm that the system has read and write permissions, run vim expand.sh on any path, and write the following content to expand.sh #!/bin/bash set -x if grep -q 'X-kvmd\\.otgmsd' /etc/fstab ; then part = $( grep 'X-kvmd\\.otgmsd' /etc/fstab | awk '{print $1}' ) # shellcheck disable=SC2206 splitted =( ${ part //=/ } ) if [ \" ${ splitted [0] } \" == LABEL ] ; then label = ${ splitted [1] } part = $( blkid -c /dev/null -L \" $label \" ) else label = PIMSD fi unset splitted disk = /dev/ $( lsblk -no pkname \" $part \" ) npart = $( cat \"/sys/class/block/ ${ part // \\/ dev \\/ / } /partition\" ) umount \" $part \" parted \" $disk \" -a optimal -s resizepart \" $npart \" 100 % yes | mkfs.ext4 -L \" $label \" -F -m 0 \" $part \" mount \" $part \" unset disk part npart label fi 2. Execute bash expand.sh on the terminal and wait for the execution to complete.","title":"Method 3: Use script"},{"location":"OLED-display/","text":"Principle After v1.5.0 version, to avoid OLED/LCD display burn-in the display's on-time is only turned on according to its configuration. Configuration // All time-parameters are in seconds, and are required to be integer multiples of 5. // This json file is on /mnt/exec/release/config/app.json \"Display\":{ \"isActive\": true, \"mode\": 1, \"onBootTime\": 3600, \"cycleInterval\": 300, \"displayTime\": 30, } Use isActive to activate the display :rotating_light: . While \"isActive\": \"false\" , the display will not function. All BliKVM versions mode 0 always on, doesn't care about any of the paramters 1 Display remains on for onBootTime seconds, after which the display turns off. Depends on \"onBootTime\" 2 Every period of cycleInterval , the display turns on for displayTime seconds`, then turns off. :rotating_light: Depends on \"cycleInterval\"and \"displayTime\" Only BliKVM v4 Allwinner Since v4 has the sw1 buttons, if set mode to 1. Behavior: On Boot: the display turns on for onBootTime seconds, then automatically turns off. On Button Press (sw1): Pressing sw1 turns on the display for displayTime seconds. If the display is already on, pressing sw1 will have no impact at all.","title":"OLED Display"},{"location":"OLED-display/#principle","text":"After v1.5.0 version, to avoid OLED/LCD display burn-in the display's on-time is only turned on according to its configuration.","title":"Principle"},{"location":"OLED-display/#configuration","text":"// All time-parameters are in seconds, and are required to be integer multiples of 5. // This json file is on /mnt/exec/release/config/app.json \"Display\":{ \"isActive\": true, \"mode\": 1, \"onBootTime\": 3600, \"cycleInterval\": 300, \"displayTime\": 30, } Use isActive to activate the display :rotating_light: . While \"isActive\": \"false\" , the display will not function.","title":"Configuration"},{"location":"OLED-display/#all-blikvm-versions","text":"mode 0 always on, doesn't care about any of the paramters 1 Display remains on for onBootTime seconds, after which the display turns off. Depends on \"onBootTime\" 2 Every period of cycleInterval , the display turns on for displayTime seconds`, then turns off. :rotating_light: Depends on \"cycleInterval\"and \"displayTime\"","title":"All BliKVM versions"},{"location":"OLED-display/#only-blikvm-v4-allwinner","text":"Since v4 has the sw1 buttons, if set mode to 1. Behavior: On Boot: the display turns on for onBootTime seconds, then automatically turns off. On Button Press (sw1): Pressing sw1 turns on the display for displayTime seconds. If the display is already on, pressing sw1 will have no impact at all.","title":"Only BliKVM v4 Allwinner"},{"location":"Product-Datasheet-BliKVM-v1-RPI-CM4/","text":"BliKVM v1 (RPI CM4) BliKVM is a production-ready, plug and play KVM-over-IP device that offers professional users a convenient solution for remote server or workstation management . It is based on Linux and fully open source. With BliKVM, you can easily power on/off, restart your computer, configure UEFI/BIOS settings, and perform OS reinstallation using an emulated Mass Storage Device . BliKVM simulates a keyboard, mouse, and monitor, all accessible through a web browser, ensuring a seamless user experience. Its hardware-level access guarantees independence from specific remote ports, protocols, or services , making it a highly flexible and reliable remote management solution for professionals! Connectivity diagram 1 OTG port 7 Micro SD card slot 2 USB3.0 x2 8 ACT LED (green) 3 ATX control port 9 Ethernet port 4 HDMI video input port 10 OLED Display 5 PWR IN port 11 Antenna mounting hole 6 Power LED (red) Specifications Parameter name Characteristics Power 5V 3A PWR IN port Connectivity/Interfaces HDMI IN HDMI video input port OTG Keyboard, mouse, mass storage, and other external device emulation CN-ATX Turn on/off or restart the controlled computer Micro SD card slot Persistent storage for OS and your data PWR IN port 5V 3A power port Displays and indicators LED indicators Power LED (red), ACT LED (green) OLED display OLED 128x64 0.96 inch Video Supported resolutions Up to 1920x1200@60Hz Video compression methods H.264, MJPEG Core Chip Raspberry Pi Compute Module 4 Power consumption Up to 15W Environmental Operating temperature 0\u00b0C to 70\u00b0C Storage temperature -20\u00b0C to 60\u00b0C Dimensions and weight Size 120(L) x 70W) x 37(H) mm Weight 0.45 kg Dimensions Schematic Diagram","title":"BliKVM v1 (RPI CM4)"},{"location":"Product-Datasheet-BliKVM-v1-RPI-CM4/#blikvm-v1-rpi-cm4","text":"BliKVM is a production-ready, plug and play KVM-over-IP device that offers professional users a convenient solution for remote server or workstation management . It is based on Linux and fully open source. With BliKVM, you can easily power on/off, restart your computer, configure UEFI/BIOS settings, and perform OS reinstallation using an emulated Mass Storage Device . BliKVM simulates a keyboard, mouse, and monitor, all accessible through a web browser, ensuring a seamless user experience. Its hardware-level access guarantees independence from specific remote ports, protocols, or services , making it a highly flexible and reliable remote management solution for professionals!","title":"BliKVM v1 (RPI CM4)"},{"location":"Product-Datasheet-BliKVM-v1-RPI-CM4/#connectivity-diagram","text":"1 OTG port 7 Micro SD card slot 2 USB3.0 x2 8 ACT LED (green) 3 ATX control port 9 Ethernet port 4 HDMI video input port 10 OLED Display 5 PWR IN port 11 Antenna mounting hole 6 Power LED (red)","title":"Connectivity diagram"},{"location":"Product-Datasheet-BliKVM-v1-RPI-CM4/#specifications","text":"Parameter name Characteristics Power 5V 3A PWR IN port Connectivity/Interfaces HDMI IN HDMI video input port OTG Keyboard, mouse, mass storage, and other external device emulation CN-ATX Turn on/off or restart the controlled computer Micro SD card slot Persistent storage for OS and your data PWR IN port 5V 3A power port Displays and indicators LED indicators Power LED (red), ACT LED (green) OLED display OLED 128x64 0.96 inch Video Supported resolutions Up to 1920x1200@60Hz Video compression methods H.264, MJPEG Core Chip Raspberry Pi Compute Module 4 Power consumption Up to 15W Environmental Operating temperature 0\u00b0C to 70\u00b0C Storage temperature -20\u00b0C to 60\u00b0C Dimensions and weight Size 120(L) x 70W) x 37(H) mm Weight 0.45 kg","title":"Specifications"},{"location":"Product-Datasheet-BliKVM-v1-RPI-CM4/#dimensions-schematic-diagram","text":"","title":"Dimensions Schematic Diagram"},{"location":"atx-guide/","text":"ATXA guide 1. Introduction ATXA is an ATX adapter board to manage the power of your computer. The product includes two modules; A-board and B-board. A-board is connected to the Raspberry Pi, B-board is connected to the computer's motherboard, and A-board is connected to B-board through a network cable. Join the Discord Community Chat for news, questions and support! ATXA_A ATXA_B 2. A-board A-board is connected to the Raspberry Pi. The following table is a typical connection method in PiKVM application. A-board RPI4 GND GND 3V3 3V3 LED PWR GPIO24 LED HDD GPIO22 SW PWR GPIO23 SW RST GPIO27 A-board is connected to B-board through a network cable. The following table is the corresponding relationship between the pin status of A-board and B-board. Pins on A-board Pins on B-board LED PWR is HIGH LED PWR+ is HIGH, LED PWR- is LOW LED PWR is LOW LED PWR+ is LOW, LED PWR- is LOW LED HDD is HIGH LED HDD+ is HIGH, LED HDD- is LOW LED HDD is LOW LED HDD+ is LOW, LED HDD- is LOW SW PWR is HIGH BTN PWR+ and BTN PWR- connected, the power button is pressed SW PWR is LOW BTN PWR+ and BTN PWR- disconnected, the power button is unpressed SW RST is HIGH BTN RST+ and BTN RST- connected, the reset button is pressed SW RST is LOW BTN RST+ and BTN RST- disconnected, the reset button is unpressed 3. B-board The b-board has an adapted full-height and half-height metal PCI mounting plate, which can be installed on the computer case. The user connects the pins on the B-board to the ATX control interface on the computer motherboard using the color DuPont cables provided with the product. ATXA-B Instructions for connecting to the computer motherboard According to the instructions of the computer motherboard, first find the position of the ATX function related pins on the motherboard, and then unplug the ATX ray that has been connected to the motherboard. After unplugging, the power button of the computer will lose its function. There are two rows of 8PIN pins on the ATXA-B motherboard. It is unnecessary to distinguish between the two rows of pins when they are used with the same functions. One row of pins is used for KVM to control ATX-related functions, and the other row of pins is connected to the ATX DuPont head unplugged from the main board to maintain the original chassis power button function. Connect each wire according to the specific pin definitions on the motherboard and ATXA-B. See the following figure for the connection relationship\uff1a 4.Mechanical Diagram 5. Test video YouTube: ATX 6. Purchase Purchase\uff1a ATX","title":"ATX Guide"},{"location":"atx-guide/#atxa-guide","text":"","title":"ATXA guide"},{"location":"atx-guide/#1-introduction","text":"ATXA is an ATX adapter board to manage the power of your computer. The product includes two modules; A-board and B-board. A-board is connected to the Raspberry Pi, B-board is connected to the computer's motherboard, and A-board is connected to B-board through a network cable. Join the Discord Community Chat for news, questions and support! ATXA_A ATXA_B","title":"1. Introduction"},{"location":"atx-guide/#2-a-board","text":"A-board is connected to the Raspberry Pi. The following table is a typical connection method in PiKVM application. A-board RPI4 GND GND 3V3 3V3 LED PWR GPIO24 LED HDD GPIO22 SW PWR GPIO23 SW RST GPIO27 A-board is connected to B-board through a network cable. The following table is the corresponding relationship between the pin status of A-board and B-board. Pins on A-board Pins on B-board LED PWR is HIGH LED PWR+ is HIGH, LED PWR- is LOW LED PWR is LOW LED PWR+ is LOW, LED PWR- is LOW LED HDD is HIGH LED HDD+ is HIGH, LED HDD- is LOW LED HDD is LOW LED HDD+ is LOW, LED HDD- is LOW SW PWR is HIGH BTN PWR+ and BTN PWR- connected, the power button is pressed SW PWR is LOW BTN PWR+ and BTN PWR- disconnected, the power button is unpressed SW RST is HIGH BTN RST+ and BTN RST- connected, the reset button is pressed SW RST is LOW BTN RST+ and BTN RST- disconnected, the reset button is unpressed","title":"2. A-board"},{"location":"atx-guide/#3-b-board","text":"The b-board has an adapted full-height and half-height metal PCI mounting plate, which can be installed on the computer case. The user connects the pins on the B-board to the ATX control interface on the computer motherboard using the color DuPont cables provided with the product. ATXA-B Instructions for connecting to the computer motherboard According to the instructions of the computer motherboard, first find the position of the ATX function related pins on the motherboard, and then unplug the ATX ray that has been connected to the motherboard. After unplugging, the power button of the computer will lose its function. There are two rows of 8PIN pins on the ATXA-B motherboard. It is unnecessary to distinguish between the two rows of pins when they are used with the same functions. One row of pins is used for KVM to control ATX-related functions, and the other row of pins is connected to the ATX DuPont head unplugged from the main board to maintain the original chassis power button function. Connect each wire according to the specific pin definitions on the motherboard and ATXA-B. See the following figure for the connection relationship\uff1a","title":"3. B-board"},{"location":"atx-guide/#4mechanical-diagram","text":"","title":"4.Mechanical Diagram"},{"location":"atx-guide/#5-test-video","text":"YouTube: ATX","title":"5. Test video"},{"location":"atx-guide/#6-purchase","text":"Purchase\uff1a ATX","title":"6. Purchase"},{"location":"atx/","text":"ATX Control Board To manage the power of your computer, you need to install an ATX control board inside the chassis and connect it to the motherboard (to enable KVM control of power on/off via the ATX switch). There is a female-to-female cable that connects from the motherboard to the ATX control board and a male-to-female cable that connects from the ATX control board to the front panel (to keep the power on/off button on the chassis functional). The interface on the ATX control board has two ports (TO CASE, TO MB), and both ports have the same functionality, so they can be used interchangeably. ATX compatibility Laptops are not compatible with ATX as they lack the required ATX pins. This method is only applicable to Desktop PC's and servers. Detailed Instructions 1. Connect the two cables to the ATX control board. To secure the ATX control board inside the chassis, you can choose to mount it on a bracket attached to a PCIe slot. Example 2. Locate the motherboard pins responsible for connecting the front panel buttons and LEDs and disconnect them. Usually, the cables and connectors on the motherboard are labeled. If you're unsure, you can refer to your motherboard's documentation. Example 3. Connect the DuPont male connector from the front panel to the DuPont female connector on the ATX cable, following the pin definitions and paying attention to the labels and polarity (+ or -). Example 4. Using the same method, connect the female pins from the ATX board to the corresponding connector on the motherboard. Refer to your motherboard's documentation to determine which pins on the motherboard connect to which pins on the ATX control board. Sometimes, this information is printed on the motherboard. Example 5. Install the ATX board into a PCI slot on the chassis and secure it with screws or use alternative mounting methods according to your preference. Example 6. Arrange the cables neatly and secure them as needed. Make sure the cables do not come into contact with any fans inside the chassis. Use an Ethernet cable to connect the ATX board to the ATX interface of the BliKVM. With this, the hardware connection of the ATX control board is complete.","title":"ATX Control Board"},{"location":"atx/#atx-control-board","text":"To manage the power of your computer, you need to install an ATX control board inside the chassis and connect it to the motherboard (to enable KVM control of power on/off via the ATX switch). There is a female-to-female cable that connects from the motherboard to the ATX control board and a male-to-female cable that connects from the ATX control board to the front panel (to keep the power on/off button on the chassis functional). The interface on the ATX control board has two ports (TO CASE, TO MB), and both ports have the same functionality, so they can be used interchangeably. ATX compatibility Laptops are not compatible with ATX as they lack the required ATX pins. This method is only applicable to Desktop PC's and servers.","title":"ATX Control Board"},{"location":"atx/#detailed-instructions","text":"1. Connect the two cables to the ATX control board. To secure the ATX control board inside the chassis, you can choose to mount it on a bracket attached to a PCIe slot. Example 2. Locate the motherboard pins responsible for connecting the front panel buttons and LEDs and disconnect them. Usually, the cables and connectors on the motherboard are labeled. If you're unsure, you can refer to your motherboard's documentation. Example 3. Connect the DuPont male connector from the front panel to the DuPont female connector on the ATX cable, following the pin definitions and paying attention to the labels and polarity (+ or -). Example 4. Using the same method, connect the female pins from the ATX board to the corresponding connector on the motherboard. Refer to your motherboard's documentation to determine which pins on the motherboard connect to which pins on the ATX control board. Sometimes, this information is printed on the motherboard. Example 5. Install the ATX board into a PCI slot on the chassis and secure it with screws or use alternative mounting methods according to your preference. Example 6. Arrange the cables neatly and secure them as needed. Make sure the cables do not come into contact with any fans inside the chassis. Use an Ethernet cable to connect the ATX board to the ATX interface of the BliKVM. With this, the hardware connection of the ATX control board is complete.","title":"Detailed Instructions"},{"location":"bliswitch-v1-guide/","text":"BliSwitch v1 4-port KVM switch BliKVM-Switch-V1.0 uses and tests video, supporting BliKVM and PiKVM Introduction BliKVM-Switch-V1.0 is a four channel HDMI+USB switch, which supports panel button, desktop controller and KVM remote to switch between computers. Maximum support of the switch itself 4K@60HZ Plug and play, driver free. BliKVM-Switch-V1.0 uses the same hardware solution as XH-HK4401, AG7210 HDMI switching chip supports up to 4K@60Hz, CH444G USB switching chip supports USB2.0. The difference is that BliKVM-Switch-V1.0 is equipped with KVM USB cable, which can realize KVM port selection. BliKVM-Switch-V1.0 is compatible with BliKVM and PiKVM. points for attention The switch can be powered directly from the USB input to the computer, that is, the switch can work normally without power supply. If the USB power supply of the controlled computer cannot make the switch work, the switch can be powered independently. The switch package only provides a USB power cable, but does not provide a power adapter. The customer needs to configure a power adapter (5V). Desktop controller can control HDMI switch with USB cable. For customers who do not use KVM, this is another way of switching for easy cable management. HDMI input support up to 4096x2160/60Hz resolution 4K 60Hz input, the power is about 200 mW. Interface Diagram There must be 2 USB cables from KVM to BliKVM, one for controller, and second from USB on KVM to USB-PC on BliKVM. Front and back interface diagram, the control interface in the right figure is the remote control interface.A cable with one end being USB-A and the other end being micro USB, labeled with the word \"KVM,\" serves as the control cable. The micro USB end is connected to the control interface of the switch, while the USB-A end is connected to the USB port of the KVM. Schematic Diagram of Side Interface. Equipment connection diagram. Software Configuration If you are using BliKVM software, from version 1.5.3 onwards, power on the switch and connect the cables before starting BliKVM, then enable and configure it through the web interface. If multiple USB devices are connected, use the command ls /dev/ttyUSB* to identify the switch's device name, then configure it through the web interface. If you use PiKVM software, please configure it according to the following instructions. Log in to PiKVM through SSH. The user name and password are root; Uses the rw command on the terminal to change the system to a read-write system; Edit /etc/kvmd/override.yaml . After the original content, add: kvmd: gpio: drivers: hk: type: xh_hk4401 device: /dev/ttyUSB0 scheme: ch0_led: driver: hk pin: 0 mode: input ch1_led: driver: hk pin: 1 mode: input ch2_led: driver: hk pin: 2 mode: input ch3_led: driver: hk pin: 3 mode: input ch0_button: driver: hk pin: 0 mode: output switch: false ch1_button: driver: hk pin: 1 mode: output switch: false ch2_button: driver: hk pin: 2 mode: output switch: false ch3_button: driver: hk pin: 3 mode: output switch: false view: table: - [\"#Input 1\", ch0_led, ch0_button] - [\"#Input 2\", ch1_led, ch1_button] - [\"#Input 3\", ch2_led, ch2_button] - [\"#Input 4\", ch3_led, ch3_button] Use the ro command on the terminal to reset the system to a read-only system; Use systemctl restart kvmd on the terminal to restart the service; Enter the PiKVM web interface and click the \"GPIO\" menu. You should see 4 inputs, one of which has a green circle to indicate that it is currently selected. Click a different input to change the selected host. The above configuration is based on the 2022 PiKVM image. If you are using the latest PiKVM image or latest software version, edit /etc/kvmd/override.yaml and add the line: protocol: 2 . Example: kvmd: gpio: drivers: hk: type: xh_hk4401 protocol: 2 device: /dev/ttyUSB0 scheme: ch0_led: driver: hk ... Control Protocol If you want to use the blicube switch on other platforms, please refer to the following protocol The communication baud rate is 19200 The message to switch to channel 1 is SW1\\r\\nG01gA The message to switch to channel 2 is SW2\\r\\nG02gA The message to switch to channel 3 is SW3\\r\\nG03gA The message to switch to channel 4 is SW4\\r\\nG04gA The message returned by the switch for the current channel is: G01gA , G02gA , G03gA , G04gA Packing List product quantity note HDMI KVM Switch(4-channel) 1 110mm * 60mm * 33mm Desktop controller 1 USB cable of Desktop controller 4 length: 1.2m HDMI(Standard) cable 5 length: 1.5m USB power cable 1 length: 0.8m USB cable of KVM 1 length: 1.5m USB cable of Desktop controller 1 length: 1m","title":"Multiport BliSwitch v1 (4-port)"},{"location":"bliswitch-v1-guide/#bliswitch-v1-4-port-kvm-switch","text":"BliKVM-Switch-V1.0 uses and tests video, supporting BliKVM and PiKVM","title":"BliSwitch v1 4-port KVM switch"},{"location":"bliswitch-v1-guide/#introduction","text":"BliKVM-Switch-V1.0 is a four channel HDMI+USB switch, which supports panel button, desktop controller and KVM remote to switch between computers. Maximum support of the switch itself 4K@60HZ Plug and play, driver free. BliKVM-Switch-V1.0 uses the same hardware solution as XH-HK4401, AG7210 HDMI switching chip supports up to 4K@60Hz, CH444G USB switching chip supports USB2.0. The difference is that BliKVM-Switch-V1.0 is equipped with KVM USB cable, which can realize KVM port selection. BliKVM-Switch-V1.0 is compatible with BliKVM and PiKVM. points for attention The switch can be powered directly from the USB input to the computer, that is, the switch can work normally without power supply. If the USB power supply of the controlled computer cannot make the switch work, the switch can be powered independently. The switch package only provides a USB power cable, but does not provide a power adapter. The customer needs to configure a power adapter (5V). Desktop controller can control HDMI switch with USB cable. For customers who do not use KVM, this is another way of switching for easy cable management. HDMI input support up to 4096x2160/60Hz resolution 4K 60Hz input, the power is about 200 mW.","title":"Introduction"},{"location":"bliswitch-v1-guide/#interface-diagram","text":"There must be 2 USB cables from KVM to BliKVM, one for controller, and second from USB on KVM to USB-PC on BliKVM. Front and back interface diagram, the control interface in the right figure is the remote control interface.A cable with one end being USB-A and the other end being micro USB, labeled with the word \"KVM,\" serves as the control cable. The micro USB end is connected to the control interface of the switch, while the USB-A end is connected to the USB port of the KVM. Schematic Diagram of Side Interface. Equipment connection diagram.","title":"Interface Diagram"},{"location":"bliswitch-v1-guide/#software-configuration","text":"If you are using BliKVM software, from version 1.5.3 onwards, power on the switch and connect the cables before starting BliKVM, then enable and configure it through the web interface. If multiple USB devices are connected, use the command ls /dev/ttyUSB* to identify the switch's device name, then configure it through the web interface. If you use PiKVM software, please configure it according to the following instructions. Log in to PiKVM through SSH. The user name and password are root; Uses the rw command on the terminal to change the system to a read-write system; Edit /etc/kvmd/override.yaml . After the original content, add: kvmd: gpio: drivers: hk: type: xh_hk4401 device: /dev/ttyUSB0 scheme: ch0_led: driver: hk pin: 0 mode: input ch1_led: driver: hk pin: 1 mode: input ch2_led: driver: hk pin: 2 mode: input ch3_led: driver: hk pin: 3 mode: input ch0_button: driver: hk pin: 0 mode: output switch: false ch1_button: driver: hk pin: 1 mode: output switch: false ch2_button: driver: hk pin: 2 mode: output switch: false ch3_button: driver: hk pin: 3 mode: output switch: false view: table: - [\"#Input 1\", ch0_led, ch0_button] - [\"#Input 2\", ch1_led, ch1_button] - [\"#Input 3\", ch2_led, ch2_button] - [\"#Input 4\", ch3_led, ch3_button] Use the ro command on the terminal to reset the system to a read-only system; Use systemctl restart kvmd on the terminal to restart the service; Enter the PiKVM web interface and click the \"GPIO\" menu. You should see 4 inputs, one of which has a green circle to indicate that it is currently selected. Click a different input to change the selected host. The above configuration is based on the 2022 PiKVM image. If you are using the latest PiKVM image or latest software version, edit /etc/kvmd/override.yaml and add the line: protocol: 2 . Example: kvmd: gpio: drivers: hk: type: xh_hk4401 protocol: 2 device: /dev/ttyUSB0 scheme: ch0_led: driver: hk ...","title":"Software Configuration"},{"location":"bliswitch-v1-guide/#control-protocol","text":"If you want to use the blicube switch on other platforms, please refer to the following protocol The communication baud rate is 19200 The message to switch to channel 1 is SW1\\r\\nG01gA The message to switch to channel 2 is SW2\\r\\nG02gA The message to switch to channel 3 is SW3\\r\\nG03gA The message to switch to channel 4 is SW4\\r\\nG04gA The message returned by the switch for the current channel is: G01gA , G02gA , G03gA , G04gA","title":"Control Protocol"},{"location":"bliswitch-v1-guide/#packing-list","text":"product quantity note HDMI KVM Switch(4-channel) 1 110mm * 60mm * 33mm Desktop controller 1 USB cable of Desktop controller 4 length: 1.2m HDMI(Standard) cable 5 length: 1.5m USB power cable 1 length: 0.8m USB cable of KVM 1 length: 1.5m USB cable of Desktop controller 1 length: 1m","title":"Packing List"},{"location":"bliswitch-v2-guide/","text":"BliSwitch v2 8-port KVM+ATX switch The BliSwitch v2 is an 8-channel KVM+ATX switch for 8 hosts to share input and power. Function: 8 hosts share a keyboard, mouse, and display, with power control for all. Switch Method: Button or USB control. Features ATX on each port(support button and remote control) Full control via web ui Compatible with BLIKVM V1, V2, V3 V4 and PikVM hardware. Port Definition Product Parameters Brand BLI Name 8-port KVM+ATX switcher Model BliSwitch v2 Function Eight hosts share a set of keyboard, mouse, and display, power control of 8 hosts Material All metal Resolution 1080P60Hz Switching Method Button switching or USB control module switching Power Supply 5V1A Control Protocol If you want to use Blicube's switch on other platforms, please refer to the following protocol Communication baud rate is 19200 The message to switch to channel 1 is SW1\\r\\nG01gA The message to switch to channel 2 is SW2\\r\\nG02gA The message to switch to channel 3 is SW3\\r\\nG03gA The message to switch to channel 4 is SW4\\r\\nG04gA The message to switch to channel 5 is SW5\\r\\nG05gA The message to switch to channel 6 is SW6\\r\\nG06gA The message to switch to channel 7 is SW7\\r\\nG07gA The message to switch to channel 8 is SW8\\r\\nG08gA The message returned by the switch for the current channel is: G01gA, G02gA, G03gA, G04gA, G05gA, G06gA, G07gA, G08gA Software Configuration If you are using BliKVM software, from version 1.5.3 onwards, power on the switch and connect the cables before starting BliKVM, then enable and configure it through the web interface. If multiple USB devices are connected, use the command ls /dev/ttyUSB* to identify the switch's device name, then configure it through the web interface. If you are using PiKVM software, refer to the configuration in switch v1, expanding from 4 channels to 8 channels. The type configuration remains: type: xh_hk4401 Currently, the PiKVM software with type xh_hk4401 has limitations and cannot be expanded to 8 channels. Adaptation is in progress. After initializing /dev/ttyUSB0 , use the command echo -ne \"SW8\\r\\nG08gA\" > /dev/ttyUSB0 to switch to other channels. After initializing /dev/ttyUSB0 , use the command cat /dev/ttyUSB0 to check the current channel. Connection Reference Dimensions Shipping List Product Quantity Remarks BliSwitch v4 switcher 1 Mounting ears 2 ATX cable male end 8 ATX cable female end 8 Full-height PCIe bracket 8 Half-height PCIe bracket 8 ATX board 8 Control cable 1 USB cable 1 Rubber pads 4 M2.5x5 countersunk screws 10 Buy link Buy Bliswitch v2","title":"Multiport BliSwitch v2 (8-port)"},{"location":"bliswitch-v2-guide/#bliswitch-v2-8-port-kvmatx-switch","text":"The BliSwitch v2 is an 8-channel KVM+ATX switch for 8 hosts to share input and power. Function: 8 hosts share a keyboard, mouse, and display, with power control for all. Switch Method: Button or USB control.","title":"BliSwitch v2 8-port KVM+ATX switch"},{"location":"bliswitch-v2-guide/#features","text":"ATX on each port(support button and remote control) Full control via web ui Compatible with BLIKVM V1, V2, V3 V4 and PikVM hardware.","title":"Features"},{"location":"bliswitch-v2-guide/#port-definition","text":"","title":"Port Definition"},{"location":"bliswitch-v2-guide/#product-parameters","text":"Brand BLI Name 8-port KVM+ATX switcher Model BliSwitch v2 Function Eight hosts share a set of keyboard, mouse, and display, power control of 8 hosts Material All metal Resolution 1080P60Hz Switching Method Button switching or USB control module switching Power Supply 5V1A","title":"Product Parameters"},{"location":"bliswitch-v2-guide/#control-protocol","text":"If you want to use Blicube's switch on other platforms, please refer to the following protocol Communication baud rate is 19200 The message to switch to channel 1 is SW1\\r\\nG01gA The message to switch to channel 2 is SW2\\r\\nG02gA The message to switch to channel 3 is SW3\\r\\nG03gA The message to switch to channel 4 is SW4\\r\\nG04gA The message to switch to channel 5 is SW5\\r\\nG05gA The message to switch to channel 6 is SW6\\r\\nG06gA The message to switch to channel 7 is SW7\\r\\nG07gA The message to switch to channel 8 is SW8\\r\\nG08gA The message returned by the switch for the current channel is: G01gA, G02gA, G03gA, G04gA, G05gA, G06gA, G07gA, G08gA","title":"Control Protocol"},{"location":"bliswitch-v2-guide/#software-configuration","text":"If you are using BliKVM software, from version 1.5.3 onwards, power on the switch and connect the cables before starting BliKVM, then enable and configure it through the web interface. If multiple USB devices are connected, use the command ls /dev/ttyUSB* to identify the switch's device name, then configure it through the web interface. If you are using PiKVM software, refer to the configuration in switch v1, expanding from 4 channels to 8 channels. The type configuration remains: type: xh_hk4401 Currently, the PiKVM software with type xh_hk4401 has limitations and cannot be expanded to 8 channels. Adaptation is in progress. After initializing /dev/ttyUSB0 , use the command echo -ne \"SW8\\r\\nG08gA\" > /dev/ttyUSB0 to switch to other channels. After initializing /dev/ttyUSB0 , use the command cat /dev/ttyUSB0 to check the current channel.","title":"Software Configuration"},{"location":"bliswitch-v2-guide/#connection-reference","text":"","title":"Connection Reference"},{"location":"bliswitch-v2-guide/#dimensions","text":"","title":"Dimensions"},{"location":"bliswitch-v2-guide/#shipping-list","text":"Product Quantity Remarks BliSwitch v4 switcher 1 Mounting ears 2 ATX cable male end 8 ATX cable female end 8 Full-height PCIe bracket 8 Half-height PCIe bracket 8 ATX board 8 Control cable 1 USB cable 1 Rubber pads 4 M2.5x5 countersunk screws 10","title":"Shipping List"},{"location":"bliswitch-v2-guide/#buy-link","text":"Buy Bliswitch v2","title":"Buy link"},{"location":"dev_api/","text":"API DISCLAIMER: This API is experimental and subject to change at any moment! This document is only valid for v1.4.0 and earlier versions, and will be updated soon This document is the HTTP API development manual for BLIKVM OS. If you have new API requirements not covered in this document, you can submit a pull request on GitHub to seek support. Please replace the kvmip in the request URL with the actual IP address of your KVM. Authentication This API is used for user login and returns an access token. This token expires after 12 hours and can be presented as a bearer token for APIs that require authentication. Request URL: https://kvmip/api/login Request Method: POST Request Body: JSON format, for example: { \"username\": \"admin\", \"password\": \"admin\" } The response is as follows; if the status is not 1, the authentication has failed. { \"status\": 1, \"info\": \"login success\", \"data\": { \"token\": \"2sscdada6a97a774fcd4714c\" } } MJPEG Video This API is used to obtain the MJPEG video stream when the image mode is set to MJPEG. Request URL: http://kvmip:8008/stream This API is used to capture a frame of MJPEG in image mode. Request URL: http://kvmip:8008/snapshot Request Method: GET Keyboard For specific keyboard encoding, please refer to the following: \"KeyA\"=> 4, \"KeyB\"=> 5, \"KeyC\"=> 6, \"KeyD\"=> 7, \"KeyE\"=> 8, \"KeyF\"=> 9, \"KeyG\"=> 10, \"KeyH\"=> 11, \"KeyI\"=> 12, \"KeyJ\"=> 13, \"KeyK\"=> 14, \"KeyL\"=> 15, \"KeyM\"=> 16, \"KeyN\"=> 17, \"KeyO\"=> 18, \"KeyP\"=> 19, \"KeyQ\"=> 20, \"KeyR\"=> 21, \"KeyS\"=> 22, \"KeyT\"=> 23, \"KeyU\"=> 24, \"KeyV\"=> 25, \"KeyW\"=> 26, \"KeyX\"=> 27, \"KeyY\"=> 28, \"KeyZ\"=> 29, \"Digit1\"=> 30, \"Digit2\"=> 31, \"Digit3\"=> 32, \"Digit4\"=> 33, \"Digit5\"=> 34, \"Digit6\"=> 35, \"Digit7\"=> 36, \"Digit8\"=> 37, \"Digit9\"=> 38, \"Digit0\"=> 39, \"Enter\"=> 40, \"Escape\"=> 41, \"Backspace\"=> 42, \"Tab\"=> 43, \"Space\"=> 44, \"Minus\"=> 45, \"Equal\"=> 46, \"BracketLeft\"=> 47, \"BracketRight\"=> 48, \"Backslash\"=> 49, \"Semicolon\"=> 51, \"Quote\"=> 52, \"Backquote\"=> 53, \"Comma\"=> 54, \"Period\"=> 55, \"Slash\"=> 56, \"CapsLock\"=> 57, \"F1\"=> 58, \"F2\"=> 59, \"F3\"=> 60, \"F4\"=> 61, \"F5\"=> 62, \"F6\"=> 63, \"F7\"=> 64, \"F8\"=> 65, \"F9\"=> 66, \"F10\"=> 67, \"F11\"=> 68, \"F12\"=> 69, \"PrtSc\"=> 70, \"ScrollLock\"=> 71, \"Pause\"=> 72, \"Insert\"=> 73, \"Home\"=> 74, \"PageUp\"=> 75, \"Delete\"=> 76, \"End\"=> 77, \"PageDown\"=> 78, \"ArrowRight\"=> 79, \"ArrowLeft\"=> 80, \"ArrowDown\"=> 81, \"ArrowUp\"=> 82, \"NumLock\"=> 83, \"NumpadDivide\"=> 84, \"NumpadMultiply\"=> 85, \"NumpadSubtract\"=> 86, \"NumpadAdd\"=> 87, \"NumpadEnter\"=> 88, \"Numpad1\"=> 89, \"Numpad2\"=> 90, \"Numpad3\"=> 91, \"Numpad4\"=> 92, \"Numpad5\"=> 93, \"Numpad6\"=> 94, \"Numpad7\"=> 95, \"Numpad8\"=> 96, \"Numpad9\"=> 97, \"Numpad0\"=> 98, \"NumpadDecimal\"=> 99 Request URL: http://kvmip/keyboard Request Method: GET Request Body: JSON format, where \"keycodes\" is a string array supporting multiple inputs at once. For example: { \"keycodes\": [\"Digit1\"] } The response result is as follows: { \"status\": 1, \"info\": \"key input success\", \"data\": [] }","title":"HTTP API"},{"location":"dev_api/#api","text":"DISCLAIMER: This API is experimental and subject to change at any moment! This document is only valid for v1.4.0 and earlier versions, and will be updated soon This document is the HTTP API development manual for BLIKVM OS. If you have new API requirements not covered in this document, you can submit a pull request on GitHub to seek support. Please replace the kvmip in the request URL with the actual IP address of your KVM.","title":"API"},{"location":"dev_api/#authentication","text":"This API is used for user login and returns an access token. This token expires after 12 hours and can be presented as a bearer token for APIs that require authentication. Request URL: https://kvmip/api/login Request Method: POST Request Body: JSON format, for example: { \"username\": \"admin\", \"password\": \"admin\" } The response is as follows; if the status is not 1, the authentication has failed. { \"status\": 1, \"info\": \"login success\", \"data\": { \"token\": \"2sscdada6a97a774fcd4714c\" } }","title":"Authentication"},{"location":"dev_api/#mjpeg-video","text":"This API is used to obtain the MJPEG video stream when the image mode is set to MJPEG. Request URL: http://kvmip:8008/stream This API is used to capture a frame of MJPEG in image mode. Request URL: http://kvmip:8008/snapshot Request Method: GET","title":"MJPEG Video"},{"location":"dev_api/#keyboard","text":"For specific keyboard encoding, please refer to the following: \"KeyA\"=> 4, \"KeyB\"=> 5, \"KeyC\"=> 6, \"KeyD\"=> 7, \"KeyE\"=> 8, \"KeyF\"=> 9, \"KeyG\"=> 10, \"KeyH\"=> 11, \"KeyI\"=> 12, \"KeyJ\"=> 13, \"KeyK\"=> 14, \"KeyL\"=> 15, \"KeyM\"=> 16, \"KeyN\"=> 17, \"KeyO\"=> 18, \"KeyP\"=> 19, \"KeyQ\"=> 20, \"KeyR\"=> 21, \"KeyS\"=> 22, \"KeyT\"=> 23, \"KeyU\"=> 24, \"KeyV\"=> 25, \"KeyW\"=> 26, \"KeyX\"=> 27, \"KeyY\"=> 28, \"KeyZ\"=> 29, \"Digit1\"=> 30, \"Digit2\"=> 31, \"Digit3\"=> 32, \"Digit4\"=> 33, \"Digit5\"=> 34, \"Digit6\"=> 35, \"Digit7\"=> 36, \"Digit8\"=> 37, \"Digit9\"=> 38, \"Digit0\"=> 39, \"Enter\"=> 40, \"Escape\"=> 41, \"Backspace\"=> 42, \"Tab\"=> 43, \"Space\"=> 44, \"Minus\"=> 45, \"Equal\"=> 46, \"BracketLeft\"=> 47, \"BracketRight\"=> 48, \"Backslash\"=> 49, \"Semicolon\"=> 51, \"Quote\"=> 52, \"Backquote\"=> 53, \"Comma\"=> 54, \"Period\"=> 55, \"Slash\"=> 56, \"CapsLock\"=> 57, \"F1\"=> 58, \"F2\"=> 59, \"F3\"=> 60, \"F4\"=> 61, \"F5\"=> 62, \"F6\"=> 63, \"F7\"=> 64, \"F8\"=> 65, \"F9\"=> 66, \"F10\"=> 67, \"F11\"=> 68, \"F12\"=> 69, \"PrtSc\"=> 70, \"ScrollLock\"=> 71, \"Pause\"=> 72, \"Insert\"=> 73, \"Home\"=> 74, \"PageUp\"=> 75, \"Delete\"=> 76, \"End\"=> 77, \"PageDown\"=> 78, \"ArrowRight\"=> 79, \"ArrowLeft\"=> 80, \"ArrowDown\"=> 81, \"ArrowUp\"=> 82, \"NumLock\"=> 83, \"NumpadDivide\"=> 84, \"NumpadMultiply\"=> 85, \"NumpadSubtract\"=> 86, \"NumpadAdd\"=> 87, \"NumpadEnter\"=> 88, \"Numpad1\"=> 89, \"Numpad2\"=> 90, \"Numpad3\"=> 91, \"Numpad4\"=> 92, \"Numpad5\"=> 93, \"Numpad6\"=> 94, \"Numpad7\"=> 95, \"Numpad8\"=> 96, \"Numpad9\"=> 97, \"Numpad0\"=> 98, \"NumpadDecimal\"=> 99 Request URL: http://kvmip/keyboard Request Method: GET Request Body: JSON format, where \"keycodes\" is a string array supporting multiple inputs at once. For example: { \"keycodes\": [\"Digit1\"] } The response result is as follows: { \"status\": 1, \"info\": \"key input success\", \"data\": [] }","title":"Keyboard"},{"location":"edid/","text":"EDID The EDID file in BliKVM serves the purpose of informing the controlled computer about the expected HDMI output resolution. For example, if the EDID is set to 1080P60Hz, and the controlled computer supports this resolution, it will output at 1080P60Hz. Additionally, EDID can be used to disable audio, modify the display model, name, manufacturer, and other information. In most cases, you don't need to change it, but sometimes, especially with strange UEFI/BIOS behavior, it may be necessary. Note BliKVM v1, v2, and v3 use the CSI video capture scheme, which supports EDID settings. However, BliKVM v4 uses the USB video capture scheme, which does not support EDID settings. For v3 HAT, there is a limitation of two CSI channels on the Raspberry Pi 4B, which means it can only capture video input with a maximum resolution of 1080P50Hz. Therefore, if you set 1080P60Hz EDID for v3, it will not be able to capture the image. If you are using PiKVM OS, you can refer to this link for modification instructions. If you are using BliKVM OS, the EDID file is located at /usr/bin/blikvm/edid.txt . Open this file, and replace the EDID contents with the desired resolution's EDID. EDID Examples for 1080P60Hz The following EDID is suitable for v1 and v2 hardware. 1920x1080 60Hz, with audioxamples for 1080P50Hz The following EDID is suitable for v1, v2, and v3 hardware, especially when you want v3 HAT to capture 1080P resolution. 1920x1080 50Hz, with audio 00ffffffffffff005262888800888888 1c150103800000780aEE91A3544C9926 0F505400000001010101010101010101 010101010101011d007251d01e206e28 5500c48e2100001e8c0ad08a20e02d10 103e9600138e2100001e000000fc0054 6f73686962612d4832430a20000000FD 003b3d0f2e0f1e0a202020202020014f 020321434e041303021211012021a23c 3d3e1f2309070766030c00300080E300 7F8c0ad08a20e02d10103e9600c48e21 0000188c0ad08a20e02d10103e960013 8e210000188c0aa01451f01600267c43 00138e21000098000000000000000000 00000000000000000000000000000000 00000000000000000000000000000028 EDID Examples for 720P60Hz The following EDID is suitable for v1, v2, and v3 hardware. 1280x720 60Hz, with audio 00ffffffffffff005262888800888888 1c150103800000780aEE91A3544C9926 0F505400000001010101010101010101 010101010101011d007251d01e206e28 5500c48e2100001e8c0ad08a20e02d10 103e9600138e2100001e000000fc0054 6f73686962612d4832430a20000000FD 003b3d0f2e0f1e0a2020202020200100 020321434e041303021211012021a23c 3d3e1f2309070766030c00300080E300 7F8c0ad08a20e02d10103e9600c48e21 0000188c0ad08a20e02d10103e960013 8e210000188c0aa01451f01600267c43 00138e21000098000000000000000000 00000000000000000000000000000000 00000000000000000000000000000000 Custom EDID To customize the EDID, it is best to use third-party utilities, such as the recommended advanced AW EDID Editor (works well in Windows and can be used in wine) or wxEDID . Both editors work with the binary EDID format. Using these tools, you can modify the EDID information like editing a file, similar to changing the information on an identity card. By editing the EDID, you can adjust the parameters and characteristics of the display to suit different usage requirements, and thus achieve better display performance.","title":"HDMI EDID"},{"location":"edid/#edid","text":"The EDID file in BliKVM serves the purpose of informing the controlled computer about the expected HDMI output resolution. For example, if the EDID is set to 1080P60Hz, and the controlled computer supports this resolution, it will output at 1080P60Hz. Additionally, EDID can be used to disable audio, modify the display model, name, manufacturer, and other information. In most cases, you don't need to change it, but sometimes, especially with strange UEFI/BIOS behavior, it may be necessary. Note BliKVM v1, v2, and v3 use the CSI video capture scheme, which supports EDID settings. However, BliKVM v4 uses the USB video capture scheme, which does not support EDID settings. For v3 HAT, there is a limitation of two CSI channels on the Raspberry Pi 4B, which means it can only capture video input with a maximum resolution of 1080P50Hz. Therefore, if you set 1080P60Hz EDID for v3, it will not be able to capture the image. If you are using PiKVM OS, you can refer to this link for modification instructions. If you are using BliKVM OS, the EDID file is located at /usr/bin/blikvm/edid.txt . Open this file, and replace the EDID contents with the desired resolution's EDID.","title":"EDID"},{"location":"edid/#edid-examples-for-1080p60hz","text":"The following EDID is suitable for v1 and v2 hardware. 1920x1080 60Hz, with audiotitle":"EDID Examples for 1080P60Hz"},{"location":"edid/#edid-examples-for-1080p50hz","text":"The following EDID is suitable for v1, v2, and v3 hardware, especially when you want v3 HAT to capture 1080P resolution. 1920x1080 50Hz, with audio 00ffffffffffff005262888800888888 1c150103800000780aEE91A3544C9926 0F505400000001010101010101010101 010101010101011d007251d01e206e28 5500c48e2100001e8c0ad08a20e02d10 103e9600138e2100001e000000fc0054 6f73686962612d4832430a20000000FD 003b3d0f2e0f1e0a202020202020014f 020321434e041303021211012021a23c 3d3e1f2309070766030c00300080E300 7F8c0ad08a20e02d10103e9600c48e21 0000188c0ad08a20e02d10103e960013 8e210000188c0aa01451f01600267c43 00138e21000098000000000000000000 00000000000000000000000000000000 00000000000000000000000000000028","title":"EDID Examples for 1080P50Hz"},{"location":"edid/#edid-examples-for-720p60hz","text":"The following EDID is suitable for v1, v2, and v3 hardware. 1280x720 60Hz, with audio 00ffffffffffff005262888800888888 1c150103800000780aEE91A3544C9926 0F505400000001010101010101010101 010101010101011d007251d01e206e28 5500c48e2100001e8c0ad08a20e02d10 103e9600138e2100001e000000fc0054 6f73686962612d4832430a20000000FD 003b3d0f2e0f1e0a2020202020200100 020321434e041303021211012021a23c 3d3e1f2309070766030c00300080E300 7F8c0ad08a20e02d10103e9600c48e21 0000188c0ad08a20e02d10103e960013 8e210000188c0aa01451f01600267c43 00138e21000098000000000000000000 00000000000000000000000000000000 00000000000000000000000000000000","title":"EDID Examples for 720P60Hz"},{"location":"edid/#custom-edid","text":"To customize the EDID, it is best to use third-party utilities, such as the recommended advanced AW EDID Editor (works well in Windows and can be used in wine) or wxEDID . Both editors work with the binary EDID format. Using these tools, you can modify the EDID information like editing a file, similar to changing the information on an identity card. By editing the EDID, you can adjust the parameters and characteristics of the display to suit different usage requirements, and thus achieve better display performance.","title":"Custom EDID"},{"location":"faq/","text":"FAQ & Troubleshooting As a first step, we recommend carefully reading our documentation. Most steps to successfully set up your BLIKVM are already described there. If you run into any issues you can check this page which will list common errors. If that still doesn't help you you're welcome to raise an issue ticket or join our Discord for further help. Common Questions Can I connect multiple servers to a single BLIKVM? Yes, but it requires additional work to set up. See this page . How can I get the access to PiKVM in my local network over Internet? If your router has an external IP address, you can use port forwarding to forward port 80 (Web), port 8008 (mjpeg), and port 8188 (webrtc) In all other cases, you can use the excellent free VPN service Tailscale. Which BLiKVM hardware version should I choose, such as BLiKVM V1 CM4, BLiKVM V2 PCIe, and BLiKVM V3 Hat? First, please refer to this page for a comparison of the main parameters of each version. V1 and V3 are external solutions, while V2 is an internal chassis solution. If you have a chassis and there is space inside, choosing the V2 PCIe version would be a better option. So how do you choose between the external solutions V1 and V3? V1 is based on the CM4 platform, with higher integration and ready-to-use versions available. V3 is based on the Raspberry Pi 4B platform, with all IO ports exposed and greater expandability. Another key difference is that V1 supports up to 1080P60Hz input, while V3 supports up to 1080P50Hz input. Of course, you also need to consider whether you already have a CM4 or 4B, as purchasing the corresponding baseboard would offer better cost-effectiveness. Can I use BLIKVM for gaming? No, because: For HDMI-CSI bridge, bus bandwidth is not enough to transmit more than 1080p60. For HDMI-USB dongle, high latency and low video quality. General hardware video capture differs from software streaming and introduces additional latency. Can BLIKVM do 4K video? For HDMI-CSI bridge, no. There is not enough bandwidth in the CSI bus for that much data. 1080p60 will max out the bandwidth. For the USB capture devices: technically yes, they will downsample to something smaller to meet the USB 2.0 bandwidth limitations, so the source may be 4k, but the stream will not. The 4K real-time video will not fit through the network anyway. Where does the cursor/video latency come from? Here is the chain of transferring an image to your browser or VNC client. Capture device -> Compression -> Network -> Decompression -> Rendering 100-200ms is very, very fast for this. But we are working to speed things up even more. Does BLIKVM support sound? BliKVM v1 CM4, v2 PCIe, v3 HAT version supported\uff0c v4 Allwinner not support now. Can I power the Pi via PoE? Yes! Hat and PCIe version supported. First Steps What is the default password? How do I change it? If you use PiKVM, there are two types of accounts: OS and PiKVM (web interface) accounts. The system account blikvm can be used for SSH/UART access and has the password blikvm . The web interface account is called admin and has the password admin . The PiKVM account cannot be used for SSH access and vice versa. To change passwords, use the following commands (become the root user): su - # If you're in the webterm rw # Switch filesystem to read-write mode passwd blikvm # Change blikvm user password kvmd-htpasswd set admin # Change web ui admin password ro # Back to read-only How do I add another user? If you use PiKVM software, as stated above you need to make 2 accounts, 1 for the shell, the other for the PiKVM Web UI. If you require additional users for PiKVM UI, you can use the following: # su - # rw # kvmd-htpasswd set <user> # Adds a new user # kvmd-htpasswd set <user> # Sets the password as long as the user exists # kvmd-htpasswd del <user> # Removes/deletes a user To add a shell/terminal account: # su - # rw # adduser <user> # passwd <user> Keep in mind that the more users that are added and accessing the screen stream at the same time, the FPS will drop. Video Problems BLIKVM does not show the video from the computer at all If the output of dmesg | grep tc358743 does not show something similar as tc358743 found @ ... , then this means that the TC358743 HDMI input bridge is not detected. Verify that the flex flat cable (ffc) is correctly connected. Double-check that the video capture device is connected correctly. For the CSI bridge, this should be exactly the camera port. Some laptops do not output any signal until you switch the output (usually via the FN + and an F5 key on the keyboard). Your computer may have turned on sleep mode for the monitor. Move the mouse to turn it off. For windows you might need to check for the active signal resolution. To change the active signal resolution you have to go to Settings>System>Display>Advanced display settings>Display adapter properties then, click \"List All Models\" and choose the one you want. Keep trying different Hz settings. The video works in the booted OS, but not in the BIOS/UEFI This problem appears on Intel NUC, GA-H77-DS3H, and some other devices when using a CSI bridge. All you need to do is change the EDID data. This is the information about supported resolutions that the CSI bridge reports to your computer. Glitchy or wrong BIOS/UEFI resolution On some motherboards, the BIOS may be displayed at a lower resolution, or with some rendering issues/glitches, specially on newer ASUS ones. Like this: This can be solved by enabling the Compatibility Support Module (CSM) in your BIOS, usually under the Boot options. If you can't or don't want to enable the CSM, you can try connecting a DisplayPort (DP) monitor, or a dummy plug . If you remove the DP cable/adapter the bug will reappear. If none of this works, try connecting the DP cable first, boot into the BIOS, disable the CSM and shutdown (do not restart) your PC. Then, boot into the BIOS and enable the CSM before shutting down your PC. Then connect the HDMI and turn your PC on again. There is no video in GRUB2, but there is before and after Sometimes this can be caused by the specifics of the BIOS/UEFI and how GRUB2 works with video. This can be solved by enabling the Compatibility Support Module (CSM) in your BIOS, usually under the Boot options. The video mode will be located in the same section. Switch the Video mode from UEFI to Legacy . No image from computer with Linux + Awesome WM Sometimes Awesome WM on Linux can't recognize a video output change on a cable. That is, if the cable was first inserted into the monitor, and then you reconnected it to BLIKVM - it may happen that you will not see the image. It seems that the problem is Awesome WM, since for example with KDE, it is not reproducable. If you turn on your workstation with BLIKVM already connected, everything will work fine. USB Problems (keyboard, mouse, mass storage, etc) What speed is the USB OTG port? Per the official RPI documentation, this is a limitation of the SoC. The OTG port is only USB2.0, so is limited to 455 Mbit/s. Why can't some keyboard shortcuts of physical keyboards be captured while virtual keyboards can? For example, the F11 key on a Mac computer cannot be captured. This is because some shortcuts are already in use by the system, such as in macOS, where F11 is assigned to the \"Show Desktop\" function by default. When you press F11 in a web interface, the KeyboardEvent is first captured by the system, and if a callback is registered in the system, the event will not be passed to the application. To solve this issue, you can disable the system's assigned shortcut or use a virtual keyboard. Hardware Problems (Wi-Fi, ATX, etc) If you use PiKVM software, the web UI show FAN error! Because the fan model used by BLIKVM hardware is different from that of PIKVM hardware, viewing the fan status through the web interface may fail in the latest system of pikvm. However, this will not affect the normal operation of BLIKVM fan. Therefore, when using the PIKVM image, as long as you ensure that the install script displays OK, it means that the update of the kvmd fan program is successful. The threshold temperature set by the default program is 60 degrees Celsius. When the CPU temperature is detected to exceed 60 degrees Celsius, the fan will start rotating at 85% speed. If you want to modify the threshold temperature and speed, you can modify the kvmd-fan.py script, and then re-execute install.sh. I can't connect to Wi-Fi at all! If your device is unable to connect to the Wi-Fi network that you have set up, check the 2.4 GHz Wi-Fi channel used by your Wi-Fi access point. If channels 12 to 14 are used (some countries have banned these channels) try to use a channel between 1 and 11. BLIKVM complains about low power warnings Are you using a \"proper\" power supply? Not one you hacked together? Some USB power bricks advertise 5V 2.1A or higher, but can't deliver consistent 5V. Best to use Raspberry Pi Foundation recommended power supplies. It should be 5.1v and 3A DC output. When I use the PoE, do I still need to use the power OTG splitter to prevent back power on the machine usb? Only HAT version you need to use power OTG splitter to prevent back power. Generally, most hosts computer are protected back power, you do not need to usr power OTG splitter in this case. BLIKVM-CM4-V2.2 and BLIKVM-PCIe version don't need. In some board like BLIKVM-PCIe or BLIKVM-CM4-V2.2 has boot pin, how do I connect? If you short them, CM4 will not start normally, but will enter the burning image mode. If your hardware version of boot has only two pins, use the jumper cap to connect the two pins as a short circuit. If you do not use the jumper cap or plug it into one pin, CM4 will start normally. If you use three boot pins of the hardware version, use the jumper cap to connect GND and another non-GND pin to indicate short circuit, and plug the jumper cap on the two GND pins or do not use it, CM4 will start normally. Web Problems What ports does BliKVM OS occupy, and how should it be forwarded when using a public server? The web interface uses the HTTP protocol and occupies port 80. If you are using hardware versions V1, V2, or V3 with web-rtc transmission, the port is 8188. If you are using hardware version V4 with MJPEG transmission, the port is 8008. Please note that the ports cannot be modified; only port forwarding can be configured. Raspberry Problems Can I use both the CM4 version with EMMC and the SD card at the same time? No, you can't, When designing the CM4 hardware, several pins of the SD card are only valid in the lite version. You can find instructions on the official website of Raspberry Pi.","title":"FAQ"},{"location":"faq/#faq-troubleshooting","text":"As a first step, we recommend carefully reading our documentation. Most steps to successfully set up your BLIKVM are already described there. If you run into any issues you can check this page which will list common errors. If that still doesn't help you you're welcome to raise an issue ticket or join our Discord for further help.","title":"FAQ &amp; Troubleshooting"},{"location":"faq/#common-questions","text":"Can I connect multiple servers to a single BLIKVM? Yes, but it requires additional work to set up. See this page . How can I get the access to PiKVM in my local network over Internet? If your router has an external IP address, you can use port forwarding to forward port 80 (Web), port 8008 (mjpeg), and port 8188 (webrtc) In all other cases, you can use the excellent free VPN service Tailscale. Which BLiKVM hardware version should I choose, such as BLiKVM V1 CM4, BLiKVM V2 PCIe, and BLiKVM V3 Hat? First, please refer to this page for a comparison of the main parameters of each version. V1 and V3 are external solutions, while V2 is an internal chassis solution. If you have a chassis and there is space inside, choosing the V2 PCIe version would be a better option. So how do you choose between the external solutions V1 and V3? V1 is based on the CM4 platform, with higher integration and ready-to-use versions available. V3 is based on the Raspberry Pi 4B platform, with all IO ports exposed and greater expandability. Another key difference is that V1 supports up to 1080P60Hz input, while V3 supports up to 1080P50Hz input. Of course, you also need to consider whether you already have a CM4 or 4B, as purchasing the corresponding baseboard would offer better cost-effectiveness. Can I use BLIKVM for gaming? No, because: For HDMI-CSI bridge, bus bandwidth is not enough to transmit more than 1080p60. For HDMI-USB dongle, high latency and low video quality. General hardware video capture differs from software streaming and introduces additional latency. Can BLIKVM do 4K video? For HDMI-CSI bridge, no. There is not enough bandwidth in the CSI bus for that much data. 1080p60 will max out the bandwidth. For the USB capture devices: technically yes, they will downsample to something smaller to meet the USB 2.0 bandwidth limitations, so the source may be 4k, but the stream will not. The 4K real-time video will not fit through the network anyway. Where does the cursor/video latency come from? Here is the chain of transferring an image to your browser or VNC client. Capture device -> Compression -> Network -> Decompression -> Rendering 100-200ms is very, very fast for this. But we are working to speed things up even more. Does BLIKVM support sound? BliKVM v1 CM4, v2 PCIe, v3 HAT version supported\uff0c v4 Allwinner not support now. Can I power the Pi via PoE? Yes! Hat and PCIe version supported.","title":"Common Questions"},{"location":"faq/#first-steps","text":"What is the default password? How do I change it? If you use PiKVM, there are two types of accounts: OS and PiKVM (web interface) accounts. The system account blikvm can be used for SSH/UART access and has the password blikvm . The web interface account is called admin and has the password admin . The PiKVM account cannot be used for SSH access and vice versa. To change passwords, use the following commands (become the root user): su - # If you're in the webterm rw # Switch filesystem to read-write mode passwd blikvm # Change blikvm user password kvmd-htpasswd set admin # Change web ui admin password ro # Back to read-only How do I add another user? If you use PiKVM software, as stated above you need to make 2 accounts, 1 for the shell, the other for the PiKVM Web UI. If you require additional users for PiKVM UI, you can use the following: # su - # rw # kvmd-htpasswd set <user> # Adds a new user # kvmd-htpasswd set <user> # Sets the password as long as the user exists # kvmd-htpasswd del <user> # Removes/deletes a user To add a shell/terminal account: # su - # rw # adduser <user> # passwd <user> Keep in mind that the more users that are added and accessing the screen stream at the same time, the FPS will drop.","title":"First Steps"},{"location":"faq/#video-problems","text":"BLIKVM does not show the video from the computer at all If the output of dmesg | grep tc358743 does not show something similar as tc358743 found @ ... , then this means that the TC358743 HDMI input bridge is not detected. Verify that the flex flat cable (ffc) is correctly connected. Double-check that the video capture device is connected correctly. For the CSI bridge, this should be exactly the camera port. Some laptops do not output any signal until you switch the output (usually via the FN + and an F5 key on the keyboard). Your computer may have turned on sleep mode for the monitor. Move the mouse to turn it off. For windows you might need to check for the active signal resolution. To change the active signal resolution you have to go to Settings>System>Display>Advanced display settings>Display adapter properties then, click \"List All Models\" and choose the one you want. Keep trying different Hz settings. The video works in the booted OS, but not in the BIOS/UEFI This problem appears on Intel NUC, GA-H77-DS3H, and some other devices when using a CSI bridge. All you need to do is change the EDID data. This is the information about supported resolutions that the CSI bridge reports to your computer. Glitchy or wrong BIOS/UEFI resolution On some motherboards, the BIOS may be displayed at a lower resolution, or with some rendering issues/glitches, specially on newer ASUS ones. Like this: This can be solved by enabling the Compatibility Support Module (CSM) in your BIOS, usually under the Boot options. If you can't or don't want to enable the CSM, you can try connecting a DisplayPort (DP) monitor, or a dummy plug . If you remove the DP cable/adapter the bug will reappear. If none of this works, try connecting the DP cable first, boot into the BIOS, disable the CSM and shutdown (do not restart) your PC. Then, boot into the BIOS and enable the CSM before shutting down your PC. Then connect the HDMI and turn your PC on again. There is no video in GRUB2, but there is before and after Sometimes this can be caused by the specifics of the BIOS/UEFI and how GRUB2 works with video. This can be solved by enabling the Compatibility Support Module (CSM) in your BIOS, usually under the Boot options. The video mode will be located in the same section. Switch the Video mode from UEFI to Legacy . No image from computer with Linux + Awesome WM Sometimes Awesome WM on Linux can't recognize a video output change on a cable. That is, if the cable was first inserted into the monitor, and then you reconnected it to BLIKVM - it may happen that you will not see the image. It seems that the problem is Awesome WM, since for example with KDE, it is not reproducable. If you turn on your workstation with BLIKVM already connected, everything will work fine.","title":"Video Problems"},{"location":"faq/#usb-problems-keyboard-mouse-mass-storage-etc","text":"What speed is the USB OTG port? Per the official RPI documentation, this is a limitation of the SoC. The OTG port is only USB2.0, so is limited to 455 Mbit/s. Why can't some keyboard shortcuts of physical keyboards be captured while virtual keyboards can? For example, the F11 key on a Mac computer cannot be captured. This is because some shortcuts are already in use by the system, such as in macOS, where F11 is assigned to the \"Show Desktop\" function by default. When you press F11 in a web interface, the KeyboardEvent is first captured by the system, and if a callback is registered in the system, the event will not be passed to the application. To solve this issue, you can disable the system's assigned shortcut or use a virtual keyboard.","title":"USB Problems (keyboard, mouse, mass storage, etc)"},{"location":"faq/#hardware-problems-wi-fi-atx-etc","text":"If you use PiKVM software, the web UI show FAN error! Because the fan model used by BLIKVM hardware is different from that of PIKVM hardware, viewing the fan status through the web interface may fail in the latest system of pikvm. However, this will not affect the normal operation of BLIKVM fan. Therefore, when using the PIKVM image, as long as you ensure that the install script displays OK, it means that the update of the kvmd fan program is successful. The threshold temperature set by the default program is 60 degrees Celsius. When the CPU temperature is detected to exceed 60 degrees Celsius, the fan will start rotating at 85% speed. If you want to modify the threshold temperature and speed, you can modify the kvmd-fan.py script, and then re-execute install.sh. I can't connect to Wi-Fi at all! If your device is unable to connect to the Wi-Fi network that you have set up, check the 2.4 GHz Wi-Fi channel used by your Wi-Fi access point. If channels 12 to 14 are used (some countries have banned these channels) try to use a channel between 1 and 11. BLIKVM complains about low power warnings Are you using a \"proper\" power supply? Not one you hacked together? Some USB power bricks advertise 5V 2.1A or higher, but can't deliver consistent 5V. Best to use Raspberry Pi Foundation recommended power supplies. It should be 5.1v and 3A DC output. When I use the PoE, do I still need to use the power OTG splitter to prevent back power on the machine usb? Only HAT version you need to use power OTG splitter to prevent back power. Generally, most hosts computer are protected back power, you do not need to usr power OTG splitter in this case. BLIKVM-CM4-V2.2 and BLIKVM-PCIe version don't need. In some board like BLIKVM-PCIe or BLIKVM-CM4-V2.2 has boot pin, how do I connect? If you short them, CM4 will not start normally, but will enter the burning image mode. If your hardware version of boot has only two pins, use the jumper cap to connect the two pins as a short circuit. If you do not use the jumper cap or plug it into one pin, CM4 will start normally. If you use three boot pins of the hardware version, use the jumper cap to connect GND and another non-GND pin to indicate short circuit, and plug the jumper cap on the two GND pins or do not use it, CM4 will start normally.","title":"Hardware Problems (Wi-Fi, ATX, etc)"},{"location":"faq/#web-problems","text":"What ports does BliKVM OS occupy, and how should it be forwarded when using a public server? The web interface uses the HTTP protocol and occupies port 80. If you are using hardware versions V1, V2, or V3 with web-rtc transmission, the port is 8188. If you are using hardware version V4 with MJPEG transmission, the port is 8008. Please note that the ports cannot be modified; only port forwarding can be configured.","title":"Web Problems"},{"location":"faq/#raspberry-problems","text":"Can I use both the CM4 version with EMMC and the SD card at the same time? No, you can't, When designing the CM4 hardware, several pins of the SD card are only valid in the lite version. You can find instructions on the official website of Raspberry Pi.","title":"Raspberry Problems"},{"location":"first_steps/","text":"First steps First power on Power up the device. Do not turn off the device until it's fully booted for the first time After turning on the power, BLIKVM OS will perform the necessary operations on the memory card. Getting access to BLIKVM By default, BliKVM receives a dynamic IP address via DHCP. The IP address will be displayed on the BliKVM monitor. If you are using DIY hardware without a monitor, use the following tips: Finding BliKVM in the network You can determine the IP address of BliKVM using the following methods: Common Method: Access the web interface of your router and look for the allocated IP address list. The specific method depends on the router model. Linux Only: Use the command arp-scan --localnet . Linux, macOS, Windows: Download and run Angry IP Scanner . Windows PowerShell: Use the command arp -a . In the example below, let's assume your BliKVM has obtained the address 192.168.0.100 , and you have successfully found that address using the instructions above. Accessing BliKVM Web Interface In most networks, you can access BliKVM in any browser using the following URL: http://192.168.0.100/ . Google Chrome (Chromium), Firefox, and Safari work best with no extensions enabled. If one works and the other does not, it may be an issue with the browser or extensions. It is recommended to use a private browsing window or incognito mode. Internet Explorer and early versions of Microsoft Edge (non-Chromium version) are not supported. The default username is admin , and the password is also admin . Once logged in, you will have access to the main menu with essential functions. You can change system settings and passwords using the web interface's account management feature. Note: The BliKVM Web interface should be accessed via http, not https Accessing BliKVM via SSH SSH is the most common method for remote access in the Linux world. You can access BliKVM via SSH. This method is used for managing the device: Linux, macOS: Open any terminal application and run: ssh blikvm@192.168.0.100 . Windows: Use PuTTY for the operation. The default blikvm user password is blikvm . You can use sudo -i to obtain root privileges. Optional: Updating BliKVM Software This section is not mandatory and should only be performed if you have physical access to the BliKVM for recovery purposes. Refer to the Software Update Guide for instructions. Note on BliKVM OS Terminal Usage Some configuration changes must be made under the root user (i.e., administrator). Obtaining Root Privileges If you are logged in via SSH, use sudo -i to obtain root privileges. BliKVM storage cards in versions v1 , v2 , and v3 are mounted in read-only mode . This protects the file system from being corrupted in the event of a sudden power outage. To edit any files and make changes, you need to remount the file system in read-write mode. You can determine the current mode by checking if ro or rw is displayed in the terminal. Enabling Write Mode To enable write mode, run the command rw . To disable write mode, run the command ro . If you receive a \"Device is busy\" message, execute the reboot command. What's next? Set up internet access using Port Forwarding or Tailscale VPN . Explore BLIKVM features using the table of contents on the left. Join our Discord to connect with the community and developers. Check out the GitHub - BLIKVM is a Open Source project! FAQ and Troubleshooting If you have any questions or run into problems, take a look at the FAQ . Seriously, it's really useful! We've probably already found a solution for it :) For any other help and support, you can contact us via the Discord chat .","title":"First Steps"},{"location":"first_steps/#first-steps","text":"","title":"First steps"},{"location":"first_steps/#first-power-on","text":"Power up the device. Do not turn off the device until it's fully booted for the first time After turning on the power, BLIKVM OS will perform the necessary operations on the memory card.","title":"First power on"},{"location":"first_steps/#getting-access-to-blikvm","text":"By default, BliKVM receives a dynamic IP address via DHCP. The IP address will be displayed on the BliKVM monitor. If you are using DIY hardware without a monitor, use the following tips: Finding BliKVM in the network You can determine the IP address of BliKVM using the following methods: Common Method: Access the web interface of your router and look for the allocated IP address list. The specific method depends on the router model. Linux Only: Use the command arp-scan --localnet . Linux, macOS, Windows: Download and run Angry IP Scanner . Windows PowerShell: Use the command arp -a . In the example below, let's assume your BliKVM has obtained the address 192.168.0.100 , and you have successfully found that address using the instructions above. Accessing BliKVM Web Interface In most networks, you can access BliKVM in any browser using the following URL: http://192.168.0.100/ . Google Chrome (Chromium), Firefox, and Safari work best with no extensions enabled. If one works and the other does not, it may be an issue with the browser or extensions. It is recommended to use a private browsing window or incognito mode. Internet Explorer and early versions of Microsoft Edge (non-Chromium version) are not supported. The default username is admin , and the password is also admin . Once logged in, you will have access to the main menu with essential functions. You can change system settings and passwords using the web interface's account management feature. Note: The BliKVM Web interface should be accessed via http, not https Accessing BliKVM via SSH SSH is the most common method for remote access in the Linux world. You can access BliKVM via SSH. This method is used for managing the device: Linux, macOS: Open any terminal application and run: ssh blikvm@192.168.0.100 . Windows: Use PuTTY for the operation. The default blikvm user password is blikvm . You can use sudo -i to obtain root privileges. Optional: Updating BliKVM Software This section is not mandatory and should only be performed if you have physical access to the BliKVM for recovery purposes. Refer to the Software Update Guide for instructions.","title":"Getting access to BLIKVM"},{"location":"first_steps/#note-on-blikvm-os-terminal-usage","text":"Some configuration changes must be made under the root user (i.e., administrator). Obtaining Root Privileges If you are logged in via SSH, use sudo -i to obtain root privileges. BliKVM storage cards in versions v1 , v2 , and v3 are mounted in read-only mode . This protects the file system from being corrupted in the event of a sudden power outage. To edit any files and make changes, you need to remount the file system in read-write mode. You can determine the current mode by checking if ro or rw is displayed in the terminal. Enabling Write Mode To enable write mode, run the command rw . To disable write mode, run the command ro . If you receive a \"Device is busy\" message, execute the reboot command.","title":"Note on BliKVM OS Terminal Usage"},{"location":"first_steps/#whats-next","text":"Set up internet access using Port Forwarding or Tailscale VPN . Explore BLIKVM features using the table of contents on the left. Join our Discord to connect with the community and developers. Check out the GitHub - BLIKVM is a Open Source project!","title":"What's next?"},{"location":"first_steps/#faq-and-troubleshooting","text":"If you have any questions or run into problems, take a look at the FAQ . Seriously, it's really useful! We've probably already found a solution for it :) For any other help and support, you can contact us via the Discord chat .","title":"FAQ and Troubleshooting"},{"location":"flashing_os/","text":"Flasing the OS image Micro-SD Card Requirements Minimum 16 Gb Class 10 is strongly recommended When flashing an image, if using tools such as RPi Imager, please do not make any presets before flashing, otherwise it will cause the image to fail to start. Why are there two versions of software, BLIKVM and PiKVM? What is the difference between the two versions? Which one should I choose? Can I use the official image of PiKVM? At the beginning of the BLIKVM project, the hardware was developed, and the software directly used PiKVM. With the continuous progress of the project, BLIKVM has developed its own software version of new architecture, which also lays the foundation for deeper cooperation with its own hardware; The core functions of BLIKVM and PiKVM are the same for users. Some subdivision functions are not the same. For example, BLIKVM supports multiple languages; Select according to your own use experience; You can use the PiKVM official image, but you need to make some adaptations according to the different hardware, mainly involving screens, fans, etc. Since the PiKVM official image is always updated, the specific adaptations need to be seen according to the specific situation you encounter at that time; Download the image Users who need to run PiKVM on v4 by yourself can refer to this doc . BliKVM Versions and Software Image Compatibility The following BliKVM versions use the same BliKVM v1-3 software image: BliKVM v1 CM4 BliKVM v2 PCIe BliKVM v3 HAT BliKVM v4 Allwinner, uses a separate Allwinner BliKVM image. BliKVM v4 Web UI The web UI is consistent across all supported versions for easy remote administration. Base on PiKVM software Raspberry 4B and CM4 board use different PiKVM software image. After entering the link, you can see the image named with each hardware version (HAT CM4 PCIe) PiKVM image Flash the image Tip Ignore request to format your sd card, this step is not nessessary. Choose the most suitable method for you. How to flash the eMMC on a Raspberry Pi Compute Module 4 Board Link If you use a CM4 with eMMC (like the CM4102016). You can use the v1 or v2 board to flash the eMMC. If your CM4 doesn't have eMMC, your device can just use a SD card to boot from. You don't need to look into this any further. Just flash to the SD card instead. First, use the jumper cap to short the boot pin (allowing you flash the EMMC memory). If you use BLIKVM CM4 version Then connect the data cable to the USB OTG interface. Power on blikvm and observe the act light, the green light is always on. If you use BLIKVM PCIe version Then connect the data cable to the USB-PC interface. Power on blikvm and observe the ACT and PWR LED isn't light. After initialize EMMC through the usbboot/rpiboot, the ACT and PWR LED light is always on. EMMC knowledge If you use Raspberry Pi compute modules such as CM3 eMMC or CM4 eMMC version\uff0cyou can initialize eMMC through the usbboot project. Note that the eMMC board version cannot use the SD card to boot the image. Instead, you need to flash the eMMC storage by using the usbboot project that emulates USB Mass Storage Device (MSD). From this video you can learn how-to flash the image quickly. How to flash the eMMC on a Raspberry Pi Compute Module 4 video Taking Ubuntu system as an example: Linux usbboot If you use an Micro-SD Card, you can skip the following steps and go to the next chapter down below. sudo apt install git libusb-1.0-0-dev pkg-config build-essential git clone --depth = 1 https://github.com/raspberrypi/usbboot cd usbboot make sudo ./rpiboot If the content in the image below appears, that indicates that the eMMC initialization was successful. The next step is to flash the image to your eMMC chip. Flash the Image (Linux, MacOS and Windows) Please do not make any additional settings to the image in RPi Imager, as this will most likely cause the image to fail to boot or repeatedly restart. We are using the \"RPi Imager\" application to flash the image in this example. Download and install the latest version of RPi Imager . Run RPi Imager: Press CHOOSE OS and select Use custom image at bottom of the list: After clicking on this item, select the image file ( .img.xz ), then click CHOOSE STORAGE : Insert the memory card into the card reader. Choose the card reader from this list (or eMMC flash storage, in case you are using a Raspberry Pi Compute module with a eMMC chip). Be careful and choose the right device: After choosing the memory card, press the WRITE button. Confirm the operation when you are asked about it: Wait for the process to finish. Get yourself a coffee or do some stretching :) Tip The process may hang at 99% for a long time, this is okay, just wait for it to complete 8.Remove the memory card after successful completion: Tip If an error occurs during flashing or booting PiKVM, repeat the process.","title":"Flashing OS"},{"location":"flashing_os/#flasing-the-os-image","text":"Micro-SD Card Requirements Minimum 16 Gb Class 10 is strongly recommended When flashing an image, if using tools such as RPi Imager, please do not make any presets before flashing, otherwise it will cause the image to fail to start. Why are there two versions of software, BLIKVM and PiKVM? What is the difference between the two versions? Which one should I choose? Can I use the official image of PiKVM? At the beginning of the BLIKVM project, the hardware was developed, and the software directly used PiKVM. With the continuous progress of the project, BLIKVM has developed its own software version of new architecture, which also lays the foundation for deeper cooperation with its own hardware; The core functions of BLIKVM and PiKVM are the same for users. Some subdivision functions are not the same. For example, BLIKVM supports multiple languages; Select according to your own use experience; You can use the PiKVM official image, but you need to make some adaptations according to the different hardware, mainly involving screens, fans, etc. Since the PiKVM official image is always updated, the specific adaptations need to be seen according to the specific situation you encounter at that time;","title":"Flasing the OS image"},{"location":"flashing_os/#download-the-image","text":"Users who need to run PiKVM on v4 by yourself can refer to this doc .","title":"Download the image"},{"location":"flashing_os/#blikvm-versions-and-software-image-compatibility","text":"The following BliKVM versions use the same BliKVM v1-3 software image: BliKVM v1 CM4 BliKVM v2 PCIe BliKVM v3 HAT BliKVM v4 Allwinner, uses a separate Allwinner BliKVM image. BliKVM v4 Web UI The web UI is consistent across all supported versions for easy remote administration.","title":"BliKVM Versions and Software Image Compatibility"},{"location":"flashing_os/#base-on-pikvm-software","text":"Raspberry 4B and CM4 board use different PiKVM software image. After entering the link, you can see the image named with each hardware version (HAT CM4 PCIe) PiKVM image","title":"Base on PiKVM software"},{"location":"flashing_os/#flash-the-image","text":"Tip Ignore request to format your sd card, this step is not nessessary. Choose the most suitable method for you. How to flash the eMMC on a Raspberry Pi Compute Module 4","title":"Flash the image"},{"location":"flashing_os/#board-link","text":"If you use a CM4 with eMMC (like the CM4102016). You can use the v1 or v2 board to flash the eMMC. If your CM4 doesn't have eMMC, your device can just use a SD card to boot from. You don't need to look into this any further. Just flash to the SD card instead. First, use the jumper cap to short the boot pin (allowing you flash the EMMC memory). If you use BLIKVM CM4 version Then connect the data cable to the USB OTG interface. Power on blikvm and observe the act light, the green light is always on. If you use BLIKVM PCIe version Then connect the data cable to the USB-PC interface. Power on blikvm and observe the ACT and PWR LED isn't light. After initialize EMMC through the usbboot/rpiboot, the ACT and PWR LED light is always on. EMMC knowledge If you use Raspberry Pi compute modules such as CM3 eMMC or CM4 eMMC version\uff0cyou can initialize eMMC through the usbboot project. Note that the eMMC board version cannot use the SD card to boot the image. Instead, you need to flash the eMMC storage by using the usbboot project that emulates USB Mass Storage Device (MSD). From this video you can learn how-to flash the image quickly. How to flash the eMMC on a Raspberry Pi Compute Module 4 video Taking Ubuntu system as an example:","title":"Board Link"},{"location":"flashing_os/#linux-usbboot","text":"If you use an Micro-SD Card, you can skip the following steps and go to the next chapter down below. sudo apt install git libusb-1.0-0-dev pkg-config build-essential git clone --depth = 1 https://github.com/raspberrypi/usbboot cd usbboot make sudo ./rpiboot If the content in the image below appears, that indicates that the eMMC initialization was successful. The next step is to flash the image to your eMMC chip.","title":"Linux usbboot"},{"location":"flashing_os/#flash-the-image-linux-macos-and-windows","text":"Please do not make any additional settings to the image in RPi Imager, as this will most likely cause the image to fail to boot or repeatedly restart. We are using the \"RPi Imager\" application to flash the image in this example. Download and install the latest version of RPi Imager . Run RPi Imager: Press CHOOSE OS and select Use custom image at bottom of the list: After clicking on this item, select the image file ( .img.xz ), then click CHOOSE STORAGE : Insert the memory card into the card reader. Choose the card reader from this list (or eMMC flash storage, in case you are using a Raspberry Pi Compute module with a eMMC chip). Be careful and choose the right device: After choosing the memory card, press the WRITE button. Confirm the operation when you are asked about it: Wait for the process to finish. Get yourself a coffee or do some stretching :) Tip The process may hang at 99% for a long time, this is okay, just wait for it to complete 8.Remove the memory card after successful completion: Tip If an error occurs during flashing or booting PiKVM, repeat the process.","title":"Flash the Image (Linux, MacOS and Windows)"},{"location":"hdmi-csi-i2s/","text":"HDMI to CSI&I2S bridge guide Convert HDMI signal acquisition into CSI signal and I2S audio signal. Currently, all platforms are supported (Zero, Pi3B, Pi4B, CM4, Pi5B), and the maximum capture resolution not only depends on the HDMI to CSI converter board you are using but also on the Raspberry Pi hardware version you have. Raspberry Pi hardware versions are primarily divided into two series, one supporting a maximum of 1080P60Hz and the other supporting a maximum of 1080P50Hz. The Raspberry Pi versions that support a maximum of 1080P60Hz are CM3, CM4, and Pi5B. The Raspberry Pi versions that support a maximum of 1080P50Hz are Zero, Zero 2, Pi3B, Pi4B, and so on. Introduction This module takes the incoming HDMI signal and converts it into a separate CSI signal and I2S audio signal. HDMI input supports up to 1080P60Hz. It works well on Raspberry Pi, there are three versions of this module in history (C779, C780, C790). C790 is the latest version. C790 has mitigated HDMI backpowering, and also has two csi channels and four csi channels at the same time. Features C790 Hardware Parameters HDMI input: supports up to 1080P60Hz on Raspberry Pi HDMI to CSI-2 bridge chip: Toshiba TC358743XBG 4 CSI-2 channels & clock The CSI-2 interface, with 15 pin FPC seat, spacing 1.0 mm, is located on the front of the C790 module. The CSI-2 interface, with 22 pin FPC seat, spacing 0.5 mm, is located on the back of the C790 module. Size: 30 x 45 mm Install: 4 x M2.5 Power supply: 3.3V Weight: 10g Pi 4B only support 1080P50Hz, limited by the number of CSI-2 channels. CM4 support 1080P60HZ, So if you must use 1080P60Hz input, please use CM4 and C790 together. Interface C790 has two CSI output interfaces. In front of C790, the CSI-2 interface is 15 pin FPC seat, spacing 1.0 mm. In back of C790, the CSI-2 interface is 22 pin FPC seat, spacing 0.5 mm. Size Install C790 on Raspberry Pi for reference C780 C780A Hardware Parameters HDMI input: supports up to 1080P50Hz on Raspberry Pi(Limited by the number of CSI-2 channels) HDMI to CSI-2 bridge chip: Toshiba TC358743XBG 2 CSI-2 channels & clock CSI-2 interface: 15 pin FPC seat, spacing 1.0 mm Size: 30 x 65 mm (unbroken PCB size); 30 x 45 mm (PCB size after breaking) Install: 6 x M2.5 Power supply: 3.3V Weight: 10g C780B Hardware Parameters HDMI input: supports up to 1080P60Hz on Raspberry Pi HDMI to CSI-2 bridge chip: Toshiba TC358743XBG 4 CSI-2 channels & clock CSI-2 interface: 22 pin FPC seat, spacing 0.5 mm Size: 30 x 65 mm (unbroken PCB size); 30 x 45 mm (PCB size after breaking) Install: 6 x M2.5 Power supply: 3.3V Weight: 10g Interface The wiring of audio part is shown in Figure. Size The size of C780 is shown in the image below. There are 6 mounting holes with a diameter of 2.75mm, which are suitable for M2.5 screws. As shown in the image below, the user can directly fix the module on the Raspberry Pi Zero. C780 is designed to be broken, and the hole spacing before breaking can be perfectly installed with most series of Raspberry Pi. C779 Hardware Parameters HDMI input: supports up to 1080P50Hz on Raspberry Pi(Limited by the number of CSI-2 channels) HDMI to CSI-2 bridge chip: Toshiba TC358743XBG 2 CSI-2 channels & clock CSI-2 interface: 15 pin FPC seat, spacing 1.0 mm Size: 35 x 50 mm Install: 4 x M2.5 Power supply: 3.3V Weight: 10g Size The size of C779 is shown in Figure. There are 4 mounting holes with a diameter of 2.75mm, which are suitable for M2.5 screws. CSI Interface Definitions The CSI (Camera Serial Interface) interfaces C779 and C780A have 15 pins each, while the C780B interface has 22 pins. The C790 interface is unique as it supports both 15 and 22 PIN configurations. Software Demo The use guide of C790/C780/C779 depends on the official Raspberry Pi OS version you are using. Different versions have different usage methods. If you have some questions, Join our BLIKVM Discord Community for Support, FAQ & News! To use the kernel drivers, please update your system. There are a few things that have changed with the 5.4 kernel, so these instructions are for 5.4 or later. If uname -a reports anything less, then fix this before proceeding. pi@raspberrypi:~ $ uname -a Linux raspberrypi 5 .10.63-v7l+ #1459 SMP Wed Oct 6 16:41:57 BST 2021 armv7l GNU/Linux 1. Update & upgrade the Raspberry Pi system (It will take a long time depend on the different country) sudo apt-get update sudo apt-get upgrade 2. Enable camera module (the camera is enabled by default in Raspberry pi Bullseys OS) sudo raspi-config sudo reboot Navigate to \u2018Interfacing Options\u2019 and hit Enter. Now select the \u2018Camera\u2019 option, and hit the Enter key to enable it. Select \u201cFinish\u201d and select to reboot your Raspberry Pi. reboot is important!! Due to the absence of hardware encoding on the Pi5B, the software usage instructions for Pi platforms are currently divided into two sections: Pi5B configuration and configuration for other Pi platforms. In platforms such as Zero, Zero 2, Pi3B, Pi4B, etc., there is a reference for testing HDMI to CSI module demo. Edit /boot/config.txt (that will need sudo) sudo nano /boot/config.txt Add the line: dtoverlay=tc358743 Add the line if your shield support audio like C780 or C790. dtoverlay=tc358743-audio If (and only if) you have a device such as the C780 or C790 that supports the 22pin connector with all 4 lanes wired out, and are using a Compute Module with the CAM1 connector that also has all 4 lanes wired up, you can use: dtoverlay=tc358743,4lane=1 Check the amount of memory assigned to the CMA heap with \u201cdmesg | grep cma\u201d. The first line should be along the lines of: pi@raspberrypi:~ $ dmesg | grep cma [0.000000] cma: Reserved 256 MiB at 0x000000001ec00000 If it reports less than 96MB assigned to CMA, then edit /boot/cmdline.txt and add to the start of the line. Do NOT add any carriage returns. cma=96M Reboot. If all is well you should get a /dev/video0 device, and \u201cv4l2-ctl \u2013list-devices\u201d will tell you that it is provided by Unicam. After connecting all the cables, power on the Raspberry Pi, the C790 indicator light is normally green, and after opening the Raspberry Pi terminal, enter the following command: pi@raspberrypi:~ $ ls /dev/video0 /dev/video0 pi@raspberrypi:~ $ v4l2-ctl --list-devices bcm2835-codec-decode (platform:bcm2835-codec): /dev/video10 /dev/video11 /dev/video12 /dev/video18 /dev/media1 bcm2835-isp (platform:bcm2835-isp): /dev/video13 /dev/video14 /dev/video15 /dev/video16 /dev/media0 unicam (platform:fe801000.csi): /dev/video0 /dev/video1 /dev/media2 This driver puts all the control in the hands of the user, or the user\u2019s application. By default there is no EDID loaded into the chip to allow it to tell the HDMI source what resolutions are supported. There are EDID editors around. If you create a file edid.txt, then you can push this to the device using the comment of edid.txt file: 00ffffffffffff005262888800888888 1c150103800000780aEE91A3544C9926 0F505400000001010101010101010101 010101010101011d007251d01e206e28 5500c48e2100001e8c0ad08a20e02d10 103e9600138e2100001e000000fc0054 6f73686962612d4832430a20000000FD 003b3d0f2e0f1e0a2020202020200100 020321434e041303021211012021a23c 3d3e1f2309070766030c00300080E300 7F8c0ad08a20e02d10103e9600c48e21 0000188c0ad08a20e02d10103e960013 8e210000188c0aa01451f01600267c43 00138e21000098000000000000000000 00000000000000000000000000000000 00000000000000000000000000000000 cd ~ sudo nano edid.txt #copy the above commend in edid.txt, save&exit; pi@raspberrypi:~ $ v4l2-ctl --set-edid=file=edid.txt --fix-edid-checksums CTA-861 Header IT Formats Underscanned: yes Audio: yes YCbCr 4:4:4: no YCbCr 4:2:2: no HDMI Vendor-Specific Data Block Physical Address: 3.0.0.0 YCbCr 4:4:4 Deep Color: no 30-bit: no 36-bit: no 48-bit: no CTA-861 Video Capability Descriptor RGB Quantization Range: yes YCC Quantization Range: no PT: Supports both over- and underscan IT: Supports both over- and underscan CE: Supports both over- and underscan The driver does NOT automatically switch to the resolution detected. Use the command: pi@raspberrypi:~ $ v4l2-ctl --query-dv-timings Active width: 1280 Active height: 720 Total width: 1650 Total height: 750 Frame format: progressive Polarities: -vsync -hsync Pixelclock: 74250000 Hz (60.00 frames per second) Horizontal frontporch: 0 Horizontal sync: 370 Horizontal backporch: 0 Vertical frontporch: 0 Vertical sync: 30 Vertical backporch: 0 Standards: Flags: You MUST set the timings via \u201cv4l2-ctl \u2013set-dv-bt-timings\u201d. You can pass in an index to the detected mode, or use: v4l2-ctl --set-dv-bt-timings query to select the currently detected timings. v4l2-ctl -V should now reflect the resolution detected. The chip supports two formats \u2013 BGR3 (the default) and UYVY. BGR3 is 24bpp, and UYVY is YUV4:2:2 16bpp. Over the normal 2 CSI-2 lanes the data rate is such that BGR3 can run at a maximum of 1080p30, whilst UYVY will go up to 1080p50. Use the following command to select UYVY, however your application may override that. v4l2-ctl -v pixelformat=UYVY Check that the audio drivers / card is available to ALSA. pi@raspberrypi:~ $ arecord -l **** List of CAPTURE Hardware Devices **** card 1: tc358743 [tc358743], device 0: bcm2835-i2s-dir-hifi dir-hifi-0 [bcm2835-i2s-dir-hifi dir-hifi-0] Subdevices: 1/1 Subdevice #0: subdevice #0 Note: card 1 means that the card number for the TC358743XBG is \u201c1\u201d and it might be different. Install GStreamer tool. sudo apt install gstreamer1.0-tools Check gstreamer tool version: pi@raspberrypi:~ $ gst-launch-1.0 --version gst-launch-1.0 version 1.18.4 GStreamer 1.18.4 http://packages.qa.debian.org/gstreamer1.0 Note: Different versions have different command line parameters, which is very annoying. Use gstreamer to record video and audio #GStreamer v1.14 command gst-launch-1.0 v4l2src io-mode=5 ! video/x-raw, format=UYVY, framerate=25/1 ! v4l2h264enc output-io-mode=4 ! video/x-h264,profile=high ! h264parse ! queue ! matroskamux name=mux ! filesink location=foo.mkv alsasrc device=hw:1 ! audio/x-raw,rate=48000,channels=2 ! audioconvert ! avenc_aac bitrate=48000 ! aacparse ! queue ! mux. foo.mkv is the output file. If your gstreamer is version 1.8 or above, you can try the following test command. In addition, alsasrc device=hw:1 represents the sound card of TC358743, you can use \u201carecord -l\u201d to query. #The command to recode a video with audio. (GStreamer 1.18.4) gst-launch-1.0 -vvv v4l2src ! \"video/x-raw,framerate=30/1,format=UYVY\" ! v4l2h264enc extra-controls=\"controls,h264_profile=4,h264_level=13,video_bitrate=256000;\" ! \"video/x-h264,profile=high, level=(string)4.2\" ! h264parse ! queue ! matroskamux name=mux ! filesink location=foo.mkv alsasrc device=hw:1 ! audio/x-raw,rate=48000,channels=2 ! audioconvert ! avenc_aac bitrate=48000 ! aacparse ! queue ! mux. #The sample command to recode a video without audio. (C779 doesn't support audio) gst-launch-1.0 -vvv v4l2src ! \"video/x-raw,framerate=30/1,format=UYVY\" ! v4l2h264enc extra-controls=\"controls,h264_profile=4,h264_level=13,video_bitrate=256000;\" ! \"video/x-h264,profile=high, level=(string)4.2\" ! h264parse ! queue ! matroskamux name=mux ! filesink location=foo.mkv Press CTRL+C to end recording. PS: We recommend that you modify the above framerate parameter to the actual frame rate of your HDMI signal, the actual frame rate value is from the result of \u2018v4l2-ctl \u2013query-dv-timings\u2019 command. For the above HDMI device, because the frame rate is 60, so we modify the framerate parameter to 60 like the followint command. Record the video only: gst-launch-1.0 -vvv v4l2src ! \"video/x-raw,framerate=60/1,format=UYVY\" ! v4l2h264enc extra-controls=\"controls,h264_profile=4,h264_level=13,video_bitrate=256000;\" ! \"video/x-h264,profile=high, level=(string)4.2\" ! h264parse ! queue ! matroskamux name=mux ! filesink location=foo.mkv Record the video and audio: (if your shield supports audio also) gst-launch-1.0 -vvv v4l2src ! \"video/x-raw,framerate=60/1,format=UYVY\" ! v4l2h264enc extra-controls=\"controls,h264_profile=4,h264_level=13,video_bitrate=256000;\" ! \"video/x-h264,profile=high, level=(string)4.2\" ! h264parse ! queue ! matroskamux name=mux ! filesink location=foo.mkv alsasrc device=hw:1 ! audio/x-raw,rate=48000,channels=2 ! audioconvert ! avenc_aac bitrate=48000 ! aacparse ! queue ! mux. Note: alsasrc device=hw:1 \u2013 \u201c1\u201d means the audio card number, You must change to correct audio card number. (Query the car number via \u2018arecord \u2013l\u2019, refer to step 9) Pi5B platforms HDMI to CSI module test demo reference. In the following test, the CAM1 channel is used, and the input resolution is 1080P24Hz. During the Raspberry Pi 5B test, it was found that the EDID settings were invalid, so an HDMI emulator needs to be added to force the target to output HDMI. Otherwise, the Raspberry Pi 5B may not receive any input. Due to the lack of corresponding hardware encoding on the Raspberry Pi 5B, the image capture performance of the Raspberry Pi 5B + C790 is generally inferior to that of the Raspberry Pi 4B. Edit /boot/config.txt (sudo permission required). sudo nano /boot/config.txt Add the following content: dtoverlay=tc358743 If your modules (C780 and C790) support audio, add the following content to enable audio support. dtoverlay=tc358743-audio Reboot the Raspberry Pi and execute the following command to find the media node corresponding to the CSI as media0, under the rp1-cfe (platform: 1f00128000.csi) field: blikvm@blikvm:~ $ v4l2-ctl --list-devices pispbe (platform:1000880000.pisp_be): /dev/video20 /dev/video21 /dev/video22 /dev/video23 /dev/video24 /dev/video25 /dev/video26 /dev/video27 /dev/video28 /dev/video29 /dev/video30 /dev/video31 /dev/video32 /dev/video33 /dev/video34 /dev/video35 /dev/video36 /dev/video37 /dev/media1 /dev/media2 rp1-cfe (platform:1f00128000.csi): /dev/video0 /dev/video1 /dev/video2 /dev/video3 /dev/video4 /dev/video5 /dev/video6 /dev/video7 /dev/media0 rpivid (platform:rpivid): /dev/video19 /dev/media3 Locate the node corresponding to tc358743 as v4l-subdev2, and the pad0 of rp1-cfe-csi2_ch0 as video0: blikvm@blikvm:~ $ media-ctl -d /dev/media0 -p Media controller API version 6.1.63 Media device information ------------------------ driver rp1-cfe model rp1-cfe serial bus info platform:1f00128000.csi hw revision 0x114666 driver version 6.1.63 Device topology - entity 1: csi2 (8 pads, 8 links) type V4L2 subdev subtype Unknown flags 0 device node name /dev/v4l-subdev0 pad0: Sink [fmt:SRGGB10_1X10/640x480 field:none colorspace:raw xfer:none ycbcr:601 quantization:full-range] <- \"tc358743 4-000f\":0 [ENABLED,IMMUTABLE] pad1: Sink [fmt:unknown/8192x1 field:none] pad2: Sink [fmt:SRGGB10_1X10/640x480 field:none colorspace:raw xfer:none ycbcr:601 quantization:full-range] pad3: Sink [fmt:SRGGB10_1X10/640x480 field:none colorspace:raw xfer:none ycbcr:601 quantization:full-range] pad4: Source [fmt:SRGGB10_1X10/640x480 field:none colorspace:raw xfer:none ycbcr:601 quantization:full-range] -> \"rp1-cfe-csi2_ch0\":0 [] -> \"pisp-fe\":0 [] pad5: Source [fmt:unknown/8192x1 field:none] -> \"rp1-cfe-embedded\":0 [] pad6: Source [fmt:SRGGB10_1X10/640x480 field:none colorspace:raw xfer:none ycbcr:601 quantization:full-range] -> \"rp1-cfe-csi2_ch2\":0 [] -> \"pisp-fe\":0 [] pad7: Source [fmt:SRGGB10_1X10/640x480 field:none colorspace:raw xfer:none ycbcr:601 quantization:full-range] -> \"rp1-cfe-csi2_ch3\":0 [] -> \"pisp-fe\":0 [] - entity 10: pisp-fe (5 pads, 7 links) type V4L2 subdev subtype Unknown flags 0 device node name /dev/v4l-subdev1 pad0: Sink [fmt:SRGGB16_1X16/640x480 field:none colorspace:raw xfer:none ycbcr:601 quantization:full-range] <- \"csi2\":4 [] <- \"csi2\":6 [] <- \"csi2\":7 [] pad1: Sink [fmt:FIXED/8192x1 field:none] <- \"rp1-cfe-fe_config\":0 [] pad2: Source [fmt:SRGGB16_1X16/640x480 field:none colorspace:raw xfer:none ycbcr:601 quantization:full-range] -> \"rp1-cfe-fe_image0\":0 [] pad3: Source [fmt:SRGGB16_1X16/640x480 field:none colorspace:raw xfer:none ycbcr:601 quantization:full-range] -> \"rp1-cfe-fe_image1\":0 [] pad4: Source [fmt:FIXED/8192x1 field:none] -> \"rp1-cfe-fe_stats\":0 [] - entity 16: tc358743 4-000f (1 pad, 1 link) type V4L2 subdev subtype Unknown flags 0 device node name /dev/v4l-subdev2 pad0: Source [fmt:RGB888_1X24/640x480 field:none colorspace:srgb] [dv.caps:BT.656/1120 min:640x350@13000000 max:1920x1200@165000000 stds:CEA-861,DMT,CVT,GTF caps:progressive,reduced-blanking,custom] [dv.detect:BT.656/1120 1920x1080p24 (2750x1125) stds: flags:] [dv.current:BT.656/1120 640x480p59 (800x525) stds:CEA-861,DMT flags:has-cea861-vic] -> \"csi2\":0 [ENABLED,IMMUTABLE] - entity 18: rp1-cfe-csi2_ch0 (1 pad, 1 link) type Node subtype V4L flags 0 device node name /dev/video0 pad0: Sink <- \"csi2\":4 [] - entity 22: rp1-cfe-embedded (1 pad, 1 link) type Node subtype V4L flags 0 device node name /dev/video1 pad0: Sink <- \"csi2\":5 [] - entity 26: rp1-cfe-csi2_ch2 (1 pad, 1 link) type Node subtype V4L flags 0 device node name /dev/video2 pad0: Sink <- \"csi2\":6 [] - entity 30: rp1-cfe-csi2_ch3 (1 pad, 1 link) type Node subtype V4L flags 0 device node name /dev/video3 pad0: Sink <- \"csi2\":7 [] - entity 34: rp1-cfe-fe_image0 (1 pad, 1 link) type Node subtype V4L flags 1 device node name /dev/video4 pad0: Sink <- \"pisp-fe\":2 [] - entity 38: rp1-cfe-fe_image1 (1 pad, 1 link) type Node subtype V4L flags 0 device node name /dev/video5 pad0: Sink <- \"pisp-fe\":3 [] - entity 42: rp1-cfe-fe_stats (1 pad, 1 link) type Node subtype V4L flags 0 device node name /dev/video6 pad0: Sink <- \"pisp-fe\":4 [] - entity 46: rp1-cfe-fe_config (1 pad, 1 link) type Node subtype V4L flags 0 device node name /dev/video7 pad0: Source -> \"pisp-fe\":1 [] To query the current input source information, if the resolution displays as 0, it indicates that no input source signal has been detected. In this case, you should check the hardware connections and follow the steps mentioned above to troubleshoot. blikvm@blikvm:~ $ v4l2-ctl -d /dev/v4l-subdev2 --query-dv-timings Active width: 1920 Active height: 1080 Total width: 2750 Total height: 1125 Frame format: progressive Polarities: -vsync -hsync Pixelclock: 74250000 Hz (24.00 frames per second) Horizontal frontporch: 0 Horizontal sync: 830 Horizontal backporch: 0 Vertical frontporch: 0 Vertical sync: 45 Vertical backporch: 0 Standards: Flags: Confirm the current input source information. blikvm@blikvm:~ $ v4l2-ctl -d /dev/v4l-subdev2 --set-dv-bt-timings query BT timings set Initialize media0. blikvm@blikvm:~ $ media-ctl -d /dev/media0 -r Connect CSI2's pad4 to rp1-cfe-csi2_ch0's pad0. blikvm@blikvm:~ $ media-ctl -d /dev/media0 -l ''\\''csi2'\\'':4 -> '\\''rp1-cfe-csi2_ch0'\\'':0 [1]' Configure the media node. blikvm@blikvm:~ $ media-ctl -d /dev/media0 -V ''\\''csi2'\\'':0 [fmt:RGB888_1X24/1920x1080 field:none colorspace:srgb]' blikvm@blikvm:~ $ media-ctl -d /dev/media0 -V ''\\''csi2'\\'':4 [fmt:RGB888_1X24/1920x1080 field:none colorspace:srgb]' Set the output format. v4l2-ctl -v width=1920,height=1080,pixelformat=RGB3 Capture two frames for testing to verify if tc358743 is functioning properly. Other methods, such as using GStreamer, are not currently available. v4l2-ctl --verbose -d /dev/video0 --set-fmt-video=width=1920,height=1080,pixelformat='RGB3' --stream-mmap=4 --stream-skip=3 --stream-count=2 --stream-to=hdmiin.yuv --stream-poll If you have installed a desktop version of Raspberry Pi, you can use ffplay to directly play YUV files. ffplay -f rawvideo -video_size 1920x1080 -pixel_format bgr24 hdmiin.yuv On a Windows computer, you can use software like 7yuv to view .yuv files. For the tutorial with an input format of 1920 1080, you should select BGR888 in the top right corner of 7yuv and set the resolution to 1920 1080 to view the two frames you just captured. Chip Docs TC358743 Documentation Packing List C790 Test Video C780A Test C780B Test Purchase Link Purchase C780 & C790 Purchase C779","title":"HDMI to CSI & Audio"},{"location":"hdmi-csi-i2s/#hdmi-to-csii2s-bridge-guide","text":"Convert HDMI signal acquisition into CSI signal and I2S audio signal. Currently, all platforms are supported (Zero, Pi3B, Pi4B, CM4, Pi5B), and the maximum capture resolution not only depends on the HDMI to CSI converter board you are using but also on the Raspberry Pi hardware version you have. Raspberry Pi hardware versions are primarily divided into two series, one supporting a maximum of 1080P60Hz and the other supporting a maximum of 1080P50Hz. The Raspberry Pi versions that support a maximum of 1080P60Hz are CM3, CM4, and Pi5B. The Raspberry Pi versions that support a maximum of 1080P50Hz are Zero, Zero 2, Pi3B, Pi4B, and so on.","title":"HDMI to CSI&amp;I2S bridge guide"},{"location":"hdmi-csi-i2s/#introduction","text":"This module takes the incoming HDMI signal and converts it into a separate CSI signal and I2S audio signal. HDMI input supports up to 1080P60Hz. It works well on Raspberry Pi, there are three versions of this module in history (C779, C780, C790). C790 is the latest version. C790 has mitigated HDMI backpowering, and also has two csi channels and four csi channels at the same time.","title":"Introduction"},{"location":"hdmi-csi-i2s/#features","text":"","title":"Features"},{"location":"hdmi-csi-i2s/#c790","text":"Hardware Parameters HDMI input: supports up to 1080P60Hz on Raspberry Pi HDMI to CSI-2 bridge chip: Toshiba TC358743XBG 4 CSI-2 channels & clock The CSI-2 interface, with 15 pin FPC seat, spacing 1.0 mm, is located on the front of the C790 module. The CSI-2 interface, with 22 pin FPC seat, spacing 0.5 mm, is located on the back of the C790 module. Size: 30 x 45 mm Install: 4 x M2.5 Power supply: 3.3V Weight: 10g Pi 4B only support 1080P50Hz, limited by the number of CSI-2 channels. CM4 support 1080P60HZ, So if you must use 1080P60Hz input, please use CM4 and C790 together. Interface C790 has two CSI output interfaces. In front of C790, the CSI-2 interface is 15 pin FPC seat, spacing 1.0 mm. In back of C790, the CSI-2 interface is 22 pin FPC seat, spacing 0.5 mm. Size Install C790 on Raspberry Pi for reference","title":"C790"},{"location":"hdmi-csi-i2s/#c780","text":"C780A Hardware Parameters HDMI input: supports up to 1080P50Hz on Raspberry Pi(Limited by the number of CSI-2 channels) HDMI to CSI-2 bridge chip: Toshiba TC358743XBG 2 CSI-2 channels & clock CSI-2 interface: 15 pin FPC seat, spacing 1.0 mm Size: 30 x 65 mm (unbroken PCB size); 30 x 45 mm (PCB size after breaking) Install: 6 x M2.5 Power supply: 3.3V Weight: 10g C780B Hardware Parameters HDMI input: supports up to 1080P60Hz on Raspberry Pi HDMI to CSI-2 bridge chip: Toshiba TC358743XBG 4 CSI-2 channels & clock CSI-2 interface: 22 pin FPC seat, spacing 0.5 mm Size: 30 x 65 mm (unbroken PCB size); 30 x 45 mm (PCB size after breaking) Install: 6 x M2.5 Power supply: 3.3V Weight: 10g Interface The wiring of audio part is shown in Figure. Size The size of C780 is shown in the image below. There are 6 mounting holes with a diameter of 2.75mm, which are suitable for M2.5 screws. As shown in the image below, the user can directly fix the module on the Raspberry Pi Zero. C780 is designed to be broken, and the hole spacing before breaking can be perfectly installed with most series of Raspberry Pi.","title":"C780"},{"location":"hdmi-csi-i2s/#c779","text":"Hardware Parameters HDMI input: supports up to 1080P50Hz on Raspberry Pi(Limited by the number of CSI-2 channels) HDMI to CSI-2 bridge chip: Toshiba TC358743XBG 2 CSI-2 channels & clock CSI-2 interface: 15 pin FPC seat, spacing 1.0 mm Size: 35 x 50 mm Install: 4 x M2.5 Power supply: 3.3V Weight: 10g Size The size of C779 is shown in Figure. There are 4 mounting holes with a diameter of 2.75mm, which are suitable for M2.5 screws.","title":"C779"},{"location":"hdmi-csi-i2s/#csi-interface-definitions","text":"The CSI (Camera Serial Interface) interfaces C779 and C780A have 15 pins each, while the C780B interface has 22 pins. The C790 interface is unique as it supports both 15 and 22 PIN configurations.","title":"CSI Interface Definitions"},{"location":"hdmi-csi-i2s/#software-demo","text":"The use guide of C790/C780/C779 depends on the official Raspberry Pi OS version you are using. Different versions have different usage methods. If you have some questions, Join our BLIKVM Discord Community for Support, FAQ & News! To use the kernel drivers, please update your system. There are a few things that have changed with the 5.4 kernel, so these instructions are for 5.4 or later. If uname -a reports anything less, then fix this before proceeding. pi@raspberrypi:~ $ uname -a Linux raspberrypi 5 .10.63-v7l+ #1459 SMP Wed Oct 6 16:41:57 BST 2021 armv7l GNU/Linux 1. Update & upgrade the Raspberry Pi system (It will take a long time depend on the different country) sudo apt-get update sudo apt-get upgrade 2. Enable camera module (the camera is enabled by default in Raspberry pi Bullseys OS) sudo raspi-config sudo reboot Navigate to \u2018Interfacing Options\u2019 and hit Enter. Now select the \u2018Camera\u2019 option, and hit the Enter key to enable it. Select \u201cFinish\u201d and select to reboot your Raspberry Pi. reboot is important!! Due to the absence of hardware encoding on the Pi5B, the software usage instructions for Pi platforms are currently divided into two sections: Pi5B configuration and configuration for other Pi platforms. In platforms such as Zero, Zero 2, Pi3B, Pi4B, etc., there is a reference for testing HDMI to CSI module demo. Edit /boot/config.txt (that will need sudo) sudo nano /boot/config.txt Add the line: dtoverlay=tc358743 Add the line if your shield support audio like C780 or C790. dtoverlay=tc358743-audio If (and only if) you have a device such as the C780 or C790 that supports the 22pin connector with all 4 lanes wired out, and are using a Compute Module with the CAM1 connector that also has all 4 lanes wired up, you can use: dtoverlay=tc358743,4lane=1 Check the amount of memory assigned to the CMA heap with \u201cdmesg | grep cma\u201d. The first line should be along the lines of: pi@raspberrypi:~ $ dmesg | grep cma [0.000000] cma: Reserved 256 MiB at 0x000000001ec00000 If it reports less than 96MB assigned to CMA, then edit /boot/cmdline.txt and add to the start of the line. Do NOT add any carriage returns. cma=96M Reboot. If all is well you should get a /dev/video0 device, and \u201cv4l2-ctl \u2013list-devices\u201d will tell you that it is provided by Unicam. After connecting all the cables, power on the Raspberry Pi, the C790 indicator light is normally green, and after opening the Raspberry Pi terminal, enter the following command: pi@raspberrypi:~ $ ls /dev/video0 /dev/video0 pi@raspberrypi:~ $ v4l2-ctl --list-devices bcm2835-codec-decode (platform:bcm2835-codec): /dev/video10 /dev/video11 /dev/video12 /dev/video18 /dev/media1 bcm2835-isp (platform:bcm2835-isp): /dev/video13 /dev/video14 /dev/video15 /dev/video16 /dev/media0 unicam (platform:fe801000.csi): /dev/video0 /dev/video1 /dev/media2 This driver puts all the control in the hands of the user, or the user\u2019s application. By default there is no EDID loaded into the chip to allow it to tell the HDMI source what resolutions are supported. There are EDID editors around. If you create a file edid.txt, then you can push this to the device using the comment of edid.txt file: 00ffffffffffff005262888800888888 1c150103800000780aEE91A3544C9926 0F505400000001010101010101010101 010101010101011d007251d01e206e28 5500c48e2100001e8c0ad08a20e02d10 103e9600138e2100001e000000fc0054 6f73686962612d4832430a20000000FD 003b3d0f2e0f1e0a2020202020200100 020321434e041303021211012021a23c 3d3e1f2309070766030c00300080E300 7F8c0ad08a20e02d10103e9600c48e21 0000188c0ad08a20e02d10103e960013 8e210000188c0aa01451f01600267c43 00138e21000098000000000000000000 00000000000000000000000000000000 00000000000000000000000000000000 cd ~ sudo nano edid.txt #copy the above commend in edid.txt, save&exit; pi@raspberrypi:~ $ v4l2-ctl --set-edid=file=edid.txt --fix-edid-checksums CTA-861 Header IT Formats Underscanned: yes Audio: yes YCbCr 4:4:4: no YCbCr 4:2:2: no HDMI Vendor-Specific Data Block Physical Address: 3.0.0.0 YCbCr 4:4:4 Deep Color: no 30-bit: no 36-bit: no 48-bit: no CTA-861 Video Capability Descriptor RGB Quantization Range: yes YCC Quantization Range: no PT: Supports both over- and underscan IT: Supports both over- and underscan CE: Supports both over- and underscan The driver does NOT automatically switch to the resolution detected. Use the command: pi@raspberrypi:~ $ v4l2-ctl --query-dv-timings Active width: 1280 Active height: 720 Total width: 1650 Total height: 750 Frame format: progressive Polarities: -vsync -hsync Pixelclock: 74250000 Hz (60.00 frames per second) Horizontal frontporch: 0 Horizontal sync: 370 Horizontal backporch: 0 Vertical frontporch: 0 Vertical sync: 30 Vertical backporch: 0 Standards: Flags: You MUST set the timings via \u201cv4l2-ctl \u2013set-dv-bt-timings\u201d. You can pass in an index to the detected mode, or use: v4l2-ctl --set-dv-bt-timings query to select the currently detected timings. v4l2-ctl -V should now reflect the resolution detected. The chip supports two formats \u2013 BGR3 (the default) and UYVY. BGR3 is 24bpp, and UYVY is YUV4:2:2 16bpp. Over the normal 2 CSI-2 lanes the data rate is such that BGR3 can run at a maximum of 1080p30, whilst UYVY will go up to 1080p50. Use the following command to select UYVY, however your application may override that. v4l2-ctl -v pixelformat=UYVY Check that the audio drivers / card is available to ALSA. pi@raspberrypi:~ $ arecord -l **** List of CAPTURE Hardware Devices **** card 1: tc358743 [tc358743], device 0: bcm2835-i2s-dir-hifi dir-hifi-0 [bcm2835-i2s-dir-hifi dir-hifi-0] Subdevices: 1/1 Subdevice #0: subdevice #0 Note: card 1 means that the card number for the TC358743XBG is \u201c1\u201d and it might be different. Install GStreamer tool. sudo apt install gstreamer1.0-tools Check gstreamer tool version: pi@raspberrypi:~ $ gst-launch-1.0 --version gst-launch-1.0 version 1.18.4 GStreamer 1.18.4 http://packages.qa.debian.org/gstreamer1.0 Note: Different versions have different command line parameters, which is very annoying. Use gstreamer to record video and audio #GStreamer v1.14 command gst-launch-1.0 v4l2src io-mode=5 ! video/x-raw, format=UYVY, framerate=25/1 ! v4l2h264enc output-io-mode=4 ! video/x-h264,profile=high ! h264parse ! queue ! matroskamux name=mux ! filesink location=foo.mkv alsasrc device=hw:1 ! audio/x-raw,rate=48000,channels=2 ! audioconvert ! avenc_aac bitrate=48000 ! aacparse ! queue ! mux. foo.mkv is the output file. If your gstreamer is version 1.8 or above, you can try the following test command. In addition, alsasrc device=hw:1 represents the sound card of TC358743, you can use \u201carecord -l\u201d to query. #The command to recode a video with audio. (GStreamer 1.18.4) gst-launch-1.0 -vvv v4l2src ! \"video/x-raw,framerate=30/1,format=UYVY\" ! v4l2h264enc extra-controls=\"controls,h264_profile=4,h264_level=13,video_bitrate=256000;\" ! \"video/x-h264,profile=high, level=(string)4.2\" ! h264parse ! queue ! matroskamux name=mux ! filesink location=foo.mkv alsasrc device=hw:1 ! audio/x-raw,rate=48000,channels=2 ! audioconvert ! avenc_aac bitrate=48000 ! aacparse ! queue ! mux. #The sample command to recode a video without audio. (C779 doesn't support audio) gst-launch-1.0 -vvv v4l2src ! \"video/x-raw,framerate=30/1,format=UYVY\" ! v4l2h264enc extra-controls=\"controls,h264_profile=4,h264_level=13,video_bitrate=256000;\" ! \"video/x-h264,profile=high, level=(string)4.2\" ! h264parse ! queue ! matroskamux name=mux ! filesink location=foo.mkv Press CTRL+C to end recording. PS: We recommend that you modify the above framerate parameter to the actual frame rate of your HDMI signal, the actual frame rate value is from the result of \u2018v4l2-ctl \u2013query-dv-timings\u2019 command. For the above HDMI device, because the frame rate is 60, so we modify the framerate parameter to 60 like the followint command. Record the video only: gst-launch-1.0 -vvv v4l2src ! \"video/x-raw,framerate=60/1,format=UYVY\" ! v4l2h264enc extra-controls=\"controls,h264_profile=4,h264_level=13,video_bitrate=256000;\" ! \"video/x-h264,profile=high, level=(string)4.2\" ! h264parse ! queue ! matroskamux name=mux ! filesink location=foo.mkv Record the video and audio: (if your shield supports audio also) gst-launch-1.0 -vvv v4l2src ! \"video/x-raw,framerate=60/1,format=UYVY\" ! v4l2h264enc extra-controls=\"controls,h264_profile=4,h264_level=13,video_bitrate=256000;\" ! \"video/x-h264,profile=high, level=(string)4.2\" ! h264parse ! queue ! matroskamux name=mux ! filesink location=foo.mkv alsasrc device=hw:1 ! audio/x-raw,rate=48000,channels=2 ! audioconvert ! avenc_aac bitrate=48000 ! aacparse ! queue ! mux. Note: alsasrc device=hw:1 \u2013 \u201c1\u201d means the audio card number, You must change to correct audio card number. (Query the car number via \u2018arecord \u2013l\u2019, refer to step 9) Pi5B platforms HDMI to CSI module test demo reference. In the following test, the CAM1 channel is used, and the input resolution is 1080P24Hz. During the Raspberry Pi 5B test, it was found that the EDID settings were invalid, so an HDMI emulator needs to be added to force the target to output HDMI. Otherwise, the Raspberry Pi 5B may not receive any input. Due to the lack of corresponding hardware encoding on the Raspberry Pi 5B, the image capture performance of the Raspberry Pi 5B + C790 is generally inferior to that of the Raspberry Pi 4B. Edit /boot/config.txt (sudo permission required). sudo nano /boot/config.txt Add the following content: dtoverlay=tc358743 If your modules (C780 and C790) support audio, add the following content to enable audio support. dtoverlay=tc358743-audio Reboot the Raspberry Pi and execute the following command to find the media node corresponding to the CSI as media0, under the rp1-cfe (platform: 1f00128000.csi) field: blikvm@blikvm:~ $ v4l2-ctl --list-devices pispbe (platform:1000880000.pisp_be): /dev/video20 /dev/video21 /dev/video22 /dev/video23 /dev/video24 /dev/video25 /dev/video26 /dev/video27 /dev/video28 /dev/video29 /dev/video30 /dev/video31 /dev/video32 /dev/video33 /dev/video34 /dev/video35 /dev/video36 /dev/video37 /dev/media1 /dev/media2 rp1-cfe (platform:1f00128000.csi): /dev/video0 /dev/video1 /dev/video2 /dev/video3 /dev/video4 /dev/video5 /dev/video6 /dev/video7 /dev/media0 rpivid (platform:rpivid): /dev/video19 /dev/media3 Locate the node corresponding to tc358743 as v4l-subdev2, and the pad0 of rp1-cfe-csi2_ch0 as video0: blikvm@blikvm:~ $ media-ctl -d /dev/media0 -p Media controller API version 6.1.63 Media device information ------------------------ driver rp1-cfe model rp1-cfe serial bus info platform:1f00128000.csi hw revision 0x114666 driver version 6.1.63 Device topology - entity 1: csi2 (8 pads, 8 links) type V4L2 subdev subtype Unknown flags 0 device node name /dev/v4l-subdev0 pad0: Sink [fmt:SRGGB10_1X10/640x480 field:none colorspace:raw xfer:none ycbcr:601 quantization:full-range] <- \"tc358743 4-000f\":0 [ENABLED,IMMUTABLE] pad1: Sink [fmt:unknown/8192x1 field:none] pad2: Sink [fmt:SRGGB10_1X10/640x480 field:none colorspace:raw xfer:none ycbcr:601 quantization:full-range] pad3: Sink [fmt:SRGGB10_1X10/640x480 field:none colorspace:raw xfer:none ycbcr:601 quantization:full-range] pad4: Source [fmt:SRGGB10_1X10/640x480 field:none colorspace:raw xfer:none ycbcr:601 quantization:full-range] -> \"rp1-cfe-csi2_ch0\":0 [] -> \"pisp-fe\":0 [] pad5: Source [fmt:unknown/8192x1 field:none] -> \"rp1-cfe-embedded\":0 [] pad6: Source [fmt:SRGGB10_1X10/640x480 field:none colorspace:raw xfer:none ycbcr:601 quantization:full-range] -> \"rp1-cfe-csi2_ch2\":0 [] -> \"pisp-fe\":0 [] pad7: Source [fmt:SRGGB10_1X10/640x480 field:none colorspace:raw xfer:none ycbcr:601 quantization:full-range] -> \"rp1-cfe-csi2_ch3\":0 [] -> \"pisp-fe\":0 [] - entity 10: pisp-fe (5 pads, 7 links) type V4L2 subdev subtype Unknown flags 0 device node name /dev/v4l-subdev1 pad0: Sink [fmt:SRGGB16_1X16/640x480 field:none colorspace:raw xfer:none ycbcr:601 quantization:full-range] <- \"csi2\":4 [] <- \"csi2\":6 [] <- \"csi2\":7 [] pad1: Sink [fmt:FIXED/8192x1 field:none] <- \"rp1-cfe-fe_config\":0 [] pad2: Source [fmt:SRGGB16_1X16/640x480 field:none colorspace:raw xfer:none ycbcr:601 quantization:full-range] -> \"rp1-cfe-fe_image0\":0 [] pad3: Source [fmt:SRGGB16_1X16/640x480 field:none colorspace:raw xfer:none ycbcr:601 quantization:full-range] -> \"rp1-cfe-fe_image1\":0 [] pad4: Source [fmt:FIXED/8192x1 field:none] -> \"rp1-cfe-fe_stats\":0 [] - entity 16: tc358743 4-000f (1 pad, 1 link) type V4L2 subdev subtype Unknown flags 0 device node name /dev/v4l-subdev2 pad0: Source [fmt:RGB888_1X24/640x480 field:none colorspace:srgb] [dv.caps:BT.656/1120 min:640x350@13000000 max:1920x1200@165000000 stds:CEA-861,DMT,CVT,GTF caps:progressive,reduced-blanking,custom] [dv.detect:BT.656/1120 1920x1080p24 (2750x1125) stds: flags:] [dv.current:BT.656/1120 640x480p59 (800x525) stds:CEA-861,DMT flags:has-cea861-vic] -> \"csi2\":0 [ENABLED,IMMUTABLE] - entity 18: rp1-cfe-csi2_ch0 (1 pad, 1 link) type Node subtype V4L flags 0 device node name /dev/video0 pad0: Sink <- \"csi2\":4 [] - entity 22: rp1-cfe-embedded (1 pad, 1 link) type Node subtype V4L flags 0 device node name /dev/video1 pad0: Sink <- \"csi2\":5 [] - entity 26: rp1-cfe-csi2_ch2 (1 pad, 1 link) type Node subtype V4L flags 0 device node name /dev/video2 pad0: Sink <- \"csi2\":6 [] - entity 30: rp1-cfe-csi2_ch3 (1 pad, 1 link) type Node subtype V4L flags 0 device node name /dev/video3 pad0: Sink <- \"csi2\":7 [] - entity 34: rp1-cfe-fe_image0 (1 pad, 1 link) type Node subtype V4L flags 1 device node name /dev/video4 pad0: Sink <- \"pisp-fe\":2 [] - entity 38: rp1-cfe-fe_image1 (1 pad, 1 link) type Node subtype V4L flags 0 device node name /dev/video5 pad0: Sink <- \"pisp-fe\":3 [] - entity 42: rp1-cfe-fe_stats (1 pad, 1 link) type Node subtype V4L flags 0 device node name /dev/video6 pad0: Sink <- \"pisp-fe\":4 [] - entity 46: rp1-cfe-fe_config (1 pad, 1 link) type Node subtype V4L flags 0 device node name /dev/video7 pad0: Source -> \"pisp-fe\":1 [] To query the current input source information, if the resolution displays as 0, it indicates that no input source signal has been detected. In this case, you should check the hardware connections and follow the steps mentioned above to troubleshoot. blikvm@blikvm:~ $ v4l2-ctl -d /dev/v4l-subdev2 --query-dv-timings Active width: 1920 Active height: 1080 Total width: 2750 Total height: 1125 Frame format: progressive Polarities: -vsync -hsync Pixelclock: 74250000 Hz (24.00 frames per second) Horizontal frontporch: 0 Horizontal sync: 830 Horizontal backporch: 0 Vertical frontporch: 0 Vertical sync: 45 Vertical backporch: 0 Standards: Flags: Confirm the current input source information. blikvm@blikvm:~ $ v4l2-ctl -d /dev/v4l-subdev2 --set-dv-bt-timings query BT timings set Initialize media0. blikvm@blikvm:~ $ media-ctl -d /dev/media0 -r Connect CSI2's pad4 to rp1-cfe-csi2_ch0's pad0. blikvm@blikvm:~ $ media-ctl -d /dev/media0 -l ''\\''csi2'\\'':4 -> '\\''rp1-cfe-csi2_ch0'\\'':0 [1]' Configure the media node. blikvm@blikvm:~ $ media-ctl -d /dev/media0 -V ''\\''csi2'\\'':0 [fmt:RGB888_1X24/1920x1080 field:none colorspace:srgb]' blikvm@blikvm:~ $ media-ctl -d /dev/media0 -V ''\\''csi2'\\'':4 [fmt:RGB888_1X24/1920x1080 field:none colorspace:srgb]' Set the output format. v4l2-ctl -v width=1920,height=1080,pixelformat=RGB3 Capture two frames for testing to verify if tc358743 is functioning properly. Other methods, such as using GStreamer, are not currently available. v4l2-ctl --verbose -d /dev/video0 --set-fmt-video=width=1920,height=1080,pixelformat='RGB3' --stream-mmap=4 --stream-skip=3 --stream-count=2 --stream-to=hdmiin.yuv --stream-poll If you have installed a desktop version of Raspberry Pi, you can use ffplay to directly play YUV files. ffplay -f rawvideo -video_size 1920x1080 -pixel_format bgr24 hdmiin.yuv On a Windows computer, you can use software like 7yuv to view .yuv files. For the tutorial with an input format of 1920 1080, you should select BGR888 in the top right corner of 7yuv and set the resolution to 1920 1080 to view the two frames you just captured.","title":"Software Demo"},{"location":"hdmi-csi-i2s/#chip-docs","text":"TC358743 Documentation","title":"Chip Docs"},{"location":"hdmi-csi-i2s/#packing-list","text":"C790","title":"Packing List"},{"location":"hdmi-csi-i2s/#test-video","text":"C780A Test C780B Test","title":"Test Video"},{"location":"hdmi-csi-i2s/#purchase-link","text":"Purchase C780 & C790 Purchase C779","title":"Purchase Link"},{"location":"hid/","text":"Video Mouse Keyboard Shortcuts After v1.4.5, custom shortcut keys are supported. Find the shortcuts configuration item, where key is the button name on the web UI and value is the specific button. sudo -s vim /mnt/exec/release/config/app.json ## default config\uff1a \"shortcuts\": { \"Ctrl+Alt+Del\": [\"ControlLeft\",\"AltLeft\",\"Delete\"], \"Alt+Tab\": [\"AltLeft\",\"Tab\"], \"Alt+F4\": [\"AltLeft\",\"F4\"], \"Alt+Enter\": [\"AltLeft\",\"Enter\"], \"Ctrl+W\": [\"ControlLeft\",\"KeyW\"] } The key names have uniqueness, and the specific key names are provided below \"{backspace}\": \"Backspace\", \"{tab}\": \"Tab\", \"{enter}\": \"Enter\", \"{shiftleft}\": \"ShiftLeft\", \"{shiftright}\": \"ShiftRight\", \"{altleft}\": \"AltLeft\", \"{altright}\": \"AltRight\", \"{prtscr}\": \"PrtScr\", \"{pause}\": \"Pause\", \"{scrolllock}\": \"ScrollLock\", \"{controlleft}\": \"ControlLeft\", \"{controlright}\": \"ControlRight\", \"{metaleft}\": \"MetaLeft\", \"{metaright}\": \"MetaRight\", \"{capslock}\": \"CapsLock\", \"{escape}\": \"Escape\", \"{space}\": \"Space\", \"{pageup}\": \"PageUp\", \"{pagedown}\": \"PageDown\", \"{end}\": \"End\", \"{home}\": \"Home\", \"{arrowleft}\": \"ArrowLeft\", \"{arrowup}\": \"ArrowUp\", \"{arrowright}\": \"ArrowRight\", \"{arrowdown}\": \"ArrowDown\", \"{insert}\": \"Insert\", \"{delete}\": \"Delete\", // Digits keys 1: \"Digit1\", 2: \"Digit2\", 3: \"Digit3\", 4: \"Digit4\", 5: \"Digit5\", 6: \"Digit6\", 7: \"Digit7\", 8: \"Digit8\", 9: \"Digit9\", 0: \"Digit0\", // \"!\": \"Digit1\", // ! maps to the '1' key \"@\": \"Digit2\", // @ maps to the '2' key \"#\": \"Digit3\", // # maps to the '3' key $: \"Digit4\", // $ maps to the '4' key \"%\": \"Digit5\", // % maps to the '5' key \"^\": \"Digit6\", // ^ maps to the '6' key \"&\": \"Digit7\", // & maps to the '7' key \"*\": \"Digit8\", // * maps to the '8' key \"(\": \"Digit9\", // ( maps to the '9' key \")\": \"Digit0\", // ) maps to the '0' key a: \"KeyA\", b: \"KeyB\", c: \"KeyC\", d: \"KeyD\", e: \"KeyE\", f: \"KeyF\", g: \"KeyG\", h: \"KeyH\", i: \"KeyI\", j: \"KeyJ\", k: \"KeyK\", l: \"KeyL\", m: \"KeyM\", n: \"KeyN\", o: \"KeyO\", p: \"KeyP\", q: \"KeyQ\", r: \"KeyR\", s: \"KeyS\", t: \"KeyT\", u: \"KeyU\", v: \"KeyV\", w: \"KeyW\", x: \"KeyX\", y: \"KeyY\", z: \"KeyZ\", // A: \"KeyA\", B: \"KeyB\", C: \"KeyC\", D: \"KeyD\", E: \"KeyE\", F: \"KeyF\", G: \"KeyG\", H: \"KeyH\", I: \"KeyI\", J: \"KeyJ\", K: \"KeyK\", L: \"KeyL\", M: \"KeyM\", N: \"KeyN\", O: \"KeyO\", P: \"KeyP\", Q: \"KeyQ\", R: \"KeyR\", S: \"KeyS\", T: \"KeyT\", U: \"KeyU\", V: \"KeyV\", W: \"KeyW\", X: \"KeyX\", Y: \"KeyY\", Z: \"KeyZ\", \"-\": \"Minus\", _: \"Minus\", \"=\": \"Equal\", \"+\": \"Equal\", \"[\": \"BracketLeft\", \"{\": \"BracketLeft\", \"]\": \"BracketRight\", \"}\": \"BracketRight\", \"|\": \"Backslash\", \"\\\\\": \"Backslash\", \"`\": \"Backquote\", \"~\": \"Backquote\", \";\": \"Semicolon\", \":\": \"Semicolon\", \"'\": \"Quote\", '\"': \"Quote\", \",\": \"Comma\", \"<\": \"Comma\", \".\": \"Period\", \">\": \"Period\", \"/\": \"Slash\", \"?\": \"Slash\", // Numpad keys \"{numpad0}\": \"Numpad0\", \"{numpad1}\": \"Numpad1\", \"{numpad2}\": \"Numpad2\", \"{numpad3}\": \"Numpad3\", \"{numpad4}\": \"Numpad4\", \"{numpad5}\": \"Numpad5\", \"{numpad6}\": \"Numpad6\", \"{numpad7}\": \"Numpad7\", \"{numpad8}\": \"Numpad8\", \"{numpad9}\": \"Numpad9\", \"{numlock}\": \"numlock\", \"{numpadmultiply}\": \"NumpadMultiply\", \"{numpadadd}\": \"NumpadAdd\", \"{numpadsubtract}\": \"NumpadSubtract\", \"{numpaddecimal}\": \"NumpadDecimal\", \"{numpaddivide}\": \"NumpadDivide\", \"{numpadenter}\": \"NumpadEnter\", // Function keys \"{f1}\": \"F1\", \"{f2}\": \"F2\", \"{f3}\": \"F3\", \"{f4}\": \"F4\", \"{f5}\": \"F5\", \"{f6}\": \"F6\", \"{f7}\": \"F7\", \"{f8}\": \"F8\", \"{f9}\": \"F9\", \"{f10}\": \"F10\", \"{f11}\": \"F11\", \"{f12}\": \"F12\"","title":"Keyboard"},{"location":"hid/#video-mouse-keyboard","text":"","title":"Video Mouse Keyboard"},{"location":"hid/#shortcuts","text":"After v1.4.5, custom shortcut keys are supported. Find the shortcuts configuration item, where key is the button name on the web UI and value is the specific button. sudo -s vim /mnt/exec/release/config/app.json ## default config\uff1a \"shortcuts\": { \"Ctrl+Alt+Del\": [\"ControlLeft\",\"AltLeft\",\"Delete\"], \"Alt+Tab\": [\"AltLeft\",\"Tab\"], \"Alt+F4\": [\"AltLeft\",\"F4\"], \"Alt+Enter\": [\"AltLeft\",\"Enter\"], \"Ctrl+W\": [\"ControlLeft\",\"KeyW\"] } The key names have uniqueness, and the specific key names are provided below \"{backspace}\": \"Backspace\", \"{tab}\": \"Tab\", \"{enter}\": \"Enter\", \"{shiftleft}\": \"ShiftLeft\", \"{shiftright}\": \"ShiftRight\", \"{altleft}\": \"AltLeft\", \"{altright}\": \"AltRight\", \"{prtscr}\": \"PrtScr\", \"{pause}\": \"Pause\", \"{scrolllock}\": \"ScrollLock\", \"{controlleft}\": \"ControlLeft\", \"{controlright}\": \"ControlRight\", \"{metaleft}\": \"MetaLeft\", \"{metaright}\": \"MetaRight\", \"{capslock}\": \"CapsLock\", \"{escape}\": \"Escape\", \"{space}\": \"Space\", \"{pageup}\": \"PageUp\", \"{pagedown}\": \"PageDown\", \"{end}\": \"End\", \"{home}\": \"Home\", \"{arrowleft}\": \"ArrowLeft\", \"{arrowup}\": \"ArrowUp\", \"{arrowright}\": \"ArrowRight\", \"{arrowdown}\": \"ArrowDown\", \"{insert}\": \"Insert\", \"{delete}\": \"Delete\", // Digits keys 1: \"Digit1\", 2: \"Digit2\", 3: \"Digit3\", 4: \"Digit4\", 5: \"Digit5\", 6: \"Digit6\", 7: \"Digit7\", 8: \"Digit8\", 9: \"Digit9\", 0: \"Digit0\", // \"!\": \"Digit1\", // ! maps to the '1' key \"@\": \"Digit2\", // @ maps to the '2' key \"#\": \"Digit3\", // # maps to the '3' key $: \"Digit4\", // $ maps to the '4' key \"%\": \"Digit5\", // % maps to the '5' key \"^\": \"Digit6\", // ^ maps to the '6' key \"&\": \"Digit7\", // & maps to the '7' key \"*\": \"Digit8\", // * maps to the '8' key \"(\": \"Digit9\", // ( maps to the '9' key \")\": \"Digit0\", // ) maps to the '0' key a: \"KeyA\", b: \"KeyB\", c: \"KeyC\", d: \"KeyD\", e: \"KeyE\", f: \"KeyF\", g: \"KeyG\", h: \"KeyH\", i: \"KeyI\", j: \"KeyJ\", k: \"KeyK\", l: \"KeyL\", m: \"KeyM\", n: \"KeyN\", o: \"KeyO\", p: \"KeyP\", q: \"KeyQ\", r: \"KeyR\", s: \"KeyS\", t: \"KeyT\", u: \"KeyU\", v: \"KeyV\", w: \"KeyW\", x: \"KeyX\", y: \"KeyY\", z: \"KeyZ\", // A: \"KeyA\", B: \"KeyB\", C: \"KeyC\", D: \"KeyD\", E: \"KeyE\", F: \"KeyF\", G: \"KeyG\", H: \"KeyH\", I: \"KeyI\", J: \"KeyJ\", K: \"KeyK\", L: \"KeyL\", M: \"KeyM\", N: \"KeyN\", O: \"KeyO\", P: \"KeyP\", Q: \"KeyQ\", R: \"KeyR\", S: \"KeyS\", T: \"KeyT\", U: \"KeyU\", V: \"KeyV\", W: \"KeyW\", X: \"KeyX\", Y: \"KeyY\", Z: \"KeyZ\", \"-\": \"Minus\", _: \"Minus\", \"=\": \"Equal\", \"+\": \"Equal\", \"[\": \"BracketLeft\", \"{\": \"BracketLeft\", \"]\": \"BracketRight\", \"}\": \"BracketRight\", \"|\": \"Backslash\", \"\\\\\": \"Backslash\", \"`\": \"Backquote\", \"~\": \"Backquote\", \";\": \"Semicolon\", \":\": \"Semicolon\", \"'\": \"Quote\", '\"': \"Quote\", \",\": \"Comma\", \"<\": \"Comma\", \".\": \"Period\", \">\": \"Period\", \"/\": \"Slash\", \"?\": \"Slash\", // Numpad keys \"{numpad0}\": \"Numpad0\", \"{numpad1}\": \"Numpad1\", \"{numpad2}\": \"Numpad2\", \"{numpad3}\": \"Numpad3\", \"{numpad4}\": \"Numpad4\", \"{numpad5}\": \"Numpad5\", \"{numpad6}\": \"Numpad6\", \"{numpad7}\": \"Numpad7\", \"{numpad8}\": \"Numpad8\", \"{numpad9}\": \"Numpad9\", \"{numlock}\": \"numlock\", \"{numpadmultiply}\": \"NumpadMultiply\", \"{numpadadd}\": \"NumpadAdd\", \"{numpadsubtract}\": \"NumpadSubtract\", \"{numpaddecimal}\": \"NumpadDecimal\", \"{numpaddivide}\": \"NumpadDivide\", \"{numpadenter}\": \"NumpadEnter\", // Function keys \"{f1}\": \"F1\", \"{f2}\": \"F2\", \"{f3}\": \"F3\", \"{f4}\": \"F4\", \"{f5}\": \"F5\", \"{f6}\": \"F6\", \"{f7}\": \"F7\", \"{f8}\": \"F8\", \"{f9}\": \"F9\", \"{f10}\": \"F10\", \"{f11}\": \"F11\", \"{f12}\": \"F12\"","title":"Shortcuts"},{"location":"https/","text":"Encryption Certificate From version v1.4.9, blikvm defaults to HTTPS. Even if you access via HTTP, it will automatically redirect to HTTPS: sudo -s vim /mnt/exec/release/config/app.json Find the following configuration content. The key and cert are located in the path /mnt/exec/release/lib/https/. Users can replace them as needed. \"server\": { \"ssl\": { \"key\": \"./lib/https/key.pem\", \"cert\": \"./lib/https/cert.pem\" } Let's Encrypt Info You need a publicly valid domain name to use Let's Encrypt. This example uses the domain blikvm.space. Start applying for the certificate Run the following command to start applying for the certificate: certbot certonly --manual --preferred-challenges dns -d example.com Add a DNS record in the domain console. Saving debug log to /var/log/letsencrypt/letsencrypt.log Plugins selected: Authenticator manual, Installer None Requesting a certificate for blikvm.space Performing the following challenges: dns-01 challenge for blikvm.space - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - Please deploy a DNS TXT record under the name _acme-challenge.blikvm.space with the following value: UyC2WAhvG9zDuyDPKAHovW6y-RxpZ1_KB8XnT4UyAnc Before continuing, verify the record is deployed. - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - Press Enter to Continue After executing the above command, you will see similar output. Follow the prompts to log in to the domain backend (such as Amazon Cloud, Alibaba Cloud, Tencent Cloud, etc.), add a TXT record named _acme-challenge.example.com, and use UyC2WAhvG9zDuyDPKAHovW6y-RxpZ1_KB8XnT4UyAnc as the record value. When the DNS record takes effect, press Enter to continue. Warn DNS records do not take effect immediately, so press Enter later. Use the command nslookup -type=TXT _acme-challenge.blikvm.space to verify if the DNS is effective, as shown below: root@blikvm(rw):/mnt/tmp# nslookup -type=TXT _acme-challenge.blikvm.space Server: 192.168.8.1 Address: 192.168.8.1#53 Non-authoritative answer: _acme-challenge.blikvm.space text = \"UyC2WAhvG9zDuyDPKAHovW6y-RxpZ1_KB8XnT4UyAnc\" Authoritative answers can be found from: You will receive a certificate application success prompt (similar to the following content): Waiting for verification... Cleaning up challenges Subscribe to the EFF mailing list (email: info@blicube.com). IMPORTANT NOTES: - Congratulations! Your certificate and chain have been saved at: /etc/letsencrypt/live/blikvm.space/fullchain.pem Your key file has been saved at: /etc/letsencrypt/live/blikvm.space/privkey.pem Your certificate will expire on 2025-03-04. To obtain a new or tweaked version of this certificate in the future, simply run certbot again. To non-interactively renew *all* of your certificates, run \"certbot renew\" - If you like Certbot, please consider supporting our work by: Donating to ISRG / Let's Encrypt: https://letsencrypt.org/donate Donating to EFF: https://eff.org/donate-le 4. Use the certificate According to step 3, you can see that the certificate path is in /etc/letsencrypt/live/blikvm.space/. Modify the configuration file: vim /mnt/exec/release/config/app.json Replace the following key and cert with \"server\": { \"ssl\": { \"key\": \"/etc/letsencrypt/live/blikvm.space/privkey.pem\", \"cert\": \"/etc/letsencrypt/live/blikvm.space/fullchain.pem\" } 5. Set the local domain name for blikvm. Open /etc/hosts on the PC, and add the following line. The IP and domain name here depend on your actual situation. 192.168.8.16 blikvm.space Then you can directly access blikvm using the domain name.","title":"Encrypt certificates"},{"location":"https/#encryption-certificate","text":"From version v1.4.9, blikvm defaults to HTTPS. Even if you access via HTTP, it will automatically redirect to HTTPS: sudo -s vim /mnt/exec/release/config/app.json Find the following configuration content. The key and cert are located in the path /mnt/exec/release/lib/https/. Users can replace them as needed. \"server\": { \"ssl\": { \"key\": \"./lib/https/key.pem\", \"cert\": \"./lib/https/cert.pem\" }","title":"Encryption Certificate"},{"location":"https/#lets-encrypt","text":"Info You need a publicly valid domain name to use Let's Encrypt. This example uses the domain blikvm.space. Start applying for the certificate Run the following command to start applying for the certificate: certbot certonly --manual --preferred-challenges dns -d example.com Add a DNS record in the domain console. Saving debug log to /var/log/letsencrypt/letsencrypt.log Plugins selected: Authenticator manual, Installer None Requesting a certificate for blikvm.space Performing the following challenges: dns-01 challenge for blikvm.space - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - Please deploy a DNS TXT record under the name _acme-challenge.blikvm.space with the following value: UyC2WAhvG9zDuyDPKAHovW6y-RxpZ1_KB8XnT4UyAnc Before continuing, verify the record is deployed. - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - Press Enter to Continue After executing the above command, you will see similar output. Follow the prompts to log in to the domain backend (such as Amazon Cloud, Alibaba Cloud, Tencent Cloud, etc.), add a TXT record named _acme-challenge.example.com, and use UyC2WAhvG9zDuyDPKAHovW6y-RxpZ1_KB8XnT4UyAnc as the record value. When the DNS record takes effect, press Enter to continue. Warn DNS records do not take effect immediately, so press Enter later. Use the command nslookup -type=TXT _acme-challenge.blikvm.space to verify if the DNS is effective, as shown below: root@blikvm(rw):/mnt/tmp# nslookup -type=TXT _acme-challenge.blikvm.space Server: 192.168.8.1 Address: 192.168.8.1#53 Non-authoritative answer: _acme-challenge.blikvm.space text = \"UyC2WAhvG9zDuyDPKAHovW6y-RxpZ1_KB8XnT4UyAnc\" Authoritative answers can be found from: You will receive a certificate application success prompt (similar to the following content): Waiting for verification... Cleaning up challenges Subscribe to the EFF mailing list (email: info@blicube.com). IMPORTANT NOTES: - Congratulations! Your certificate and chain have been saved at: /etc/letsencrypt/live/blikvm.space/fullchain.pem Your key file has been saved at: /etc/letsencrypt/live/blikvm.space/privkey.pem Your certificate will expire on 2025-03-04. To obtain a new or tweaked version of this certificate in the future, simply run certbot again. To non-interactively renew *all* of your certificates, run \"certbot renew\" - If you like Certbot, please consider supporting our work by: Donating to ISRG / Let's Encrypt: https://letsencrypt.org/donate Donating to EFF: https://eff.org/donate-le 4. Use the certificate According to step 3, you can see that the certificate path is in /etc/letsencrypt/live/blikvm.space/. Modify the configuration file: vim /mnt/exec/release/config/app.json Replace the following key and cert with \"server\": { \"ssl\": { \"key\": \"/etc/letsencrypt/live/blikvm.space/privkey.pem\", \"cert\": \"/etc/letsencrypt/live/blikvm.space/fullchain.pem\" } 5. Set the local domain name for blikvm. Open /etc/hosts on the PC, and add the following line. The IP and domain name here depend on your actual situation. 192.168.8.16 blikvm.space Then you can directly access blikvm using the domain name.","title":"Let's Encrypt"},{"location":"make-image/","text":"Make your own image When you have made modifications to an image and want to create your own image, you can follow the steps below on Linux to create a minimal image. touch /mnt/tmp/firstboot > ~/.bash_history Firstly, use the gparted software to open the SD card of the image you want to create. Use gparted to partition the unused space and set it as unallocated. This ensures that this portion of empty space without any valid content is not included in the image creation. Next, use the fdisk command to view the size of the available space, as shown in the following image, which is 10151935. Then, use the dd command to write to an empty img file. Set the count value to be greater than the size of the volume end obtained from fdisk by at least 1. touch blikvm-armbian-v4-20230623.img sudo dd if = /dev/sdb of = ./blikvm-armbian-v4-20230623.img bs = 512 count = 10151936 Wait for the dd command to finish executing.","title":"Make Image"},{"location":"make-image/#make-your-own-image","text":"When you have made modifications to an image and want to create your own image, you can follow the steps below on Linux to create a minimal image. touch /mnt/tmp/firstboot > ~/.bash_history Firstly, use the gparted software to open the SD card of the image you want to create. Use gparted to partition the unused space and set it as unallocated. This ensures that this portion of empty space without any valid content is not included in the image creation. Next, use the fdisk command to view the size of the available space, as shown in the following image, which is 10151935. Then, use the dd command to write to an empty img file. Set the count value to be greater than the size of the volume end obtained from fdisk by at least 1. touch blikvm-armbian-v4-20230623.img sudo dd if = /dev/sdb of = ./blikvm-armbian-v4-20230623.img bs = 512 count = 10151936 Wait for the dd command to finish executing.","title":"Make your own image"},{"location":"modify_pikvm_image/","text":"Modifying PiKVM image to work with BliKVM hardware Because the blikvm hardware implementation scheme and PiKVM hardware implementation scheme are not exactly the same, you need to modify some errors through the following configuration for the official image of PiKVM. Of course, you can use the configured image . Fan config Since BliKVM's fan hardware is different to PiKVM's, you need to replace the control fan script first. The following default starting fan temperature is 40 degrees Celsius su - rw git clone https://github.com/ThomasVon2021/blikvm.git cd blikvm/package/kvmd-fan bash install-kvmd-fan.sh ro Edit the /etc/kvmd/override.yaml file and add the following content to remove the web UI error warning about fans. kvmd: info: fan: unix: '' Check EDID file for 1080P60Hz input The function of the EDID file is to set the controlled computer to input according to the expected resolution. Since the image EDID file of PiKVM in different periods does not necessarily meet 1080P60Hz, when you use the CM4 version of hardware, it is found that the default output of the controlled computer is not 1080P60Hz, you can modify /etc/kvmd/tc358743-edid.hex to the following contentsmake sure /boot/config.txt has the 4lane=1 entry in it for 1080p60hz support # Video and audio dtoverlay=tc358743,4lane=1 dtoverlay=tc358743-audio If you use webrtc can't get audio, try to edit /etc/kvmd/janus/janus.plugin.ustreamer.jcfg to add audio support. audio: { device = \"hw:0,0\" tc358743 = \"/dev/kvmd-video\" } OLED Follow the method below to enable OLED. If you use PiKVM official image, log in to PiKVM and run these commands: # rw # systemctl enable --now kvmd-oled //Enable OLED # ro If the oled still can't work, you need to check whether there has \"dtparam=i2c_arm=on\" in \"/boot/config.txt\" file, and whether there has \"i2c-dev\" in \"/etc/modules-load.d/i2c.conf\" file. If not, please create and add them. If it still does not work after the above configuration, please burn the image provided by blikvm for testing to check whether the OLED hardware is damaged. Config about v4mini image If you want to PiKVM v4mini image for blikvm v1 and v2, because v4mini image uses different gpio pins for ATX controls, so you will need the following override if you want to run v4mini image on your blikvm v1 or v2 version and be able to use ATX controls; if you don't make this change, ATX controls won't work properly (the led pins are different); Edit the /etc/kvmd/override.yaml file and add the following: kvmd: ### disable fan socket check ### info: fan: unix: '' atx: hdd_led_pin: 22 power_led_pin: 24 power_switch_pin: 23 reset_switch_pin: 27 type: gpio gpio: scheme: __v3_usb_breaker__: pin: 5 mode: output initial: false pulse: delay: 0","title":"Config for PiKVM OS"},{"location":"modify_pikvm_image/#modifying-pikvm-image-to-work-with-blikvm-hardware","text":"Because the blikvm hardware implementation scheme and PiKVM hardware implementation scheme are not exactly the same, you need to modify some errors through the following configuration for the official image of PiKVM. Of course, you can use the configured image .","title":"Modifying PiKVM image to work with BliKVM hardware"},{"location":"modify_pikvm_image/#fan-config","text":"Since BliKVM's fan hardware is different to PiKVM's, you need to replace the control fan script first. The following default starting fan temperature is 40 degrees Celsius su - rw git clone https://github.com/ThomasVon2021/blikvm.git cd blikvm/package/kvmd-fan bash install-kvmd-fan.sh ro Edit the /etc/kvmd/override.yaml file and add the following content to remove the web UI error warning about fans. kvmd: info: fan: unix: ''","title":"Fan config"},{"location":"modify_pikvm_image/#check-edid-file-for-1080p60hz-input","text":"The function of the EDID file is to set the controlled computer to input according to the expected resolution. Since the image EDID file of PiKVM in different periods does not necessarily meet 1080P60Hz, when you use the CM4 version of hardware, it is found that the default output of the controlled computer is not 1080P60Hz, you can modify /etc/kvmd/tc358743-edid.hex to the following contentsmake sure /boot/config.txt has the 4lane=1 entry in it for 1080p60hz support # Video and audio dtoverlay=tc358743,4lane=1 dtoverlay=tc358743-audio If you use webrtc can't get audio, try to edit /etc/kvmd/janus/janus.plugin.ustreamer.jcfg to add audio support. audio: { device = \"hw:0,0\" tc358743 = \"/dev/kvmd-video\" }","title":"Check EDID file for 1080P60Hz input"},{"location":"modify_pikvm_image/#oled","text":"Follow the method below to enable OLED. If you use PiKVM official image, log in to PiKVM and run these commands: # rw # systemctl enable --now kvmd-oled //Enable OLED # ro If the oled still can't work, you need to check whether there has \"dtparam=i2c_arm=on\" in \"/boot/config.txt\" file, and whether there has \"i2c-dev\" in \"/etc/modules-load.d/i2c.conf\" file. If not, please create and add them. If it still does not work after the above configuration, please burn the image provided by blikvm for testing to check whether the OLED hardware is damaged.","title":"OLED"},{"location":"modify_pikvm_image/#config-about-v4mini-image","text":"If you want to PiKVM v4mini image for blikvm v1 and v2, because v4mini image uses different gpio pins for ATX controls, so you will need the following override if you want to run v4mini image on your blikvm v1 or v2 version and be able to use ATX controls; if you don't make this change, ATX controls won't work properly (the led pins are different); Edit the /etc/kvmd/override.yaml file and add the following: kvmd: ### disable fan socket check ### info: fan: unix: '' atx: hdd_led_pin: 22 power_led_pin: 24 power_switch_pin: 23 reset_switch_pin: 27 type: gpio gpio: scheme: __v3_usb_breaker__: pin: 5 mode: output initial: false pulse: delay: 0","title":"Config about v4mini image"},{"location":"msd/","text":"Mass Storage Drive Reinstall the system Video BliKVM's USB device simulation feature allows you to remotely mount images on the virtual machine's mass storage drive, making it easy to install or reinstall operating systems and other software. This can be a useful feature for system administrators who need to manage multiple virtual machines remotely. By mounting an image on the mass storage drive, you can quickly and easily set up or configure a new virtual machine without having to physically connect a USB drive or other external storage device. Note: the size of the MSD is limited by the size of your sd card or eMMC module. Web UI The entrance to the MSD virtual USB drive is as follows: Using the web to upload images and create bootable drives are both synchronous processes. If you exit the MSD UI interface after uploading an image, you can resume the upload from where it left off the next time you select the same image. However, once you exit the bootable drive creation process, you cannot resume it; you will need to start over. The default upload path for images is /mnt/upload . If an upload fails, you can manually delete the cache files that were not successfully uploaded. Due to the large size of some image files, image uploads are divided into slices and then merged. The merging process cannot be resumed, so please ensure you wait for the merge to complete (which may take some time) before proceeding to the next step. Creating a bootable drive involves two steps: creating a virtual USB drive and copying the selected ISO image into the created virtual USB drive. Both steps have progress indicators. Please wait until both steps show 100% progress before clicking Next. Upload images manually (without Web UI) Confirm that the following four paths exist. If you are using the official latest image of blikvm, and it is fully configured, there is no need to check. /usr/bin/blikvm/ventoy-1.0.88 /usr/bin/blikvm/kvmd-msd.sh /mnt/msd/user /mnt/msd/ventoy SSH logs in to blikvm, executes the rw command, and changes the system permission to writable. rw In your PC ,use scp cmd send iso file to kvm board. scp ***.iso blikvm@xxx.xxx.xxx.xxx:/mnt/msd/user/ excute msd cmd.wait until excute end. If you don't use option paramter\uff1a The default size of the USB flash disk is 5GB. The default filename is scan /mnt/msd/user dir. The default msd name is ventoy. sudo bash /usr/bin/blikvm/kvmd-msd.sh -c make If your iso is large than 5GB.You can specify the optional parameter - s xxx, xxx is the Size. If you need specify iso ,you can use -f xxx.iso. If you want to specify the msd name, you can use -n xxx. sudo bash /usr/bin/blikvm/kvmd-msd.sh -c make -s 5 -n ventoy -f xxx.iso Tips: cp progresses slowly, please be patient. If you want to excute other cmd, you can use other option. c option contains : make/conn/disconn/clean Connect msd sudo bash /usr/bin/blikvm/kvmd-msd.sh -c conn Disconnect msd sudo bash /usr/bin/blikvm/kvmd-msd.sh -c disconn Clean msd sudo bash /usr/bin/blikvm/kvmd-msd.sh -c clean Through the WebUI restart PC, enter BIOS, modify boot priority, set BliKVM USB first. According to the steps, select operating system, format partition and install.","title":"MSD"},{"location":"msd/#mass-storage-drive","text":"Reinstall the system Video BliKVM's USB device simulation feature allows you to remotely mount images on the virtual machine's mass storage drive, making it easy to install or reinstall operating systems and other software. This can be a useful feature for system administrators who need to manage multiple virtual machines remotely. By mounting an image on the mass storage drive, you can quickly and easily set up or configure a new virtual machine without having to physically connect a USB drive or other external storage device. Note: the size of the MSD is limited by the size of your sd card or eMMC module.","title":"Mass Storage Drive"},{"location":"msd/#web-ui","text":"The entrance to the MSD virtual USB drive is as follows: Using the web to upload images and create bootable drives are both synchronous processes. If you exit the MSD UI interface after uploading an image, you can resume the upload from where it left off the next time you select the same image. However, once you exit the bootable drive creation process, you cannot resume it; you will need to start over. The default upload path for images is /mnt/upload . If an upload fails, you can manually delete the cache files that were not successfully uploaded. Due to the large size of some image files, image uploads are divided into slices and then merged. The merging process cannot be resumed, so please ensure you wait for the merge to complete (which may take some time) before proceeding to the next step. Creating a bootable drive involves two steps: creating a virtual USB drive and copying the selected ISO image into the created virtual USB drive. Both steps have progress indicators. Please wait until both steps show 100% progress before clicking Next.","title":"Web UI"},{"location":"msd/#upload-images-manually-without-web-ui","text":"Confirm that the following four paths exist. If you are using the official latest image of blikvm, and it is fully configured, there is no need to check. /usr/bin/blikvm/ventoy-1.0.88 /usr/bin/blikvm/kvmd-msd.sh /mnt/msd/user /mnt/msd/ventoy SSH logs in to blikvm, executes the rw command, and changes the system permission to writable. rw In your PC ,use scp cmd send iso file to kvm board. scp ***.iso blikvm@xxx.xxx.xxx.xxx:/mnt/msd/user/ excute msd cmd.wait until excute end. If you don't use option paramter\uff1a The default size of the USB flash disk is 5GB. The default filename is scan /mnt/msd/user dir. The default msd name is ventoy. sudo bash /usr/bin/blikvm/kvmd-msd.sh -c make If your iso is large than 5GB.You can specify the optional parameter - s xxx, xxx is the Size. If you need specify iso ,you can use -f xxx.iso. If you want to specify the msd name, you can use -n xxx. sudo bash /usr/bin/blikvm/kvmd-msd.sh -c make -s 5 -n ventoy -f xxx.iso Tips: cp progresses slowly, please be patient. If you want to excute other cmd, you can use other option. c option contains : make/conn/disconn/clean Connect msd sudo bash /usr/bin/blikvm/kvmd-msd.sh -c conn Disconnect msd sudo bash /usr/bin/blikvm/kvmd-msd.sh -c disconn Clean msd sudo bash /usr/bin/blikvm/kvmd-msd.sh -c clean Through the WebUI restart PC, enter BIOS, modify boot priority, set BliKVM USB first. According to the steps, select operating system, format partition and install.","title":"Upload images manually (without Web UI)"},{"location":"port-forwarding/","text":"Port forwarding After v1.4.7 version If your ISP provides an external IP address for the router, you can configure Port forwarding to access BliKVM: If the web interface uses the HTTP protocol and occupies port 80; If the web interface uses the HTTPS protocol and occupies port 443; If you do not have an external IP address, we suggest trying to use Tailscale VPN \u3002","title":"Port Forwarding"},{"location":"port-forwarding/#port-forwarding","text":"After v1.4.7 version If your ISP provides an external IP address for the router, you can configure Port forwarding to access BliKVM: If the web interface uses the HTTP protocol and occupies port 80; If the web interface uses the HTTPS protocol and occupies port 443; If you do not have an external IP address, we suggest trying to use Tailscale VPN \u3002","title":"Port forwarding"},{"location":"rtc/","text":"RTC Clock The purpose of an RTC (Real-Time Clock) is to provide real-time information about the current date and time for a device or system. It is an independent clock chip or module that has its own power source, allowing it to maintain accurate time even when the device is powered off or experiences a power outage. Due to shipping restrictions on international deliveries, the RTC hardware is shipped without a battery, and users need to purchase a CR1220 button cell battery themselves. The specific RTC clock model used in different versions of BliKVM may vary, and the usage methods may differ slightly. BliKVM V2 PCIe and BliKVM V3 Hat - pcf8563 1. Check if the pcf8563 RTC clock hardware is properly recognized on the i2c bus. The pcf8563 RTC clock has an i2c address of 0x51. Execute the following command as root to verify if the rtc clock is correctly detected on the i2c bus: root@mangopimcore:~# i2cdetect -y 1 0 1 2 3 4 5 6 7 8 9 a b c d e f 00: -- -- -- -- -- -- -- -- 10: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 20: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 30: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 40: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 50: -- 51 -- -- -- -- -- -- -- -- -- -- -- -- -- -- 60: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 70: -- -- -- -- -- -- -- -- 2. Register a new i2c device with the Linux system's i2c subsystem. The device is a pcf8563 with an i2c address of 0x51. Use the command ls /dev | grep rtc to verify if the rtc1 device appears, indicating a successful registration. echo pcf8563 0x51 > /sys/class/i2c-adapter/i2c-1/new_device 3. Set the current system time to the RTC clock time. hwclock -f /dev/rtc0 -w 4. Read the time from the RTC clock. If the time can be read, it indicates that the RTC module is functioning correctly. root@mangopimcore:~# hwclock -f /dev/rtc0 -r 2023-05-28 05:04:08.679152-02:30 BliKVM V4 - pcf8563 1. Check if the pcf8563 RTC clock hardware is properly recognized on the i2c bus. The pcf8563 RTC clock has an i2c address of 0x51. Execute the following command as root to verify if the rtc clock is correctly detected on the i2c bus: root@mangopimcore:~# i2cdetect -y 0 0 1 2 3 4 5 6 7 8 9 a b c d e f 00: -- -- -- -- -- -- -- -- 10: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 20: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 30: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 40: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 50: -- 51 -- -- -- -- -- -- -- -- -- -- -- -- -- -- 60: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 70: -- -- -- -- -- -- -- -- 2. Register a new i2c device with the Linux system's i2c subsystem. The device is a pcf8563 with an i2c address of 0x51. Use the command ls /dev | grep rtc to verify if the rtc1 device appears, indicating a successful registration. echo pcf8563 0x51 > /sys/class/i2c-adapter/i2c-0/new_device 3. Set the current system time to the RTC clock time. hwclock -f /dev/rtc1 -w 4. Read the time from the RTC clock. If the time can be read, it indicates that the RTC module is functioning correctly. root@mangopimcore:~# hwclock -f /dev/rtc1 -r 2023-05-28 05:04:08.679152-02:30","title":"RTC clock"},{"location":"rtc/#rtc-clock","text":"The purpose of an RTC (Real-Time Clock) is to provide real-time information about the current date and time for a device or system. It is an independent clock chip or module that has its own power source, allowing it to maintain accurate time even when the device is powered off or experiences a power outage. Due to shipping restrictions on international deliveries, the RTC hardware is shipped without a battery, and users need to purchase a CR1220 button cell battery themselves. The specific RTC clock model used in different versions of BliKVM may vary, and the usage methods may differ slightly.","title":"RTC Clock"},{"location":"rtc/#blikvm-v2-pcie-and-blikvm-v3-hat-pcf8563","text":"1. Check if the pcf8563 RTC clock hardware is properly recognized on the i2c bus. The pcf8563 RTC clock has an i2c address of 0x51. Execute the following command as root to verify if the rtc clock is correctly detected on the i2c bus: root@mangopimcore:~# i2cdetect -y 1 0 1 2 3 4 5 6 7 8 9 a b c d e f 00: -- -- -- -- -- -- -- -- 10: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 20: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 30: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 40: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 50: -- 51 -- -- -- -- -- -- -- -- -- -- -- -- -- -- 60: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 70: -- -- -- -- -- -- -- -- 2. Register a new i2c device with the Linux system's i2c subsystem. The device is a pcf8563 with an i2c address of 0x51. Use the command ls /dev | grep rtc to verify if the rtc1 device appears, indicating a successful registration. echo pcf8563 0x51 > /sys/class/i2c-adapter/i2c-1/new_device 3. Set the current system time to the RTC clock time. hwclock -f /dev/rtc0 -w 4. Read the time from the RTC clock. If the time can be read, it indicates that the RTC module is functioning correctly. root@mangopimcore:~# hwclock -f /dev/rtc0 -r 2023-05-28 05:04:08.679152-02:30","title":"BliKVM V2 PCIe and BliKVM V3 Hat - pcf8563"},{"location":"rtc/#blikvm-v4-pcf8563","text":"1. Check if the pcf8563 RTC clock hardware is properly recognized on the i2c bus. The pcf8563 RTC clock has an i2c address of 0x51. Execute the following command as root to verify if the rtc clock is correctly detected on the i2c bus: root@mangopimcore:~# i2cdetect -y 0 0 1 2 3 4 5 6 7 8 9 a b c d e f 00: -- -- -- -- -- -- -- -- 10: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 20: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 30: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 40: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 50: -- 51 -- -- -- -- -- -- -- -- -- -- -- -- -- -- 60: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 70: -- -- -- -- -- -- -- -- 2. Register a new i2c device with the Linux system's i2c subsystem. The device is a pcf8563 with an i2c address of 0x51. Use the command ls /dev | grep rtc to verify if the rtc1 device appears, indicating a successful registration. echo pcf8563 0x51 > /sys/class/i2c-adapter/i2c-0/new_device 3. Set the current system time to the RTC clock time. hwclock -f /dev/rtc1 -w 4. Read the time from the RTC clock. If the time can be read, it indicates that the RTC module is functioning correctly. root@mangopimcore:~# hwclock -f /dev/rtc1 -r 2023-05-28 05:04:08.679152-02:30","title":"BliKVM V4 - pcf8563"},{"location":"serial_over_usb/","text":"Serial-over-USB connection The BliKVM device can be accessed through the serial port terminal. 1. For hardware connection, you should use the USB to TTL module to connect the USB of the computer to the uart of BliKVM. If you are using the Hat version, please connect the serial ports GPIO14 and GPIO15. If you are using the PCIe version, connect the GTR pin marked by the PCB 2. Install terminal login tools on the computer. For example, Putty for Windows 3. Use the Putty instructions. Enter the correct COM port. The default baud rate is 115200 . Select serial as the connection method, and then click Open\uff08Use PiKVM firmware as an example If your computer cannot correctly recognize the USB to TTL module, please follow the steps below to install the driver for your computer Connect the USB-A connector to your admin host (in this example, it's on a Windows host). As a result, Device Manager will show a new USB Serial device in Other Devices. Download and extract/run drivers. In this example, I downloaded and extracted the ZIP file. https://learn.sparkfun.com/tutorials/how-to-install-ch340-drivers/all Update driver for the new USB Serial device, point it to where you extracted the files, and click Next then Close. If done right, the new USB serial device should now show up under Ports as USB-SERIAL CH340 (COMX).","title":"Serial-over-USB"},{"location":"serial_over_usb/#serial-over-usb-connection","text":"The BliKVM device can be accessed through the serial port terminal. 1. For hardware connection, you should use the USB to TTL module to connect the USB of the computer to the uart of BliKVM. If you are using the Hat version, please connect the serial ports GPIO14 and GPIO15. If you are using the PCIe version, connect the GTR pin marked by the PCB 2. Install terminal login tools on the computer. For example, Putty for Windows 3. Use the Putty instructions. Enter the correct COM port. The default baud rate is 115200 . Select serial as the connection method, and then click Open\uff08Use PiKVM firmware as an example If your computer cannot correctly recognize the USB to TTL module, please follow the steps below to install the driver for your computer Connect the USB-A connector to your admin host (in this example, it's on a Windows host). As a result, Device Manager will show a new USB Serial device in Other Devices. Download and extract/run drivers. In this example, I downloaded and extracted the ZIP file. https://learn.sparkfun.com/tutorials/how-to-install-ch340-drivers/all Update driver for the new USB Serial device, point it to where you extracted the files, and click Next then Close. If done right, the new USB serial device should now show up under Ports as USB-SERIAL CH340 (COMX).","title":"Serial-over-USB connection"},{"location":"ssh/","text":"SSH Config Starting from version 1.4.7, the web interface supports direct access to the blikvm SSH terminal. The default username and password to access the terminal are blikvm/blikvm. If you have changed the password for this user, you will need to update the corresponding username and password in the app.json file. sudo -s vim /mnt/exec/release/config/app.json # Locate the following configuration and update it with your new credentials. \"sshUser\": \"blikvm\", \"sshPassword\": \"blikvm\"","title":"SSH Terminal"},{"location":"ssh/#ssh-config","text":"Starting from version 1.4.7, the web interface supports direct access to the blikvm SSH terminal. The default username and password to access the terminal are blikvm/blikvm. If you have changed the password for this user, you will need to update the corresponding username and password in the app.json file. sudo -s vim /mnt/exec/release/config/app.json # Locate the following configuration and update it with your new credentials. \"sshUser\": \"blikvm\", \"sshPassword\": \"blikvm\"","title":"SSH Config"},{"location":"static_ip/","text":"Set static IP To configure a static IP address on a BliKVM image, you can follow these steps: v1 v2 v3 versions - Debian SSH into the BliKVM, If it is a read-only system, please use the rw command to make the system writable. Edit the network interfaces configuration file using the following command: sudo vim /etc/dhcpcd.conf Within the file, locate the section that starts with # Example static IP configuration . Uncomment the lines below that section and modify them to set your desired static IP address, gateway, DNS servers, and other network settings. For example: interface eth0 static ip_address = 192 .168.1.100/24 static routers = 192 .168.1.1 static domain_name_servers = 192 .168.1.1 Adjust the values according to your network configuration. Save the changes. Restart the BliKVM for the changes to take effect: sudo reboot v4 version - armbian SSH into the BliKVM, If it is a read-only system, please use the rw command to make the system writable. Edit the network interfaces configuration file using the following command: sudo vim /etc/network/interfaces Within the file, locate the section that starts with # Example static IP configuration . Uncomment the lines below that section and modify them to set your desired static IP address, gateway, DNS servers, and other network settings. For example: source /etc/network/interfaces.d/* auto eth0 allow-hotplug eth0 iface eth0 inet static address 192 .168.0.100 netmask 255 .255.255.0 gateway 192 .168.0.1 dns-nameservers 192 .168.0.1 Adjust the values according to your network configuration. Save the changes. Restart the NetworkManager for the changes to take effect: sudo systemctl restart NetworkManager After the reboot, your BliKVM will use the configured static IP address instead of obtaining one dynamically from a DHCP server. Make sure the static IP address you choose is not already assigned to another device on the network and is within the same subnet.","title":"Set Static IP "},{"location":"static_ip/#set-static-ip","text":"To configure a static IP address on a BliKVM image, you can follow these steps:","title":"Set static IP"},{"location":"static_ip/#v1-v2-v3-versions-debian","text":"SSH into the BliKVM, If it is a read-only system, please use the rw command to make the system writable. Edit the network interfaces configuration file using the following command: sudo vim /etc/dhcpcd.conf Within the file, locate the section that starts with # Example static IP configuration . Uncomment the lines below that section and modify them to set your desired static IP address, gateway, DNS servers, and other network settings. For example: interface eth0 static ip_address = 192 .168.1.100/24 static routers = 192 .168.1.1 static domain_name_servers = 192 .168.1.1 Adjust the values according to your network configuration. Save the changes. Restart the BliKVM for the changes to take effect: sudo reboot","title":"v1 v2 v3 versions - Debian"},{"location":"static_ip/#v4-version-armbian","text":"SSH into the BliKVM, If it is a read-only system, please use the rw command to make the system writable. Edit the network interfaces configuration file using the following command: sudo vim /etc/network/interfaces Within the file, locate the section that starts with # Example static IP configuration . Uncomment the lines below that section and modify them to set your desired static IP address, gateway, DNS servers, and other network settings. For example: source /etc/network/interfaces.d/* auto eth0 allow-hotplug eth0 iface eth0 inet static address 192 .168.0.100 netmask 255 .255.255.0 gateway 192 .168.0.1 dns-nameservers 192 .168.0.1 Adjust the values according to your network configuration. Save the changes. Restart the NetworkManager for the changes to take effect: sudo systemctl restart NetworkManager After the reboot, your BliKVM will use the configured static IP address instead of obtaining one dynamically from a DHCP server. Make sure the static IP address you choose is not already assigned to another device on the network and is within the same subnet.","title":"v4 version - armbian"},{"location":"tailscale/","text":"Tailscale VPN Tailscale can be used to access your BliKVM from the public internet. It is a convenient and free networking tool for setting up a small VPN network. This document provides an example for accessing your BliKVM over the internet, but you can also use Zerotier or other VPN solutions. The following is a basic example, and for any specific settings or functionalities, please refer to the Tailscale documentation. BliKVM Installation First, make sure that your system has read-write access. If it's a read-only system, use the rw command to make it writable. Then, proceed with the Tailscale installation by running the following command: curl -fsSL https://tailscale.com/install.sh | sh Note that in some regions, such as China, downloading Tailscale directly might be problematic due to network restrictions. Please configure your network accordingly. Adding BliKVM to your Tailscale Network Register an account on the Tailscale website and generate your own keys in the settings. On the BliKVM terminal, use the following command to add BliKVM to your Tailscale network: sudo tailscale up --authkey = your-auth-key --accept-routes If everything goes well, you can run ip addr show tailscale0 on the BliKVM terminal to view the IP address assigned by Tailscale for the virtual network. Here's an example output: 3 : tailscale0: <POINTOPOINT,MULTICAST,NOARP,UP,LOWER_UP> mtu 1280 qdisc pfifo_fast state UNKNOWN group default qlen 500 link/none inet 100 .126.223.28/32 scope global tailscale0 valid_lft forever preferred_lft forever inet6 fd7a:115c:a1e0:ab12:4843:cd96:627e:df1c/128 scope global valid_lft forever preferred_lft forever inet6 fe80::8955:99dc:4e7d:b08b/64 scope link stable-privacy valid_lft forever preferred_lft forever The IP address, such as 100.126.223.28 , can be used to access the BliKVM web interface from your host machine. Host Installation Download and install Tailscale from the Tailscale website on your controlling host machine. Log in with your Tailscale account, and then you can check the Tailscale admin page to verify if both your machines are online. Once they are online, you can use the following address to access BliKVM from your controlling host machine: http://<tailscale_kvm_ip>","title":"Tailscale VPN"},{"location":"tailscale/#tailscale-vpn","text":"Tailscale can be used to access your BliKVM from the public internet. It is a convenient and free networking tool for setting up a small VPN network. This document provides an example for accessing your BliKVM over the internet, but you can also use Zerotier or other VPN solutions. The following is a basic example, and for any specific settings or functionalities, please refer to the Tailscale documentation.","title":"Tailscale VPN"},{"location":"tailscale/#blikvm-installation","text":"First, make sure that your system has read-write access. If it's a read-only system, use the rw command to make it writable. Then, proceed with the Tailscale installation by running the following command: curl -fsSL https://tailscale.com/install.sh | sh Note that in some regions, such as China, downloading Tailscale directly might be problematic due to network restrictions. Please configure your network accordingly.","title":"BliKVM Installation"},{"location":"tailscale/#adding-blikvm-to-your-tailscale-network","text":"Register an account on the Tailscale website and generate your own keys in the settings. On the BliKVM terminal, use the following command to add BliKVM to your Tailscale network: sudo tailscale up --authkey = your-auth-key --accept-routes If everything goes well, you can run ip addr show tailscale0 on the BliKVM terminal to view the IP address assigned by Tailscale for the virtual network. Here's an example output: 3 : tailscale0: <POINTOPOINT,MULTICAST,NOARP,UP,LOWER_UP> mtu 1280 qdisc pfifo_fast state UNKNOWN group default qlen 500 link/none inet 100 .126.223.28/32 scope global tailscale0 valid_lft forever preferred_lft forever inet6 fd7a:115c:a1e0:ab12:4843:cd96:627e:df1c/128 scope global valid_lft forever preferred_lft forever inet6 fe80::8955:99dc:4e7d:b08b/64 scope link stable-privacy valid_lft forever preferred_lft forever The IP address, such as 100.126.223.28 , can be used to access the BliKVM web interface from your host machine.","title":"Adding BliKVM to your Tailscale Network"},{"location":"tailscale/#host-installation","text":"Download and install Tailscale from the Tailscale website on your controlling host machine. Log in with your Tailscale account, and then you can check the Tailscale admin page to verify if both your machines are online. Once they are online, you can use the following address to access BliKVM from your controlling host machine: http://<tailscale_kvm_ip>","title":"Host Installation"},{"location":"update/","text":"Software update introduction If you are running an older version then we recommend first reflashing and subsequently running the update process, while you are next to your BliKVM device. Introduction The currently available versions of the BLIKVM project are hosted in the release package of the GitHub. The update software function needs to keep the device connected. There are currently two ways to update the software. Method 1: Click the update button through the web interface, and the program will be updated automatically. A restart is required after the update. Method 2: Manually run the script on the KVM terminal to update, and restart after the update. Common causes of upgrade errors The device is not connected to the network; Network access to GitHub is limited; We strongly recommend performing the update while you are in close proximity to the BliKVM hardware you are upgrading. This way if anything goes wrong you can intervene. If you are familiar with command-line operations, we recommend manually updating so that you can monitor the command-line status in real time. If the update is abnormal and the web interface cannot exit the update status, use ssh to get you a terminal and reboot to recover. Manually run the script to update In the terminal\uff0cif the system terminal shows the ro keyword that means your system is currently in read-only, it is necessary to use the rw command to make the system writable. sudo -i curl -L https://raw.githubusercontent.com/ThomasVon2021/blikvm/master/script/update.py -o /tmp/update.py && python3 /tmp/update.py Observe the output of the terminal. When you see the message of a successful upgrade, enter in the terminal the: reboot command and the reboot should take effect. If you are unable to update successfully due to network issues, you can download the latest release.tar.gz package on another PC with a stable network connection and follow the instructions below for installation. Download Address: https://github.com/ThomasVon2021/blikvm/releases v1 v2 v3 hardware use release.tar.gz v4 hardware use release-h616-v4.tar.gz SSH into the device terminal and use tar -zxvf release.tar.gz to extract the release.tar.gz file. sudo -i cd /your release path/ python3 install_release.py --releasepath=./ You can compare the versions before and after in /usr/bin/blikvm/package.json . If you have upgraded to the specified version, the installation is successful, and you can reboot for the changes to take effect.","title":"Upgrade"},{"location":"update/#software-update-introduction","text":"If you are running an older version then we recommend first reflashing and subsequently running the update process, while you are next to your BliKVM device.","title":"Software update introduction"},{"location":"update/#introduction","text":"The currently available versions of the BLIKVM project are hosted in the release package of the GitHub. The update software function needs to keep the device connected. There are currently two ways to update the software. Method 1: Click the update button through the web interface, and the program will be updated automatically. A restart is required after the update. Method 2: Manually run the script on the KVM terminal to update, and restart after the update. Common causes of upgrade errors The device is not connected to the network; Network access to GitHub is limited; We strongly recommend performing the update while you are in close proximity to the BliKVM hardware you are upgrading. This way if anything goes wrong you can intervene. If you are familiar with command-line operations, we recommend manually updating so that you can monitor the command-line status in real time. If the update is abnormal and the web interface cannot exit the update status, use ssh to get you a terminal and reboot to recover.","title":"Introduction"},{"location":"update/#manually-run-the-script-to-update","text":"In the terminal\uff0cif the system terminal shows the ro keyword that means your system is currently in read-only, it is necessary to use the rw command to make the system writable. sudo -i curl -L https://raw.githubusercontent.com/ThomasVon2021/blikvm/master/script/update.py -o /tmp/update.py && python3 /tmp/update.py Observe the output of the terminal. When you see the message of a successful upgrade, enter in the terminal the: reboot command and the reboot should take effect. If you are unable to update successfully due to network issues, you can download the latest release.tar.gz package on another PC with a stable network connection and follow the instructions below for installation. Download Address: https://github.com/ThomasVon2021/blikvm/releases v1 v2 v3 hardware use release.tar.gz v4 hardware use release-h616-v4.tar.gz SSH into the device terminal and use tar -zxvf release.tar.gz to extract the release.tar.gz file. sudo -i cd /your release path/ python3 install_release.py --releasepath=./ You can compare the versions before and after in /usr/bin/blikvm/package.json . If you have upgraded to the specified version, the installation is successful, and you can reboot for the changes to take effect.","title":"Manually run the script to update"},{"location":"usb-splitter-guide/","text":"USB/PWR Splitter guide 1. Introduction The adaptor allows the Raspberry Pi 4 to be used with a Pi USB-C power supply while allowing access to USB OTG data over a separate USB-C connection. USB-C (RPI4) <> USB-C (USB) and USB-C (PWR) USB-C(RPI4) USB Type-C(USB) USB Type-C(PWR) 5V 5V D- D- D+ D+ CC1 10k to 5V CC1 5.1k to GND CC1 5.1k to GND CC2 10k to 5V CC2 5.1k to GND CC2 5.1k to GND GND GND GND To use the adaptor with the Raspberry Pi 4 you need. USB-C to USB-C cable[1] between Pi4 and the adaptor board USB-C to USB-C or Type-A between adaptor board and PC Power[2] via Official Raspberry Pi USB Type-C Power Supply. [1] Whilst USB-C cables are generally designed for higher current I still advise using short power cable to the Pi where possible to reduce voltage drop. [2] PLEASE NOTE With the Pu/Pd resistors on this board it can only be used with 5V supply to power a 5V device. An adaptor of this kind does not fall within the USB specification. It's designed for use with the official Raspberry Pi USB-C power supply and raspberry pi, use with other power supplies/chargers and devices may cause issues/damage. 2.Mechanical Diagram 3.Test video USB splitter Video 4.3D printable case A simple snap fit case for the USB splitter. Download file","title":"USB Splitter"},{"location":"usb-splitter-guide/#usbpwr-splitter-guide","text":"","title":"USB/PWR Splitter guide"},{"location":"usb-splitter-guide/#1-introduction","text":"The adaptor allows the Raspberry Pi 4 to be used with a Pi USB-C power supply while allowing access to USB OTG data over a separate USB-C connection. USB-C (RPI4) <> USB-C (USB) and USB-C (PWR) USB-C(RPI4) USB Type-C(USB) USB Type-C(PWR) 5V 5V D- D- D+ D+ CC1 10k to 5V CC1 5.1k to GND CC1 5.1k to GND CC2 10k to 5V CC2 5.1k to GND CC2 5.1k to GND GND GND GND To use the adaptor with the Raspberry Pi 4 you need. USB-C to USB-C cable[1] between Pi4 and the adaptor board USB-C to USB-C or Type-A between adaptor board and PC Power[2] via Official Raspberry Pi USB Type-C Power Supply. [1] Whilst USB-C cables are generally designed for higher current I still advise using short power cable to the Pi where possible to reduce voltage drop. [2] PLEASE NOTE With the Pu/Pd resistors on this board it can only be used with 5V supply to power a 5V device. An adaptor of this kind does not fall within the USB specification. It's designed for use with the official Raspberry Pi USB-C power supply and raspberry pi, use with other power supplies/chargers and devices may cause issues/damage.","title":"1. Introduction"},{"location":"usb-splitter-guide/#2mechanical-diagram","text":"","title":"2.Mechanical Diagram"},{"location":"usb-splitter-guide/#3test-video","text":"USB splitter Video","title":"3.Test video"},{"location":"usb-splitter-guide/#43d-printable-case","text":"A simple snap fit case for the USB splitter. Download file","title":"4.3D printable case"},{"location":"wake-on-lan/","text":"Wake-on-LAN Introduction Wake-on-LAN, abbreviated as WOL or WoL, is a feature that allows a computer that is in sleep or shutdown state to be powered on remotely by KVM through a local network by sending a specific message. WoL requires support from the controlled computer; otherwise, the feature won't work. Additionally, it needs to be ensured that WoL is enabled and configured correctly. With this feature, you can power on the computer without needing to use the ATX function. If users encounter anomalies when using KVM's WoL, they can try testing it using software that supports WoL. How to Use","title":"Wake-on-LAN"},{"location":"wake-on-lan/#wake-on-lan","text":"","title":"Wake-on-LAN"},{"location":"wake-on-lan/#introduction","text":"Wake-on-LAN, abbreviated as WOL or WoL, is a feature that allows a computer that is in sleep or shutdown state to be powered on remotely by KVM through a local network by sending a specific message. WoL requires support from the controlled computer; otherwise, the feature won't work. Additionally, it needs to be ensured that WoL is enabled and configured correctly. With this feature, you can power on the computer without needing to use the ATX function. If users encounter anomalies when using KVM's WoL, they can try testing it using software that supports WoL.","title":"Introduction"},{"location":"wake-on-lan/#how-to-use","text":"","title":"How to Use"},{"location":"wifi/","text":"Wifi Configure Because BLIKVM has many kinds of hardware and supports different OS, such as BLIKVM OS and PiKVM OS, different OS confifure wifi methods may not be the same. Please confirm the hardware and OS usage before using the method in this document. Please confirm that the hardware you use supports wifi function, for example, the CM400200 version does not have wifi function; If the SOC of KVM hardware is CM4, please confirm whether wifi antenna is connected; PiKVM OS is arch linux; BLIKVM OS raspberry pi series is debian system, and v4 series is armbian system; v1 v2 v3 Use raspi-config for Wi-Fi config on Raspberry Pi Debian systems Log in to SSH. Command: ssh blikvm@ip Mount the system as writable. Command: rw Start raspi-config. Command: sudo raspi-config Select System Options Select Wireless LAN Select the country where Wi-Fi is located, and China will select CN. If it has been set before, this step will skip to 7 Enter the Wi-Fi SSID (name) Enter the Wi-Fi password. If there is no password, press Enter directly At this time, you will return to the interface in Step 4, press the tab key to select Finish , then press Enter Check whether to connect to wifi. Command: ifconfig wlan0. If you see the ip obtained, you are connected Mount the system as read-only. Command: ro v4 Hardware using Armbian System with armbian-config Log in via SSH using the command: ssh blikvm@ip to access the Armbian system. If it is a read-only system, you need to first use the command 'rw' to make it read-write, and use the command 'sudo chmod 777-R/etc/NetworkManager/system connections' to give the corresponding folder permissions. Enter the following command to launch the armbian-config tool: sudo armbian-config In the armbian-config menu, navigate and select options using the arrow keys and press Enter . Scroll down to the \"Network\" option using the arrow keys and press Enter to enter the submenu. In the \"Network\" submenu, select the \"Wireless\" option and press Enter to enter the Wi-Fi configuration menu. In the Wi-Fi configuration menu, select the \"Connect to Wi-Fi\" option and press Enter to enter the Wi-Fi connection setup. armbian-config will list the available wireless interfaces and already configured networks. Select the wireless interface you want to connect to and press Enter . armbian-config will display the list of available Wi-Fi networks. Use the arrow keys to select the Wi-Fi network you want to connect to and press Enter . If the Wi-Fi network is password-protected, armbian-config will prompt you to enter the Wi-Fi password. Enter the password and press Enter . Wait for a moment while the Armbian system attempts to connect to the specified Wi-Fi network. If the connection is successful, you will see a corresponding message on the screen. Exit the armbian-config tool. Please note that the menu options and configurations mentioned above may vary slightly depending on the specific version of the Armbian system. Make sure to follow the appropriate steps based on your system version and configuration.","title":"Wifi Config"},{"location":"wifi/#wifi-configure","text":"Because BLIKVM has many kinds of hardware and supports different OS, such as BLIKVM OS and PiKVM OS, different OS confifure wifi methods may not be the same. Please confirm the hardware and OS usage before using the method in this document. Please confirm that the hardware you use supports wifi function, for example, the CM400200 version does not have wifi function; If the SOC of KVM hardware is CM4, please confirm whether wifi antenna is connected; PiKVM OS is arch linux; BLIKVM OS raspberry pi series is debian system, and v4 series is armbian system;","title":"Wifi Configure"},{"location":"wifi/#v1-v2-v3-use-raspi-config-for-wi-fi-config-on-raspberry-pi-debian-systems","text":"Log in to SSH. Command: ssh blikvm@ip Mount the system as writable. Command: rw Start raspi-config. Command: sudo raspi-config Select System Options Select Wireless LAN Select the country where Wi-Fi is located, and China will select CN. If it has been set before, this step will skip to 7 Enter the Wi-Fi SSID (name) Enter the Wi-Fi password. If there is no password, press Enter directly At this time, you will return to the interface in Step 4, press the tab key to select Finish , then press Enter Check whether to connect to wifi. Command: ifconfig wlan0. If you see the ip obtained, you are connected Mount the system as read-only. Command: ro","title":"v1 v2 v3 Use raspi-config for Wi-Fi config on Raspberry Pi Debian systems"},{"location":"wifi/#v4-hardware-using-armbian-system-with-armbian-config","text":"Log in via SSH using the command: ssh blikvm@ip to access the Armbian system. If it is a read-only system, you need to first use the command 'rw' to make it read-write, and use the command 'sudo chmod 777-R/etc/NetworkManager/system connections' to give the corresponding folder permissions. Enter the following command to launch the armbian-config tool: sudo armbian-config In the armbian-config menu, navigate and select options using the arrow keys and press Enter . Scroll down to the \"Network\" option using the arrow keys and press Enter to enter the submenu. In the \"Network\" submenu, select the \"Wireless\" option and press Enter to enter the Wi-Fi configuration menu. In the Wi-Fi configuration menu, select the \"Connect to Wi-Fi\" option and press Enter to enter the Wi-Fi connection setup. armbian-config will list the available wireless interfaces and already configured networks. Select the wireless interface you want to connect to and press Enter . armbian-config will display the list of available Wi-Fi networks. Use the arrow keys to select the Wi-Fi network you want to connect to and press Enter . If the Wi-Fi network is password-protected, armbian-config will prompt you to enter the Wi-Fi password. Enter the password and press Enter . Wait for a moment while the Armbian system attempts to connect to the specified Wi-Fi network. If the connection is successful, you will see a corresponding message on the screen. Exit the armbian-config tool. Please note that the menu options and configurations mentioned above may vary slightly depending on the specific version of the Armbian system. Make sure to follow the appropriate steps based on your system version and configuration.","title":"v4 Hardware using Armbian System with armbian-config"},{"location":"zerotier/","text":"ZeroTier VPN ZeroTier allows secure access to your BliKVM even throught NAT on both sides. It lets you build modern, secure multi-point virtualized networks of almost any type. This document provides an example for accessing your BliKVM over the internet, but you can also use Tailscale or other VPN solutions. The following is a basic example, and for any specific settings or functionalities, please refer to the ZeroTier documentation . Installing ZeroTier on BliKVM First of all, prepare account and VPN network at ZeroTier with instructions here: Create a Network , save Network ID for later usage. Next, connect with BliKVM terminal using SSH protocol, and check for read-write access. If it's a read-only system, use the rw command to make it writable. Now install ZeroTier client using the command below: curl -s https://install.zerotier.com | sudo bash Note that in some regions, such as China, downloading ZeroTier directly might be problematic due to network restrictions. Please configure your network accordingly. Adding BliKVM to your ZeroTier Network On the BliKVM terminal, use the following command to add BliKVM to your ZeroTier network (using your ZeoroTier Network ID, for example d5e04297a16fa690): sudo zerotier-cli join d5e04297a16fa690 If everything goes well, you can run ip addr show zerotier network device (name is starting with zt) on the BliKVM terminal to view the IP address assigned by ZeroTier for the virtual network. Here's an example output: 3 : zt6ovrlscs: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 2800 qdisc pfifo_fast state UNKNOWN group default qlen 1000 link/ether d6:e4:eb:ae:db:64 brd ff:ff:ff:ff:ff:ff inet 172 .25.96.75/16 brd 172 .25.255.255 scope global zt6ovrlscs valid_lft forever preferred_lft forever inet6 fe80::d4e4:ebff:feae:db64/64 scope link valid_lft forever preferred_lft forever The IP address, such as 172.25.96.75 , can be used to access the BliKVM web interface from your host machine. Installing ZeroTier on client computer Go to Download section at ZeroTier website and install ZeroTier on your controlling host machine. Join your ZeroTier Network ID, and then you can check your network page to verify if both your machines are online. Check if they are authorzied to connect to network there (Auth? column). Once they are online, you can use the following address to access BliKVM from your controlling host machine: http://<zerotier_kvm_ip>","title":"ZeroTier VPN"},{"location":"zerotier/#zerotier-vpn","text":"ZeroTier allows secure access to your BliKVM even throught NAT on both sides. It lets you build modern, secure multi-point virtualized networks of almost any type. This document provides an example for accessing your BliKVM over the internet, but you can also use Tailscale or other VPN solutions. The following is a basic example, and for any specific settings or functionalities, please refer to the ZeroTier documentation .","title":"ZeroTier VPN"},{"location":"zerotier/#installing-zerotier-on-blikvm","text":"First of all, prepare account and VPN network at ZeroTier with instructions here: Create a Network , save Network ID for later usage. Next, connect with BliKVM terminal using SSH protocol, and check for read-write access. If it's a read-only system, use the rw command to make it writable. Now install ZeroTier client using the command below: curl -s https://install.zerotier.com | sudo bash Note that in some regions, such as China, downloading ZeroTier directly might be problematic due to network restrictions. Please configure your network accordingly.","title":"Installing ZeroTier on BliKVM"},{"location":"zerotier/#adding-blikvm-to-your-zerotier-network","text":"On the BliKVM terminal, use the following command to add BliKVM to your ZeroTier network (using your ZeoroTier Network ID, for example d5e04297a16fa690): sudo zerotier-cli join d5e04297a16fa690 If everything goes well, you can run ip addr show zerotier network device (name is starting with zt) on the BliKVM terminal to view the IP address assigned by ZeroTier for the virtual network. Here's an example output: 3 : zt6ovrlscs: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 2800 qdisc pfifo_fast state UNKNOWN group default qlen 1000 link/ether d6:e4:eb:ae:db:64 brd ff:ff:ff:ff:ff:ff inet 172 .25.96.75/16 brd 172 .25.255.255 scope global zt6ovrlscs valid_lft forever preferred_lft forever inet6 fe80::d4e4:ebff:feae:db64/64 scope link valid_lft forever preferred_lft forever The IP address, such as 172.25.96.75 , can be used to access the BliKVM web interface from your host machine.","title":"Adding BliKVM to your ZeroTier Network"},{"location":"zerotier/#installing-zerotier-on-client-computer","text":"Go to Download section at ZeroTier website and install ZeroTier on your controlling host machine. Join your ZeroTier Network ID, and then you can check your network page to verify if both your machines are online. Check if they are authorzied to connect to network there (Auth? column). Once they are online, you can use the following address to access BliKVM from your controlling host machine: http://<zerotier_kvm_ip>","title":"Installing ZeroTier on client computer"}]}