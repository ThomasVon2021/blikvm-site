{"config":{"lang":["en","ja","ru","zh"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"BLIKVM Overview","text":"<p>BLIKVM is an open-source KVM, it has four versions: v1 CM4,  v2 PCIe, v3 HAT, v4 Allwinner.  This device helps to manage servers or workstations remotely, regardless of the health of the operating system or  whether one is installed. You can fix any problem, configure the BIOS, and even reinstall the OS using the virtual  CD-ROM or Flash Drive. Unlike software-based remote management, you don't need to install any software on the controlled computer for non-intrusive control. Here you will find comprehensive information about all aspects of the operation of BLIKVM.  Join our BLIKVM Discord Community for Support, FAQ &amp; News! </p> FEATURE BliKVM v1 CM4 BliKVM v2 PCIe BliKVM v3 HAT BliKVM v4 H616 SOC Raspberry CM4 Raspberry CM4 Raspberry 4B Allwinner H616 Supported resolutions 1920x1080@60Hz 1920x1080@60Hz 1920x1080@50Hz 3840x2160@30Hz HDMI Capture TC358743 TC358743 TC358743 MS2131 HDMI Loop Through No No No Yes POE No Yes Yes Yes DC-IN No No No Yes USB-C Power Yes Yes Yes Yes USB Power/Data Splitter Yes Yes(external) Yes Yes Serial Console No Yes Yes Yes ATX controls Yes Yes Yes Yes BIOS controls Yes Yes Yes Yes Open source system Yes Yes Yes Yes Reinstall the controlled computer system Yes Yes Yes Yes FAN Yes(Not support PWM controls) Yes Yes Optional(default with heat sink) Display Module OLED 128x64 white OLED 128x32 white OLED 128x64 white LCD 240x240 color Real Time Clock Yes(DS1307) Yes(PCF8563) Yes(PCF8563) Yes(PCF8563) Case Metallic Black No Metallic Black White Blue Orange(1U rack compatible) Metallic Black(1U rack compatible) Buzzer No No No Yes Custom button No No No Yes Software update Yes Yes Yes Yes 32GB SD Card Yes (OS included) Yes (OS included) Yes (OS included) Yes (OS included) HDMI backpower mitigation No Yes Yes Yes Professional technical support Yes Yes Yes Yes"},{"location":"#features","title":"Features","text":"<ul> <li>Video capture (1080P 60Hz)  </li> <li>Keyboard forwarding  </li> <li>Mouse forwarding  </li> <li>ATX  </li> <li>Fan Control  </li> <li>Fullscreen mode  </li> <li>Paste text from clipboard  </li> <li>VPN support  </li> <li>Mass Storage Drive (emulate a CD-ROM or Flash Drive)  </li> <li>Multiport KVM over IP  </li> <li>OLED to display system info, like temp, uptime, IP  </li> <li>Password authentication  </li> <li>Support multiple languages  </li> <li>Wake-on-LAN  </li> </ul>"},{"location":"#guide","title":"Guide","text":"<p>1.BLIKVM v1 CM4 version  2.BLIKVM v2 PCIE version  3.BLIKVM v3 HAT version  4.BliKVM v4 Allwinner version  </p>"},{"location":"BLIHAT-Installation/","title":"BLIHAT Installation Guide","text":""},{"location":"BLIHAT-Installation/#1unpack-and-take-out-the-devices","title":"1.Unpack and take out the devices","text":"<p>Open the protective bag</p> <p> </p>"},{"location":"BLIHAT-Installation/#2install-the-main-device","title":"2.Install the main device","text":"<p>Flip to back</p> <p> </p> <p> </p> <p>Open the case</p> <p> </p> <p>Flip to back, unscrew the two screws on the back</p> <p> </p> <p> </p> <p> </p> <p> </p> <p> </p> <p>Open the protective bag and take out the parts</p> <p> </p> <p> </p> <p>Install Micro SD card</p> <p> </p> <p> </p> <p>Install the FFC cable</p> <p> </p> <p> </p> <p> </p> <p> </p> <p> </p> <p>Install the HAT on Raspberry Pi 4</p> <p> </p> <p> </p> <p> </p> <p>Install four Hex Spacers</p> <p> </p> <p> </p> <p> </p> <p>Install the C790 module, use the long screws you just removed</p> <p> </p> <p> </p> <p> </p> <p>Install the audio cable</p> <p> </p> <p>Stick a heat conductive sheet on the back of the Raspberry Pi 4 , tear off the protective film of the sheet</p> <p> </p> <p> </p> <p>Install the HAT into the case</p> <p> </p> <p> </p> <p>Pay attention to the alignment of the holes</p> <p> </p> <p> </p> <p>Flip to back and install 4 screws</p> <p> </p> <p> </p> <p> </p> <p>Install five case screws</p> <p> </p> <p> </p> <p> </p> <p>Install the mounting ear as needed</p> <p> </p> <p> </p> <p> </p> <p> </p> <p>The main device installation is complete</p>"},{"location":"BLIKVM-CM4-guide/","title":"BLIKVM-CM4 version guide","text":"<p>Geerling: Engineering Test video</p> <p> </p> <p>BliKVM v1 is a production-ready, plug and play KVM-over-IP device that offers professional users a convenient solution for remote server or workstation management. It is based on Linux and fully open source. With BliKVM, you can easily power on/off, restart your computer, configure UEFI/BIOS settings, and perform OS reinstallation using an emulated Mass Storage Device. BliKVM simulates a keyboard, mouse, and monitor, all accessible through a web browser, ensuring a seamless user experience. Its hardware-level access guarantees independence from specific remote ports, protocols, or services, making it a highly flexible and reliable remote management solution for professionals!</p> <ul> <li>BliKVM v1 Datasheet</li> </ul>"},{"location":"BLIKVM-CM4-guide/#features","title":"Features","text":"<ul> <li>Video capture (HDMI, support 1080P@60Hz input)</li> <li>Keyboard forwarding</li> <li>Mouse forwarding</li> <li>Mass Storage Drive</li> <li>ATX Control the server power using ATX functions</li> <li>Fullscreen mode</li> <li>Access via Web UI</li> <li>Support multi language switching</li> <li>Support PoE</li> <li>Serial console port</li> <li>OLED display</li> <li>Real Time Clock (RTC) </li> <li>PWM FAN </li> </ul>"},{"location":"BLIKVM-CM4-guide/#installation-requirements","title":"Installation requirements","text":"<p>If you have an assembly kit, you will need the following things</p> <ul> <li>Raspberry CM4 with 1Gb RAM or more.</li> <li>USB-C to USB-A cable.</li> <li>HDMI cable.</li> <li>Straight Ethernet cable (for the ATX board connection).</li> <li>Power supply unit (5.1V 3A USB-C, recommended by the Raspberry Pi).</li> </ul> <p>Power supply</p> <p>You must use USB-C to USB-A cable. Use USB-C to USB-C cable can't work, This is an incompatibility in the hardware design and will be  fixed in a later version.</p>"},{"location":"BLIKVM-CM4-guide/#basic-setup","title":"Basic setup","text":"<p>1. The SD card preloaded with the factory default image does not require burning. If you need to reflash the system or for DIY purposes, you can followFlash the memory card or eMMC  </p> <p>2. If you have a non-plug version, refer to the video and instructions below for device installation: 1. Use the provided screwdriver to open the metal casing and remove the PCB motherboard. 2. Install the CM4 onto the PCB motherboard, ensuring that the two rows of card slots are aligned. Apply the thermal conductive silicone pad onto the CM4 main chip to facilitate heat dissipation using the metal casing. The fan is not connected by default as the metal casing provides sufficient heat dissipation. Depending on your CM4 version, selectively install the Wi-Fi antenna. 3. Reassemble the PCB motherboard and the metal casing to complete the installation. 4. Please note that translations might vary depending on context and specific terminology used in technical instructions.  </p> Video Guide: Metal case step by step <p></p> Ortimo: BLIKVM with Raspberry PI CM4 16GB EMMC setup <p></p> <p>3. Connect BLIKVM to the computer according to the diagram below: </p> <ul> <li>HDMI IN and otg port must be connected to the computer. ATX too, but it\u2019s optional, read below.  There should be no USB hub between BLIKVM and the computer, as some UEFI/BIOS cannot detect them at the boot stage.  BLIKVM supports 1080p60Hz or lower about HDMI source.</li> <li>Connect Ethernet to the network and PWR IN to the BLIKVM power supply.</li> </ul> <p>4. ATX connection </p> <p>To manage the power of your computer, you will connect CN-ATX port to the computer.The user can use the ATX cable  provided with the product to connect the product and the motherboard ATX switch of the controlled computer.  The length of the ATX cable is 60CM, you can also use the double female Dupont cables.</p> <p></p> <p>To accommodate ATX control boards with Ethernet ports, v1 has a dedicated ATX expansion kit available. This kit enables customers to connect the ATX board installed on the chassis panel directly using an Ethernet cable.</p> <p> </p> <p>5. After all the connecting cables are properly set up, power on the BliKVM until the display screen shows an image, indicating that the device has successfully started.</p> <p>6. Read the \"First Steps\" guide carefully. It provides instructions on how to find the device on the network, how to log in, change passwords, and more. Follow the steps described there and then return to this page.</p> <p>As BliKVM v1 also supports PiKVM OS, if your v1 comes with PiKVM as the factory OS, please refer to the documentation for web usage [instructions] (https://docs.pikvm.org/).</p> <p>7. Try managing your computer using the BliKVM web interface. Make sure you can see the image and that the keyboard and mouse are working properly. If you encounter any issues, check out our FAQ (it's very helpful). If you find no solution there, seek support in our Discord chat room.</p> <p>8. You can explore other pages in the wiki to discover more features of BliKVM. Enjoy your experience!</p>"},{"location":"BLIKVM-CM4-guide/#wi-fi-antenna-connection","title":"Wi-Fi Antenna Connection","text":"<p>If your CM4 has Wi-Fi functionality, open the metal casing of v1 and attach the Wi-Fi antenna from the package to the IPX interface on the CM4, as shown by the red box in the diagram below; the installation location on the casing for the antenna is defined as position 11 in the interface layout diagram.</p> <p> </p>"},{"location":"BLIKVM-CM4-guide/#support-1080p60hz-hdmi-input","title":"** Support 1080p60hz HDMI input **","text":"<p>First in V2.2 version, there is CSI channel switch. This switch is switch 2 csi channels or 4 csi channels.  In other versions, the switch is obsolete. Newer keeps the factory state, ignore this switch. Only flip the switch  when the device is powered off, otherwise it may cause permanent damage! The four small switches should be up or  down at the same time. </p>"},{"location":"BLIKVM-CM4-guide/#product-list","title":"Product List","text":"BLIKVM v1 excluding CM4 Case 1 PCB 1 Fan 1 SD card 32G 1 ATX Dupont Cables 1 OLED 1 BLIKVM v1 including CM4102000 Case 1 PCB 1 CM4102000 1 Fan 1 SD card 32G 1 ATX Dupont Cables 1 OLED 1 WiFi antenna 1 BLIKVM v1 including CM4002000 Case 1 PCB 1 CM4002000 1 Fan 1 SD card 32G 1 ATX Dupont Cables 1 WiFi antenna 1"},{"location":"BLIKVM-CM4-guide/#buy-link","title":"Buy link","text":"<p>v1 buy</p>"},{"location":"BLIKVM-HAT-guide/","title":"BLIKVM HAT version guide","text":""},{"location":"BLIKVM-HAT-guide/#introduction","title":"Introduction","text":"<p>BLIKVM hat Video</p> <p></p> <p>The Raspberry Pi IPKVM HAT is an add-on board for Raspberry Pi 4, made especially for KVM Over IP. BLIKVM-RPI4 is a Raspberry Pi 4 PoE KVM HAT.  This product\u2019s key features include video capture,  ATX adapter,PoE, OLED and RTC. The product has a customized metal case to dissipate heat and provide protection  for the HAT. The product can be easily installed on a standard 1U rack. The product is currently perfectly compatible with blikvm image and pikvm image. </p> <p>## Features - Video capture (HDMI, support 1080P@50Hz input) - Keyboard forwarding - Mouse forwarding - Mass Storage Drive - ATX Control the server power using ATX functions - Fullscreen mode - Access via Web UI - Support multi language switching - Support PoE - Serial console port - OLED display - Real Time Clock (RTC) - PWM FAN</p> <p>## Interface</p> <ul> <li>HAT part:</li> <li>HDMI IN</li> <li>ATX Port</li> <li>OLED</li> <li>PoE jumper</li> </ul> <ul> <li>Raspberry 4B part:</li> <li>SD CARD</li> <li>ACT LED</li> <li>PWR LED</li> <li>USB-PC</li> <li>HDMI 0</li> <li>HDMI 1</li> <li>A/V</li> <li>ETH(1000M) &amp; PoE</li> <li>2xUSB2.0 Port &amp; 2xUSB3.0Port</li> </ul>"},{"location":"BLIKVM-HAT-guide/#installation-requirements","title":"Installation requirements","text":"<p>If you have an assembly kit, you will need the following things</p> <ul> <li>Raspberry Pi 4B with 1Gb RAM or more.</li> <li>HDMI cable.</li> <li>Straight Ethernet cable (for the ATX board connection).</li> <li>Power supply unit &amp; cable(5.1V 3A USB-C, recommended by the Raspberry Pi).</li> </ul>"},{"location":"BLIKVM-HAT-guide/#basic-setup","title":"Basic setup","text":"<p>1. Flash the memory card or eMMC  </p> <p>2.Build BLIKVM according to the video instruction or review the illustrated instructions:</p> Video Guide: Metal case step by step <p></p> <p>3. Install the ATX adapter board</p> <p>The board has a standard PCIe I/O bracket and a low profile PCIe  I/O bracket. Choose one as needed</p> <p> </p> <p>Use Dupont cables to connect ATX adapter board to motherboard and chassis panel. There are clear pin definitions on the board for easy wiring.</p> <p> </p> <p>Mount the ATX adapter board to the case shell</p> <p></p> <p>Use a RJ45 network cable to connect the board to the CN-ATX interface of the HAT</p> <p></p> <p>4. Connect the HDMI cable</p> <p>Connect the HDMI output port of the computer directly to the HDMI IN port of the HAT with an HDMI cable. The HDMI pass-through EDID emulator is not necessary! If your computer does not output the correct HDMI format, plug the HDMI pass-through EDID emulator into the HDMI output port of the computer. This allows you to configure a fixed HDMI output format on your computer.</p> <p> </p> <p>5. Install the USB cable</p> <p>Connect the RPI4 port to the Raspberry Pi 4</p> <p> </p> <p>Connect the USB port to the controlled computer</p> <p></p> <p>When using PoE power supply, there is no need to connect the PWR port. When not using PoE power supply, connect the PWR port to a standard 5V/3A USB power supply.</p> <p>6. Test</p> <p>Powered by PoE, the HAT is connected to the router via the network cable</p> <p></p> <p>The screen displays the current status of the device, including the machine's IP address</p> <p></p> <p>Access the IP address of the HAT in the browser. Enjoy!</p> <p></p>"},{"location":"BLIKVM-HAT-guide/#specification","title":"Specification","text":"HDMI IN <p>The bridge chip is Toshiba TC358743, which supports both video and audio(I2S), and the highest input resolution is 1080p@50fps. Fixed HDMI back power issue.</p> CN-ATX <p>The CN-ATX interface is connected to the ATX adapter board (an accessory for the HAT)through a network cable, which can turn on,  off, and restart the controlled computer.</p> Display <p>A white OLED display with a resolution of 128x32, and the chip is SSD1306.  This display can show the temperature, IP address and other information of the Raspberry Pi.</p> PoE <ul> <li>Standard: IEEE 802.3af PoE</li> <li>Input voltage: 37-57 V DC</li> <li>Output power: 5 V DC/2.4 A</li> <li>Plug in the PoE jumper cap to enable PoE power supply</li> </ul> FAN <p>The IPKVM HAT is fitted with a small fan that is controlled by your Raspberry Pi via GPIO12. </p> Real Time Clock (RTC) <p>The clock chip is PCF8563 that is controlled by your Raspberry Pi via I2C. The coin cell battery is installed under the HDMI IN module.</p>"},{"location":"BLIKVM-HAT-guide/#accessories","title":"Accessories","text":""},{"location":"BLIKVM-HAT-guide/#atx-adapter-board","title":"ATX adapter board","text":"<p>This board is connected to the switch port on the motherboard of the controlled computer with DuPont cables.  The board has a standard PCIe I/O bracket and a low profile PCIe  I/O bracket.</p>"},{"location":"BLIKVM-HAT-guide/#usbpwr-splitter","title":"USB/PWR splitter","text":"<ul> <li>Connect the RPI4 port to your Raspberry Pi 4.</li> <li>Connect the USB port to the controlled computer.</li> <li>When using PoE power supply, there is no need to connect the PWR port. When not using PoE power supply, connect the PWR port to a standard 5V/3A USB power supply.</li> </ul>"},{"location":"BLIKVM-HAT-guide/#hdmi-pass-through-edid-emulator","title":"HDMI pass-through EDID emulator","text":"<p>If the controlled computer does not output HDMI images correctly, please use this accessory. Connect the Source port to the controlled computer, connect the Sink port to the HAT. Then you can set the correct HDMI output on the controlled computer.</p>"},{"location":"BLIKVM-HAT-guide/#metal-case","title":"Metal case","text":"<p> The metal case protects the HAT and improve heat dissipation. There are clear port markings on the case.</p> <p>The case can be easily installed on a standard 1U rack.</p>"},{"location":"BLIKVM-HAT-guide/#list","title":"List","text":""},{"location":"BLIKVM-HAT-guide/#product-list","title":"Product List","text":"Raspberry Pi IPKVM HAT 1 ATX adapter board 1 USB/PWR splitter 1 HDMI pass-through EDID emulator 1 Metal case 1 32G TF card 1 USB Type-C to USB Type-C Cable 30cm 1 Dupont Cables 8pin Male to Male 40cm 1 Dupont Cables 8pin Male to Female 40cm 1 Phillips screwdriver 1 Cross Wrench Sleeve 1"},{"location":"BLIKVM-HAT-guide/#list-of-items-prepared-by-the-user","title":"List of items prepared by the user","text":"Raspberry Pi 4 1 RJ45 network cable 2 USB Type-A to USB Type-C Cable 2 HDMI cable 1 PoE-sourcing equipment or 5V/3A USB adapter 1 CR1220 coin cell battery 1"},{"location":"BLIKVM-PCIE-guide/","title":"BLIKVM PCIe","text":""},{"location":"BLIKVM-PCIE-guide/#introduction","title":"Introduction","text":"<p>BLIKVM PCIe is a PCIe add-in card based on Raspberry Pi CM4 for KVM Over IP. This product\u2019s key features include video capture, ATX controller, PoE, OLED , UART and RTC. The card has a standard PCIe I/O bracket and a low profile PCIe  I/O bracket. The product is currently perfectly compatible with blikvm image and pikvm image.</p>"},{"location":"BLIKVM-PCIE-guide/#installation-requirements","title":"Installation requirements","text":"<p>You will need the following things</p> <ul> <li>Raspberry Pi CM4(if you order PCIe card only).</li> <li>PoE-sourcing equipment or 5V/3A USB adapter.</li> <li>CR1220 coin cell battery.</li> </ul>"},{"location":"BLIKVM-PCIE-guide/#features","title":"Features","text":"<ul> <li>Video capture (HDMI, support 1080P@60Hz input)</li> <li>Keyboard forwarding</li> <li>Mouse forwarding</li> <li>Mass Storage Drive</li> <li>ATX Control the server power using ATX functions</li> <li>Fullscreen mode</li> <li>Access via Web UI</li> <li>Support multi language switching</li> <li>Support PoE </li> <li>Serial console port</li> <li>OLED display</li> <li>Real Time Clock (RTC) </li> <li>PWM Fan </li> </ul>"},{"location":"BLIKVM-PCIE-guide/#basic-setup","title":"Basic setup","text":"<p>1. If you have an assembly kit, Flash the memory card or eMMC  2.Build BLIKVM according to the illustrated instructions:</p> Geerling: Engineering Test video <p></p> Craft Computing: Never Pay For IPMI Again - BliKVM Review <p></p>"},{"location":"BLIKVM-PCIE-guide/#specification","title":"Specification","text":"<p>hardware feature list</p> <p> </p> 1 HDMI in 2 USB-PC port 3 Power Input 5V 3A 4 RJ45 100M Ethernet port &amp; PoE 5 ATX control port 6 OLED Display 7 PWM FAN 8 BOOT 9 REAL TIME CLOCK(RTC) 10 UART port 11 USB-PC port <p>HDMI IN</p> <p>The bridge chip is Toshiba TC358743, which supports both video and audio(I2S), and the highest input resolution is 1080p@60fps. Fixed HDMI back power issue.</p> <p>USB-PC</p> <p>The BLIKVM PCIe card provides two USB interfaces, one is PC-IN (type c interface) and the other is USB-PC2 (pin interface). The purpose of these two interfaces is to connect to the USB of the controlled computer, used to control the mouse and keyboard. At the same time, only one interface can be used. The purpose of designing two interfaces is to directly use USB PC2 when the user's PC host has a row pin USB interface, which will make the wiring more concise.</p> <p>POWER-IN</p> <p>When using PoE power supply, there is no need to connect the PWR-IN port. When not using PoE power supply, connect the PWR-IN port to a standard 5V/3A USB power supply.</p> <p>ETHERNET-PoE</p> <ul> <li>Gigabit Ethernet port</li> <li>Standard: IEEE 802.3af PoE</li> <li>Input voltage: 37-57 V DC</li> <li>Output power: 5 V DC/2.4 A</li> </ul> <p>ATX-Connecter</p> <ul> <li>Connect to power control interface on the motherboard of the controlled computer with DuPont cables. It can turn on, off, and restart the controlled computer.  </li> <li>The pin is defined on the printing of the PCIe board, BTN means button.  </li> <li>According to the instructions of the computer motherboard, first find the position of the ATX function related pins on the motherboard, and then unplug the ATX ray that has been connected to the motherboard. After unplugging, the power button of the computer will lose its function. There are two rows of 8PIN pins on the PCIe board. It is unnecessary to distinguish between the two rows of pins when they are used with the same functions. One row of pins is used for KVM to control ATX-related functions, and the other row of pins is connected to the ATX DuPont head unplugged from the main board to maintain the original chassis power button function. Connect each wire according to the specific pin definitions on the motherboard and PCIe. See the following figure for the connection relationship\uff1a </li> </ul> <p>OLED Display</p> <p>A white OLED display with a resolution of 128x64, and the chip is SSD1306. This display can show the temperature, IP address and other information of the Raspberry Pi.</p> <p>FAN</p> <p>The Card HAT is fitted with a small fan that is controlled by your Raspberry Pi CM4 via GPIO12. </p> <p>BOOT</p> <p>Fit jumper to disable eMMC Boot</p> <p>Real Time Clock (RTC)</p> <p>The clock chip is PCF8563 that is controlled by your Raspberry Pi CM4 via I2C. The CR1220 battery is installed under the HDMI IN module.</p> <p>UART</p> <p>Connect the serial port to debug your Raspberry Pi CM4. The uart of Raspberry Pi CM4. G for GND, T(GPIO 14) for TXD, R(GPIO 15) for RXD.  Connect serial cable wires to G T R connectors on the PCIe board. NOTE: black wire = Ground, whiTe = Tx, and gReen = Rx; For specific methods, please refer to this document.</p>"},{"location":"BLIKVM-PCIE-guide/#accessories","title":"Accessories","text":"<p>HDMI pass-through EDID emulator</p> <p>If the controlled computer does not output HDMI images correctly, please use this accessory. Connect the Source port to the controlled computer, connect the Sink port to the HAT. Then you can set the correct HDMI output on the controlled computer.</p> <p>VGA-HDMI module</p> <p>When your device does not have an HDMI output interface, you can use a VGA to HDMI module.</p> <p>USB to TTL module</p> <p>Connect your computer usb interface with the serial port of BLIKVM to debug your Raspberry Pi CM4.</p> <p>Fan</p> <p>Use a cooling fan to cool the Raspberry Pi CM4, but installing a fan will make the product thicker than a standard PCIe add-in card.</p>"},{"location":"BLIKVM-PCIE-guide/#dimensions","title":"Dimensions","text":""},{"location":"BLIKVM-PCIE-guide/#test-video","title":"**Test Video **","text":"BLIKVM hardware PCIe version is tested wonderful based on pikvm software."},{"location":"BLIKVM-PCIE-guide/#notes","title":"Notes","text":"<p>To prevent the CM4 module from contacting the SD card holder, do not remove the insulating tape</p> <p></p>"},{"location":"BLIKVM-PCIE-guide/#list","title":"List","text":""},{"location":"BLIKVM-PCIE-guide/#product-list","title":"Product List","text":"BLIKVM PCIe card version 1 BLIKVM PCIe add-in card 1 Cooling fan 1 OLED display 1 USB to TTL module 1 HDMI pass-through EDID emulator 1 VGA-HDMI module 1 32G Micro SD card 1 HDMI cable 0.5m 1 HDMI Coupler 1 Network cable 1m 1 USB-A to USB-C cable 1m 2 Dupont USB cable 0.4m 1 WiFi antenna 1 Dupont Cables 8pin Male to Male 40cm 1 Dupont Cables 8pin Male to Female 40cm 1 Metal heatsink 1 Phillips screwdriver 1 Cross Wrench Sleeve 1 BLIKVM PCIe plug-n-play version 1 BLIKVM PCIe add-in card 1 CM4 102000 1 Cooling fan 1 OLED display 1 USB to TTL module 1 HDMI pass-through EDID emulator 1 VGA-HDMI module 1 32G Micro SD card 1 HDMI cable 0.5m 1 HDMI Coupler 1 Network cable 1m 1 USB-A to USB-C cable 1m 2 Dupont USB cable 0.4m 1 WiFi antenna 1 Dupont Cables 8pin Male to Male 40cm 1 Dupont Cables 8pin Male to Female 40cm 1 Metal heatsink 1 Phillips screwdriver 1 Cross Wrench Sleeve 1"},{"location":"BLIKVM-PCIE-guide/#list-of-items-prepared-by-the-user","title":"List of items prepared by the user","text":"Raspberry Pi CM4(if you order PCIe card only) 1 PoE-sourcing equipment or 5V/3A USB adapter 1 CR1220 coin cell battery 1"},{"location":"BLIKVM-PCIe-installation/","title":"BLIKVM PCIe CM4 Installation Guide","text":""},{"location":"BLIKVM-PCIe-installation/#1unpack-and-take-out-the-devices","title":"1.Unpack and take out the devices","text":"<p>Product List</p> <p></p>"},{"location":"BLIKVM-PCIe-installation/#2install-the-main-device","title":"2.Install the main device","text":"<p>Install CM4 and 4 Hex spacers (This article takes CM4 lite as an example, using the image in the Micro SD card, CM4 eMMC user need to burn the image by yourself.)Stick a heat conductive sheet on the top of CM4 , tear off the protective film of the sheet. </p> <p>  Install metal heatsink </p> <p>The main device installation is complete.</p>"},{"location":"BLIKVM-PCIe-installation/#3connect-usb-and-atx","title":"3.Connect USB and ATX","text":"<p>The motherboard used in this article is Asus H520M-E, the interface definition of different motherboards may be different, please refer to your motherboard manual.</p> <p> </p>"},{"location":"BLIKVM-PCIe-installation/#4connect-oled","title":"4.Connect OLED","text":"<p>The OLED you received does not have a bracket installed. Please refer to the picture for installation. In addition, OLED support is made of acrylic material, which needs to be used after removing the protective film on the surface.</p> <p>  The above is the installation steps, and the effect of not tearing the film is as follows. In actual use, please remove the protective film.   </p>"},{"location":"BLIKVM-PCIe-installation/#5connect-the-hdmi-cable","title":"5.Connect the HDMI cable","text":"<p>Connect the HDMI output port of the computer directly to the HDMI IN port of the product with an HDMI cable. The HDMI pass-through EDID emulator is not necessary! If your computer does not output the correct HDMI format, plug the HDMI pass-through EDID emulator into the HDMI output port of the computer. This allows you to configure a fixed HDMI output format on your computer.</p> <p> </p>"},{"location":"BLIKVM-PCIe-installation/#6connect-the-network-cable","title":"6.Connect the network cable","text":"<p>Gigabit Ethernet port standard: IEEE 802.3af PoE input voltage:37v-57v.</p> <p></p> <p>When using PoE power supply, there is no need to connect the PWR-IN port.</p>"},{"location":"BLIKVM-PCIe-installation/#7connect-pwr-in","title":"7.Connect PWR-IN","text":"<p>When not using PoE power supply, connect the PWR-IN port to a standard 5V/3A USB power supply.</p>"},{"location":"BLIKVM-PCIe-installation/#8test","title":"8.Test","text":"<p>OLED screen showing device IP and other information.</p> <p>  Access the IP address in browser. After passing the test, install the product into the computer case.</p>"},{"location":"BLIKVM-PCIe-installation/#9install-the-product-into-the-computer-case","title":"9.Install the product into the computer case","text":"<p>Disconnect power and wiring, install the product on the motherboard, and reconnect the cables after installation is complete. The color of ATX cable received in different batches may be different. Please directly refer to the pin definition for connection</p> <p> </p> <p>Enjoy!</p>"},{"location":"BLIKVM-PCIe-installation/#appendix-1install-a-low-profile-pcie-io-bracket","title":"Appendix 1.Install a low profile PCIe  I/O bracket","text":"<p>Note</p> <p> </p>"},{"location":"BLIKVM-PCIe-installation/#appendix-2install-the-cooling-fan","title":"Appendix 2.Install the cooling fan","text":"<p>Usually the metal heatsink is sufficient, the cooling fan is not necessary.</p> <p> </p> <p>The cooling fan is controlled by CM4 via GPIO12.</p>"},{"location":"BLIKVM-PCIe-installation/#appendix-3install-wifi-antenna","title":"Appendix 3.Install wifi antenna","text":"<p>Note</p> <p> </p>"},{"location":"BliKVM-v4-guide/","title":"BliKVM v4 Allwinner","text":"<p>BliKVM v4 is a production-ready, plug and play KVM-over-IP device that offers professional users a convenient solution for remote server or workstation management. It is based on Linux and fully open source. With BliKVM, you can easily power on/off, restart your computer, configure UEFI/BIOS settings, and perform OS reinstallation using an emulated Mass Storage Device. BliKVM simulates a keyboard, mouse, and monitor, all accessible through a web browser, ensuring a seamless user experience. Its hardware-level access guarantees independence from specific remote ports, protocols, or services, making it a highly flexible and reliable remote management solution for professionals!</p> <ul> <li>BliKVM V4 Datasheet</li> </ul>"},{"location":"BliKVM-v4-guide/#features","title":"Features","text":"<ul> <li>Video capture (HDMI, support 4K@30Hz input)</li> <li>Keyboard forwarding</li> <li>Mouse forwarding</li> <li>HDMI video loop through</li> <li>ATX Control the server power using ATX functions</li> <li>Fullscreen mode</li> <li>Access via Web UI</li> <li>Support multi language switching</li> <li>Support PoE &amp; DC</li> <li>Support WiFi</li> <li>Serial console port</li> <li>1.33 inch color display</li> <li>Real Time Clock (RTC) </li> </ul>"},{"location":"BliKVM-v4-guide/#installation-requirements","title":"Installation Requirements","text":"<p>In addition to the v4 kit, you will need the following equipment:</p> <ul> <li>Power adapter (5V 3A, USB-C port, or 12V 2A DC port). If you plan to use PoE (Power over Ethernet) or if the USB ports on your controlled computers provide sufficient power, a separate power adapter is not required.</li> <li>HDMI cables (at least one). If you also need to use the HDMI loop-out interface, you will need two cables.</li> <li>Ethernet cable(s) (provide based on your requirements). One cable is required for using the ATX power switch function, and one cable is required for using the Ethernet connection.</li> <li>USB-C to USB-A cable (for mouse and keyboard data transmission).</li> </ul> <p>Terminal Upgrade Notice!</p> <p>Before upgrading, execute the following command, otherwise, after running apt-get update and apt-get upgrade, the image will fail to start. <pre><code>apt-mark hold linux-dtb-edge-sunxi64 linux-image-edge-sunxi64\n</code></pre></p> <p>info \"Video Guide: Unpacking and connecting case step by step\"     </p>"},{"location":"BliKVM-v4-guide/#installation-steps","title":"Installation Steps","text":"<p>1. Open the v4 kit package and connect the BliKVM to the controlled computer according to the connection diagram shown below: </p> <p>ATX Connection Please refer to the ATX Connection Guide.</p> <p>2. Once all the cables are connected, power on the BliKVM. Wait until the display shows the interface, indicating that the device has started up successfully.</p> <p>3. Read the \"First Steps\" guide carefully. It provides instructions on how to find the device on the network, how to log in, change passwords, and more. Follow the steps described there and then return to this page.</p> <p>4. Try managing your computer using the BliKVM web interface. Make sure you can see the image and that the keyboard and mouse are working properly. If you encounter any issues, check out our FAQ (it's very helpful). If you find no solution there, seek support in our Discord chat room.</p> <p>5. You can explore other pages in the wiki to discover more features of BliKVM. Enjoy your experience!</p>"},{"location":"BliKVM-v4-guide/#video-mode","title":"Video Mode","text":"<p>v4 supports a maximum video input of 4K30Hz, and the default transmission resolution is 1920x1080.</p>"},{"location":"BliKVM-v4-guide/#product-list","title":"Product List","text":"BLIKVM v4 1 WiFi Antenna 1 ATX adapter board 1 ATX Dupont Cables 8pin Male to Male 60cm 1 ATX Dupont Cables 8pin Male to Female 60cm 1 1U Rack Mounting Ears 2 M2.5x5 Screws 8 Silicone Bumper Pellets 1"},{"location":"BliKVM-v4-guide/#serial-console-access-via-the-5v-port","title":"Serial Console Access via the 5V Port","text":"<p>The 5V port can be used both for power supply and serial console access at the same time. There is an onboard CH341-based USB to UART converter present inside BliKVM v4 which is connected to UART0 of the mCore-H616 SoC, so you can connect a USB port of a PC to the 5V port without an external UART and a USB-C to dupont adapter.</p> <p>PC USB port current output</p> <p>Be careful when trying to use the 5V port because a PC USB port alone may not be able to provide 3A (5V) which is a documented requirement for the board to work. Either use a 12V 2A DC port at the same time as using the 5V port for serial communication without a USB Splitter board, or use the splitter board to split out the VCC pin and use a separate 5V 3A power supply to provide power to the 5V port's VCC pin. Likewise, when disconnecting a cable from the 12V 2A DC port while BliKVM is powered on, make sure to disconnect the cable from the 5V port first (because that will become the power source for BliKVM v4 after the 12V 2A source is disconnected unless a splitter is used).</p> <p>You should see something like this in your host kernel log (if you are using a Linux-based OS) when attaching a USB cable to the 5V port of BliKVM v4:     <pre><code>usb 1-1.2: new full-speed USB device number 12 using xhci_hcd\nusb 1-1.2: New USB device found, idVendor=1a86, idProduct=7523, bcdDevice=81.34\nusb 1-1.2: New USB device strings: Mfr=0, Product=2, SerialNumber=0\nusb 1-1.2: Product: USB Serial\nch341 1-1.2:1.0: ch341-uart converter detected\nusb 1-1.2: ch341-uart converter now attached to ttyUSB0\n</code></pre></p> <p>Accessing this port can then be done using GNU screen or TIO:     <pre><code>tio /dev/ttyUSB0\nmangopimcore login: blikvm\n# ...\n</code></pre></p> <p>If you need to check how much data is received over UART0 you can do this by looking at the counters exposed via proc as follows (the rx counter should increase when the data is sent from an external host if the built-in USB to UART converter is working properly):     <pre><code>root@mangopimcore:~# grep '0: uart' /proc/tty/driver/serial\n0: uart:16550A mmio:0x05000000 irq:284 tx:20306 rx:40 pe:1 RTS|DTR\n</code></pre></p>"},{"location":"BliKVM-v4-guide/#dev","title":"Dev","text":"<p>If you want to develop or port software on v4 hardware yourself, you can refer to this hardware resource description.</p>"},{"location":"Datasheet-BliKVM-v4/","title":"BliKVM v4 Allwinner (H616 SOC)","text":"<p>BliKVM is a production-ready, plug and play KVM-over-IP device that offers professional users a convenient solution for remote server or workstation management. It is based on Linux and fully open source. With BliKVM, you can easily power on/off, restart your computer, configure UEFI/BIOS settings, and perform OS reinstallation using an emulated Mass Storage Device. BliKVM simulates a keyboard, mouse, and monitor, all accessible through a web browser, ensuring a seamless user experience. Its hardware-level access guarantees independence from specific remote ports, protocols, or services, making it a highly flexible and reliable remote management solution for professionals!</p>"},{"location":"Datasheet-BliKVM-v4/#connectivity-diagram","title":"Connectivity diagram","text":"1 USB 2.0 port 10 Antenna interface 2 Power Input 5V 3A &amp; UART 11 RJ45 100M Ethernet port &amp; PoE 3 RJ45 ATX control port 12 Display 1.33 inch LCD 4 HDMI video loop through port 13 Power LED (red) 5 USB-PC port 14 User defined button SW1 6 Power Input 12V 2A 5.5*2.1mm 15 ACT LED (green) 7 HDMI video input port 16 Display ON/OFF button 8 HDMI input status LED (green) 17 Micro SD card slot 9 HDMI output status LED (yellow)"},{"location":"Datasheet-BliKVM-v4/#specifications","title":"Specifications","text":"Parameter name Characteristics Power 5V 3A 5V port, USB-PC port 12V 2A 12V port PoE Power over Ethernet (IEEE802.3af compliant)  48V DC Connectivity/Interfaces HDMI-IN HDMI video input port HDMI-OUT HDMI video loop through port USB-PC Keyboard, mouse, mass storage, and other external device emulation) ATX Turn on/off or restart the controlled computer WiFi &amp; Bluetooth IEEE802.11 b/g/n + BLE4.2 Micro SD card slot Persistent storage for OS and your data 5V port 5V 3A power or serial console management port Displays and indicators LED indicators Power LED, ACT LED, HDMI input status LED (green)\uff0c HDMI output status LED (yellow) LCD display LCD 240x240 1.33 inch User defined button SW1 Buzzer Find me Video Supported resolutions Up to 4k@30Hz Video compression methods MJPEG Core Chip ALLWINNER H616 RAM 1GB Power consumption Up to 15W Environmental Operating temperature 0\u00b0C to 70\u00b0C Storage temperature -20\u00b0C to 60\u00b0C Dimensions and weight Size 100 (L) x 134 (W) x 44.4 (H) mm Weight 0.45 kg <p>BLIKVM CM4 version OLED display</p> <p>The product comes standard with a monochrome OLED display with a resolution of 128x64, and the chip is SSD1306. The user connects the display to the product with the wiring of the display.</p> <p></p> <p>The module is connected to CM4 through the I^2^C interface. The wiring definition is shown in the following table.  This is a library for the monochrome OLEDs based on SSD1306 drivers.</p> Display(SSD1306) CM4 GND GND VCC 3.3V SCL GPIO3(SCL1,I^2^C) SDA GPIO2(SDA1,I^2^C)"},{"location":"Datasheet-BliKVM-v4/#dimensions-schematic-diagram","title":"Dimensions Schematic Diagram","text":""},{"location":"Dev-BliKVM-v4-Allwinner/","title":"Dev BliKVM v4 Allwinner (H616 SOC)","text":"<p>BliKVM is a production-ready, plug and play KVM-over-IP device that offers professional users a convenient solution for remote server or workstation management. It is based on Linux and fully open source. With BliKVM, you can easily power on/off, restart your computer, configure UEFI/BIOS settings, and perform OS reinstallation using an emulated Mass Storage Device. BliKVM simulates a keyboard, mouse, and monitor, all accessible through a web browser, ensuring a seamless user experience. Its hardware-level access guarantees independence from specific remote ports, protocols, or services, making it a highly flexible and reliable remote management solution for professionals!</p>"},{"location":"Dev-BliKVM-v4-Allwinner/#system-block-diagram","title":"System Block Diagram","text":""},{"location":"Dev-BliKVM-v4-Allwinner/#functional-module","title":"Functional Module","text":""},{"location":"Dev-BliKVM-v4-Allwinner/#panel","title":"Panel","text":"Function Pin Description Button SW1 GPIOI1(257) Press for high level Button SW1 GPIOI2(258) Press for high level LED ACT GPIOI5(261) Low level enable LED LED PWR 3V3 PWR LED is always on after power on"},{"location":"Dev-BliKVM-v4-Allwinner/#atx","title":"ATX","text":"Function Pin Description LED-PWR GPIOH10(234) Light on for high level LED-HDD GPIOH9(233) Light on for high level SW-PWR GPIOH4(228) High level enable SW-RST GPIOI16(272) High level enable"},{"location":"Dev-BliKVM-v4-Allwinner/#buzzer","title":"BUZZER","text":"Function Pin Description Buzzer GPIOI15(271) High level enable"},{"location":"Dev-BliKVM-v4-Allwinner/#fan","title":"FAN","text":"Function Pin Description Fan GPIOI13(269) High level enable"},{"location":"Dev-BliKVM-v4-Allwinner/#lcd-display","title":"LCD Display","text":"<p>1.33-inch LCD display module, driver chip ST7789, resolution 240x240.</p> Function Pin Description LCD_EN GPIOI4(260) Backlight high level enable LCD_RST GPIOI6(262) Reset Low level enable LCD_DC GPIOI3(259) Data/command control pin SPI1_CS GPIOH5 SPI1_CLK GPIOH6 SPI1_MOSI GPIOH7 GND GND 3V3 3V3"},{"location":"Expand_Filesystem/","title":"Expand Filesystem","text":"<p>If you find that the free space of the raspberry pi SD card or eMMC is smaller than the capacity of the actual SD card or eMMC, you need to do the following to expand the raspberry pi. If you find that the system does not have the raspi config tool, you can use Method 2 (use the GParted partition tool).  </p>"},{"location":"Expand_Filesystem/#method-1-use-raspi-config-tool","title":"Method 1: Use raspi-config tool","text":"<p>If you are using a mirror after June 2023 and have added a third read-write partition, this method is no longer applicable. Please refer to method 2 and method 3. 1. open raspi-config. <pre><code>sudo raspi-config\n</code></pre> 2. choose Advancd Options\uff1a </p> <p>3. choose Expand Filesystem\uff1a </p> <p>4. Ok: </p> <p>5. Execute the command <code>resize2fs /dev/mmcblk0p2</code> in the terminal to see that the SD card has been successfully expanded.</p>"},{"location":"Expand_Filesystem/#method-2-use-gparted-tool","title":"Method 2: Use GParted tool","text":"<p>1. Connect the SD card or EMMc that has burned the image to the computer through USB. Take the GParted partition tool under Linux as an example. Other platforms also have similar partition tools. Open GParted software and select SD card:   </p> <p>2. By observing the partition of the SD card in the above figure, we can find that 2.01GB and 21.87GB of space are unused before and after the sdb3 partition, which is the space we want to expand. Select the sdb3 partition and click Resize. </p> <p>3. You can drag the white partition of sdb3 to the leftmost and rightmost, or fill in 25958 with \"Previous Free Space\" as \"0\" and \"New Size\" as \"Maximum Size\", and then click Resize in the lower right corner. Then click OK to see that all unused space of sd has been used. </p> <p>4. Insert the SD card into the device and start it.  </p>"},{"location":"Expand_Filesystem/#method-3-use-script","title":"Method 3: Use script","text":"<ul> <li> <p>If you are using a BliKVM image, you can run the following script on KVM to automatically expand the space. 1. Log in to the KVM terminal, confirm that the system has read and write permissions, run <code>vim expand. sh</code> on any path, and write the following content to expand.sh. If your hardwawre is v1,v2 or v3, use: <pre><code>#!/bin/bash\nset -x\n\nresize_mmcblk0p3() {\n  echo \"Resizing mmcblk0p3 partition...\"\n  parted /dev/mmcblk0 resizepart 3 100%\n  resize2fs /dev/mmcblk0p3\n  echo \"mmcblk0p3 partition resized successfully.\"\n}\n\necho \"Starting partition resizing...\"\n\nresize_mmcblk0p3\n\necho \"Partition resizing completed.\"\n</code></pre> If your hardwawre is v4, use: <pre><code>#!/bin/bash\nset -x\n\nresize_mmcblk0p1() {\n  echo \"Resizing mmcblk0p1 partition...\"\n  parted /dev/mmcblk0 resizepart 1 100%\n  resize2fs /dev/mmcblk0p1\n  echo \"mmcblk0p1 partition resized successfully.\"\n}\n\necho \"Starting partition resizing...\"\n\nresize_mmcblk0p1\necho \"Partition resizing completed.\"\n</code></pre></p> </li> <li> <p>If you are using a PiKVM image, you can run the following script on KVM to automatically expand the space. 1. Log in to the KVM terminal, confirm that the system has read and write permissions, run <code>vim expand. sh</code> on any path, and write the following content to expand.sh <pre><code>#!/bin/bash\nset -x\n        if grep -q 'X-kvmd\\.otgmsd' /etc/fstab; then\n                part=$(grep 'X-kvmd\\.otgmsd' /etc/fstab | awk '{print $1}')\n                # shellcheck disable=SC2206\n                splitted=(${part//=/ })\n                if [ \"${splitted[0]}\" == LABEL ]; then\n                        label=${splitted[1]}\n                        part=$(blkid -c /dev/null -L \"$label\")\n                else\n                        label=PIMSD\n                fi\n                unset splitted\n                disk=/dev/$(lsblk -no pkname \"$part\")\n                npart=$(cat \"/sys/class/block/${part//\\/dev\\//}/partition\")\n                umount \"$part\"\n                parted \"$disk\" -a optimal -s resizepart \"$npart\" 100%\n                yes | mkfs.ext4 -L \"$label\" -F -m 0 \"$part\"\n                mount \"$part\"\n                unset disk part npart label\n        fi\n</code></pre></p> </li> </ul> <p>2. Execute 'bash expand. sh' on the terminal and wait for the execution to complete.</p>"},{"location":"OLED-display/","title":"OLED display","text":"<p>Due to prolonged operation, issues such as screen burn-in may occur with the OLED. Therefore, the OLED has the following logic: upon initial startup, oled_enable is set to 1 by default, meaning the OLED screen will remain constantly on. If oled_enable is set to 0, the screen will display every 5 minutes after the device has been running for 300 minutes, significantly extending the screen's lifespan.</p> <p>To customize this behavior, you can locate the following configuration in the \"/usr/bin/blikvm/package.json\" file. Modify the values of \"restart_show_time\" and \"interval_display_time\" in minutes to achieve different control effects.</p> <pre><code>\"oled\":{\n    \"oled_enable\": 1,\n    \"restart_show_time\": 300,\n    \"interval_display_time\": 5\n}\n</code></pre>"},{"location":"Product-Datasheet-BliKVM-v1-RPI-CM4/","title":"BliKVM v1 (RPI CM4)","text":"<p>BliKVM is a production-ready, plug and play KVM-over-IP device that offers professional users a convenient solution for remote server or workstation management. It is based on Linux and fully open source. With BliKVM, you can easily power on/off, restart your computer, configure UEFI/BIOS settings, and perform OS reinstallation using an emulated Mass Storage Device. BliKVM simulates a keyboard, mouse, and monitor, all accessible through a web browser, ensuring a seamless user experience. Its hardware-level access guarantees independence from specific remote ports, protocols, or services, making it a highly flexible and reliable remote management solution for professionals!</p>"},{"location":"Product-Datasheet-BliKVM-v1-RPI-CM4/#connectivity-diagram","title":"Connectivity diagram","text":"1 OTG port 7 Micro SD card slot 2 USB3.0 x2 8 ACT LED (green) 3 ATX control port 9 Ethernet port 4 HDMI video input port 10 OLED Display 5 PWR IN port 11 Antenna mounting hole 6 Power LED (red)"},{"location":"Product-Datasheet-BliKVM-v1-RPI-CM4/#specifications","title":"Specifications","text":"Parameter name Characteristics Power 5V 3A PWR IN port Connectivity/Interfaces HDMI IN HDMI video input port OTG Keyboard, mouse, mass storage, and other external device emulation CN-ATX Turn on/off or restart the controlled computer Micro SD card slot Persistent storage for OS and your data PWR IN port 5V 3A power port Displays and indicators LED indicators Power LED (red), ACT LED (green) OLED display OLED 128x64 0.96 inch Video Supported resolutions Up to 1920x1200@60Hz Video compression methods H.264, MJPEG Core Chip Raspberry Pi Compute Module 4 Power consumption Up to 15W Environmental Operating temperature 0\u00b0C to 70\u00b0C Storage temperature -20\u00b0C to 60\u00b0C Dimensions and weight Size 120(L) x 70W) x 37(H) mm Weight 0.45 kg"},{"location":"Product-Datasheet-BliKVM-v1-RPI-CM4/#dimensions-schematic-diagram","title":"Dimensions Schematic Diagram","text":""},{"location":"atx-guide/","title":"ATXA guide","text":""},{"location":"atx-guide/#1-introduction","title":"1. Introduction","text":"<p>ATXA is an ATX adapter borad to manage the power of your computer.  The product includes two modules A-board and B-board. A-board is connected to the Raspberry Pi,  B-board is connected to the computer's motherboard, and A-board is connected to B-board through a  network cable.Join to the Discord Community Chat for news,  questions and support!</p> ATXA_A ATXA_B"},{"location":"atx-guide/#2-a-board","title":"2. A-board","text":"<p>  A-board is connected to the Raspberry Pi. The following table is a typical connection method in PiKVM application.</p> A-board RPI4 GND GND 3V3 3V3 LED PWR GPIO24 LED HDD GPIO22 SW PWR GPIO23 SW RST GPIO27 <p>A-board is connected to B-board through a network cable. The following table is the corresponding relationship between the pin status of A-board and B-board.</p> Pins on A-board Pins on B-board LED PWR is HIGH LED PWR+ is HIGH,  LED PWR- is LOW LED PWR is LOW LED PWR+ is LOW,  LED PWR- is LOW LED HDD is HIGH LED HDD+ is HIGH,  LED HDD- is LOW LED HDD is LOW LED HDD+ is LOW,  LED HDD- is LOW SW PWR is HIGH BTN PWR+ and BTN PWR- connected, the power button is pressed SW PWR is LOW BTN PWR+ and BTN PWR- disconnected, the power button is unpressed SW RST is HIGH BTN RST+ and BTN RST- connected, the reset button is pressed SW RST is LOW BTN RST+ and BTN RST- disconnected, the reset button is unpressed"},{"location":"atx-guide/#3-b-board","title":"3. B-board","text":"<p>The b-board has an adapted full-height and half-height metal PCI mounting plate, which can be installed on the computer case. The user connects the pins on the B-board to the ATX control interface on the computer motherboard using the color DuPont cables provided with the product. </p> <p>ATXA-B Instructions for connecting to the computer motherboard</p> <p>According to the instructions of the computer motherboard, first find the position of the ATX function related pins on the motherboard, and then unplug the ATX ray that has been connected to the motherboard. After unplugging, the power button of the computer will lose its function. There are two rows of 8PIN pins on the ATXA-B motherboard. It is unnecessary to distinguish between the two rows of pins when they are used with the same functions. One row of pins is used for KVM to control ATX-related functions, and the other row of pins is connected to the ATX DuPont head unplugged from the main board to maintain the original chassis power button function. Connect each wire according to the specific pin definitions on the motherboard and ATXA-B. See the following figure for the connection relationship\uff1a </p>"},{"location":"atx-guide/#4mechanical-diagram","title":"4.Mechanical Diagram","text":""},{"location":"atx-guide/#5test-video","title":"5.Test video","text":"<p>youtube\uff1aATX</p>"},{"location":"atx-guide/#6more-link","title":"6.More link","text":"<p>Purchase\uff1aATX</p>"},{"location":"atx/","title":"ATX Control Board","text":"<p>To manage the power of your computer, you need to install an ATX control board inside the chassis and connect it to the motherboard (to enable KVM control of power on/off via the ATX switch). There is a female-to-female cable that connects from the motherboard to the ATX control board and a male-to-female cable that connects from the ATX control board to the front panel (to keep the power on/off button on the chassis functional). The interface on the ATX control board has two ports (TO CASE, TO MB), and both ports have the same functionality, so they can be used interchangeably.</p> <p>ATX compatibility</p> <p>Laptops are not compatible with ATX as they lack the required ATX pins. This method is only applicable to PC servers and desktops.</p>"},{"location":"atx/#detailed-instructions","title":"Detailed Instructions","text":"<p>1. Connect the two cables to the ATX control board. To secure the ATX control board inside the chassis, you can choose to mount it on a bracket attached to a PCIe slot.</p> Example <p></p> <p>2. Locate the motherboard pins responsible for connecting the front panel buttons and LEDs and disconnect them. Usually, the cables and connectors on the motherboard are labeled. If you're unsure, you can refer to your motherboard's documentation.</p> Example <p></p> <p>3. Connect the DuPont male connector from the front panel to the DuPont female connector on the ATX cable, following the pin definitions and paying attention to the labels and polarity (+ or -).</p> Example <p></p> <p>4. Using the same method, connect the female pins from the ATX board to the corresponding connector on the motherboard. Refer to your motherboard's documentation to determine which pins on the motherboard connect to which pins on the ATX control board. Sometimes, this information is printed on the motherboard.</p> Example <p></p> <p>5. Install the ATX board into a PCI slot on the chassis and secure it with screws or use alternative mounting methods according to your preference.</p> Example <p>6. Arrange the cables neatly and secure them as needed. Make sure the cables do not come into contact with any fans inside the chassis. Use an Ethernet cable to connect the ATX board to the ATX interface of the BliKVM. With this, the hardware connection of the ATX control board is complete.</p>"},{"location":"edid/","title":"EDID","text":"<p>The EDID file in BliKVM serves the purpose of informing the controlled computer about the expected HDMI output resolution. For example, if the EDID is set to 1080P60Hz, and the controlled computer supports this resolution, it will output at 1080P60Hz. Additionally, EDID can be used to disable audio, modify the display model, name, manufacturer, and other information. In most cases, you don't need to change it, but sometimes, especially with strange UEFI/BIOS behavior, it may be necessary.</p> <p>Note</p> <ul> <li>BliKVM v1, v2, and v3 use the CSI video capture scheme, which supports EDID settings. However, BliKVM v4 uses the USB video capture scheme, which does not support EDID settings.</li> <li>For v3 HAT, there is a limitation of two CSI channels on the Raspberry Pi 4B, which means it can only capture video input with a maximum resolution of 1080P50Hz. Therefore, if you set 1080P60Hz EDID for v3, it will not be able to capture the image.</li> <li>If you are using PiKVM OS, you can refer to this link for modification instructions.</li> <li>If you are using BliKVM OS, the EDID file is located at <code>/usr/bin/blikvm/edid.txt</code>. Open this file, and replace the EDID contents with the desired resolution's EDID.</li> </ul>"},{"location":"edid/#edid-examples-for-1080p60hz","title":"EDID Examples for 1080P60Hz","text":"<p>The following EDID is suitable for v1 and v2 hardware.</p> 1920x1080 60Hz, with audio <pre><code>00FFFFFFFFFFFF0031D8888800888888\n1C150103800000780AEE91A3544C9926\n0F50543FCD0001000101010101010101\n010101010101011D007251D01E206E28\n5500C48E2100001E8C0AD08A20E02D10\n103E9600138E2100001E000000FC0050\n694B564D0A20202020202020000000FD\n003B3D0F2E0F1E0A202020202020013C\n02031E434F041303021211012021A23C\n3D3E1F1066030C00300080E2007F8C0A\nD08A20E02D10103E9600C48E21000018\n8C0AD08A20E02D10103E9600138E2100\n00189729A0D051842230509816009A01\n11000018000000000000000000000000\n00000000000000000000000000000000\n0000000000000000000000000000001C\n</code></pre>"},{"location":"edid/#edid-examples-for-1080p50hz","title":"EDID Examples for 1080P50Hz","text":"<p>The following EDID is suitable for v1, v2, and v3 hardware, especially when you want v3 HAT to capture 1080P resolution.</p> 1920x1080 50Hz, with audio <pre><code>00ffffffffffff005262888800888888\n1c150103800000780aEE91A3544C9926\n0F505400000001010101010101010101\n010101010101011d007251d01e206e28\n5500c48e2100001e8c0ad08a20e02d10\n103e9600138e2100001e000000fc0054\n6f73686962612d4832430a20000000FD\n003b3d0f2e0f1e0a202020202020014f\n020321434e041303021211012021a23c\n3d3e1f2309070766030c00300080E300\n7F8c0ad08a20e02d10103e9600c48e21\n0000188c0ad08a20e02d10103e960013\n8e210000188c0aa01451f01600267c43\n00138e21000098000000000000000000\n00000000000000000000000000000000\n00000000000000000000000000000028\n</code></pre>"},{"location":"edid/#edid-examples-for-720p60hz","title":"EDID Examples for 720P60Hz","text":"<p>The following EDID is suitable for v1, v2, and v3 hardware.</p> 1280x720 60Hz, with audio <pre><code>00ffffffffffff005262888800888888\n1c150103800000780aEE91A3544C9926\n0F505400000001010101010101010101\n010101010101011d007251d01e206e28\n5500c48e2100001e8c0ad08a20e02d10\n103e9600138e2100001e000000fc0054\n6f73686962612d4832430a20000000FD\n003b3d0f2e0f1e0a2020202020200100\n020321434e041303021211012021a23c\n3d3e1f2309070766030c00300080E300\n7F8c0ad08a20e02d10103e9600c48e21\n0000188c0ad08a20e02d10103e960013\n8e210000188c0aa01451f01600267c43\n00138e21000098000000000000000000\n00000000000000000000000000000000\n00000000000000000000000000000000\n</code></pre>"},{"location":"edid/#custom-edid","title":"Custom EDID","text":"<p>To customize the EDID, it is best to use third-party utilities, such as the recommended advanced AW EDID Editor (works well in Windows and can be used in wine) or wxEDID. Both editors work with the binary EDID format. Using these tools, you can modify the EDID information like editing a file, similar to changing the information on an identity card. By editing the EDID, you can adjust the parameters and characteristics of the display to suit different usage requirements, and thus achieve better display performance.</p>"},{"location":"faq/","title":"FAQ &amp; Troubleshooting","text":"<p>As a first step, we recommend carefully reading our documentation. Most steps to successfully set up your BLIKVM are already described there. If you run into any issues you can check this page which will list common errors. If that still doesn't help you you're welcome to raise an issue ticket or join our Discord for further help.</p>"},{"location":"faq/#common-questions","title":"Common questions","text":"Can I connect multiple servers to a single BLIKVM? <p>Yes, but it requires additional work to set up. See this page.</p> How can I get the access to PiKVM in my local network over Internet? <p>If your router has an external IP address, you can use port forwarding to forward port 80 (Web), port 8008 (mjpeg), and port 8188 (webrtc) In all other cases, you can use the excellent free VPN service Tailscale.</p> Which BLiKVM hardware version should I choose, such as BLiKVM V1 CM4, BLiKVM V2 PCIe, and BLiKVM V3 Hat? <ul> <li>First, please refer to this page for a comparison of the main parameters of each version.</li> <li>V1 and V3 are external solutions, while V2 is an internal chassis solution. If you have a chassis and there is space inside, choosing the V2 PCIe version would be a better option.</li> <li>So how do you choose between the external solutions V1 and V3? V1 is based on the CM4 platform, with higher integration and ready-to-use versions available. V3 is based on the Raspberry Pi 4B platform, with all IO ports exposed and greater expandability. Another key difference is that V1 supports up to 1080P60Hz input, while V3 supports up to 1080P50Hz input. Of course, you also need to consider whether you already have a CM4 or 4B, as purchasing the corresponding baseboard would offer better cost-effectiveness.</li> </ul> Can I use BLIKVM for gaming? <p>No, because:</p> <ul> <li>For HDMI-CSI bridge, bus bandwidth is not enough to transmit more than 1080p60.</li> <li>For HDMI-USB dongle, high latency and low video quality.</li> <li>General hardware video capture differs from software streaming and introduces additional latency.</li> </ul> Can BLIKVM do 4K video? <ul> <li>For HDMI-CSI bridge, no. There is not enough bandwidth in the CSI bus for that much data. 1080p60 will max out the bandwidth.</li> <li>For the USB capture devices: technically yes, they will downsample to something smaller to meet the USB 2.0 bandwidth limitations, so the source may be 4k, but the stream will not.</li> <li>The 4K real-time video will not fit through the network anyway.</li> </ul> Where does the cursor/video latency come from? <p>Here is the chain of transferring an image to your browser or VNC client.</p> <p><code>Capture device -&gt; Compression -&gt; Network -&gt; Decompression -&gt; Rendering</code></p> <p>100-200ms is very, very fast for this. But we are working to speed things up even more.</p> Does BLIKVM support sound? <p>BliKVM v1 CM4, v2 PCIe, v3 HAT version supported\uff0c v4 Allwinner not support now.</p> Can I power the Pi via PoE? <p>Yes! Hat and PCIe version supported.</p>"},{"location":"faq/#first-steps","title":"First steps","text":"What is the default password? How do I change it? <p>If you use PiKVM, there are two types of accounts: OS and PiKVM (web interface) accounts. The system account <code>blikvm</code> can be used for SSH/UART access and has the password <code>blikvm</code>. The web interface account is called <code>admin</code> and has the password <code>admin</code>. The PiKVM account cannot be used for SSH access and vice versa.</p> <p>To change passwords, use the following commands (become the root user):</p> <pre><code>su -  # If you're in the webterm\nrw  # Switch filesystem to read-write mode\npasswd blikvm  # Change blikvm user password\nkvmd-htpasswd set admin  # Change web ui admin password\nro  # Back to read-only\n</code></pre> How do I add another user? <p>If you use PiKVM software, as stated above you need to make 2 accounts, 1 for the shell, the other for the PiKVM Web UI.</p> <p><pre><code>If you require additional users for PiKVM UI, you can use the following:\n# su -\n# rw\n# kvmd-htpasswd set &lt;user&gt; # Adds a new user\n# kvmd-htpasswd set &lt;user&gt; # Sets the password as long as the user exists\n# kvmd-htpasswd del &lt;user&gt; # Removes/deletes a user\n\nTo add a shell/terminal account:\n# su -\n# rw\n# adduser &lt;user&gt;\n# passwd &lt;user&gt;\n</code></pre> Keep in mind that the more users that are added and accessing the screen stream at the same time, the FPS will drop.</p>"},{"location":"faq/#video-problems","title":"Video problems","text":"BLIKVM does not show the video from the computer at all <ul> <li>Double-check that the video capture device is connected correctly. For the CSI bridge, this should be exactly the camera port.</li> <li>Some laptops do not output any signal until you switch the output (usually via the FN + and an F5 key on the keyboard).</li> <li>Your computer may have turned on sleep mode for the monitor. Move the mouse to turn it off.</li> <li>For windows you might need to check for the active signal resolution. To change the active signal resolution you have to go to Settings&gt;System&gt;Display&gt;Advanced display settings&gt;Display adapter properties then, click \"List All Models\" and choose the one you want. Keep trying different Hz settings.</li> </ul> The video works in the booted OS, but not in the BIOS/UEFI <p>This problem appears on Intel NUC, GA-H77-DS3H, and some other devices when using a CSI bridge. All you need to do is change the EDID data. This is the information about supported resolutions that the CSI bridge reports to your computer.</p> Glitchy or wrong BIOS/UEFI resolution <p>On some motherboards, the BIOS may be displayed at a lower resolution, or with some rendering issues/glitches, specially on newer ASUS ones. Like this: </p> <p>This can be solved by enabling the Compatibility Support Module (CSM) in your BIOS, usually under the Boot options.</p> <p>If you can't or don't want to enable the CSM, you can try connecting a DisplayPort (DP) monitor, or a dummy plug. If you remove the DP cable/adapter the bug will reappear.</p> <p>If none of this works, try connecting the DP cable first, boot into the BIOS, disable the CSM and shutdown (do not restart) your PC. Then, boot into the BIOS and enable the CSM before shutting down your PC. Then connect the HDMI and turn your PC on again.</p> There is no video in GRUB2, but there is before and after <p>Sometimes this can be caused by the specifics of the BIOS/UEFI and how GRUB2 works with video.</p> <p>This can be solved by enabling the Compatibility Support Module (CSM) in your BIOS, usually under the Boot options. The video mode will be located in the same section. Switch the Video mode from UEFI to Legacy.</p> No image from computer with Linux + Awesome WM <p>Sometimes Awesome WM on Linux can't recognize a video output change on a cable. That is, if the cable was first inserted into the monitor, and then you reconnected it to BLIKVM - it may happen that you will not see the image. It seems that the problem is Awesome WM, since for example with KDE, it is not reproducable. If you turn on your workstation with BLIKVM already connected, everything will work fine.</p>"},{"location":"faq/#usb-problems-keyboard-mouse-mass-storage-etc","title":"USB problems (keyboard, mouse, mass storage, etc)","text":"What speed is the USB OTG port? <p>Per the official RPI documentation, this is a limitation of the SoC.  The OTG port is only USB2.0, so is limited to 455 Mbit/s.</p> Why can't some keyboard shortcuts of physical keyboards be captured while virtual keyboards can? For example, the  F11 key on a Mac computer cannot be captured. <p>This is because some shortcuts are already in use by the system, such as in macOS, where F11 is assigned to the \"Show Desktop\" function by default. When you press F11 in a web interface, the KeyboardEvent is first captured by the system, and if a callback is registered in the system, the event will not be passed to the application. To solve this issue, you can disable the system's assigned shortcut or use a virtual keyboard.</p>"},{"location":"faq/#hardware-problems-wi-fi-atx-etc","title":"Hardware problems (Wi-Fi, ATX, etc)","text":"If you use PiKVM software, the web UI show FAN error! <ul> <li>Because the fan model used by BLIKVM hardware is different from that of PIKVM hardware, viewing the fan status through the web interface may fail in the latest system of pikvm. However, this will not affect the normal operation of BLIKVM fan. Therefore, when using the PIKVM image, as long as you ensure that the install script displays OK, it means that the update of the kvmd fan program is successful. The threshold temperature set by the default program is 60 degrees Celsius. When the CPU temperature is detected to exceed 60 degrees Celsius, the fan will start rotating at 85% speed. If you want to modify the threshold temperature and speed, you can modify the kvmd-fan.py script, and then re-execute install.sh.</li> </ul> I can't connect to Wi-Fi at all! <ul> <li>If your device is unable to connect to the Wi-Fi network that you have set up, check the 2.4 GHz Wi-Fi channel used by your Wi-Fi access point.    If channels 12 to 14 are used (some countries have banned these channels) try to use a channel between 1 and 11.</li> </ul> BLIKVM complains about low power warnings <ul> <li>Are you using a \"proper\" power supply? Not one you hacked together?</li> <li>Some USB power bricks advertise 5V 2.1A or higher, but can't deliver consistent 5V.  Best to use Raspberry Pi Foundation recommended power supplies. It should be 5.1v and 3A DC output.</li> </ul> When I use the PoE, do I still need to use the power OTG splitter to prevent back power on the machine usb?  <ul> <li>Only HAT version you need to use power OTG splitter to prevent back power. Generally, most hosts computer are protected back power, you do not need to usr power OTG splitter in this case.</li> <li>BLIKVM-CM4-V2.2 and BLIKVM-PCIe version don't need.</li> </ul> In some board like BLIKVM-PCIe or BLIKVM-CM4-V2.2 has boot pin, how do I connect? <p>If you short them, CM4 will not start normally, but will enter the burning image mode. If your hardware version of boot has only two pins, use the jumper cap to connect the two pins as a short circuit. If you do not use the jumper cap or plug it into one pin, CM4 will start normally. If you use three boot pins of the hardware version, use the jumper cap to connect GND and another non-GND pin to indicate short circuit, and plug the jumper cap on the two GND pins or do not use it, CM4 will start normally.</p>"},{"location":"faq/#web-problems","title":"Web problems","text":"What ports does BliKVM OS occupy, and how should it be forwarded when using a public server? <ul> <li>The web interface uses the HTTP protocol and occupies port 80.</li> <li>If you are using hardware versions V1, V2, or V3 with web-rtc transmission, the port is 8188.</li> <li>If you are using hardware version V4 with MJPEG transmission, the port is 8008.</li> <li>Please note that the ports cannot be modified; only port forwarding can be configured.</li> </ul>"},{"location":"faq/#raspberry-problem","title":"Raspberry problem","text":"Can I use both the CM4 version with EMMC and the SD card at the same time? <p>No, you can't, When designing the CM4 hardware, several pins of the SD card are only valid in the lite version. You can find instructions on the official website of Raspberry Pi.</p>"},{"location":"first_steps/","title":"First steps","text":""},{"location":"first_steps/#first-power-on","title":"First power on","text":"<p>Power up the device.</p> <p>Do not turn off the device until it's fully booted for the first time</p> <p>After turning on the power, BLIKVM OS will perform the necessary operations on the memory card.</p>"},{"location":"first_steps/#getting-access-to-blikvm","title":"Getting access to BLIKVM","text":"<p>By default, BliKVM receives a dynamic IP address via DHCP. The IP address will be displayed on the BliKVM monitor. If you are using DIY hardware without a monitor, use the following tips:</p> Finding BliKVM in the network <p>You can determine the IP address of BliKVM using the following methods:</p> <ul> <li>Common Method: Access the web interface of your router and look for the allocated IP address list. The specific method depends on the router model.</li> <li>Linux Only: Use the command <code>arp-scan --localnet</code>.</li> <li>Linux, macOS, Windows: Download and run Angry IP Scanner.</li> <li>Windows PowerShell: Use the command <code>arp -a</code>.</li> </ul> <p>In the example below, let's assume your BliKVM has obtained the address 192.168.0.100, and you have successfully found that address using the instructions above.</p> Accessing BliKVM Web Interface <p>In most networks, you can access BliKVM in any browser using the following URL: <code>http://192.168.0.100/</code>. Google Chrome (Chromium), Firefox, and Safari work best with no extensions enabled. If one works and the other does not, it may be an issue with the browser or extensions. It is recommended to use a private browsing window or incognito mode. Internet Explorer and early versions of Microsoft Edge (non-Chromium version) are not supported.</p> <p>The default username is <code>admin</code>, and the password is also <code>admin</code>. Once logged in, you will have access to the main menu with essential functions. You can change system settings and passwords using the web interface's account management feature.</p> <p>Note about accessing BliKVM web via http, not https</p> Accessing BliKVM via SSH <p>SSH is the most common method for remote access in the Linux world. You can access BliKVM via SSH. This method is used for managing the device:</p> <ul> <li>Linux, macOS: Open any terminal application and run: <code>ssh blikvm@192.168.0.100</code>.</li> <li>Windows: Use PuTTY for the operation.</li> </ul> <p>The default <code>blikvm</code> user password is <code>blikvm</code>. You can use <code>sudo -i</code> to obtain root privileges.</p> Optional: Updating BliKVM Software <p>This section is not mandatory and should only be performed if you are next to the BliKVM for recovery purposes. Refer to the Software Update Guide for instructions.</p>"},{"location":"first_steps/#note-on-blikvm-os-terminal-usage","title":"Note on BliKVM OS Terminal Usage","text":"<p>Some configuration changes must be made under the <code>root</code> user (i.e., administrator).</p> <p>Obtaining Root Privileges</p> <ul> <li>If you are logged in via SSH, use <code>sudo -i</code> to obtain root privileges.</li> </ul> <p>BliKVM storage cards in versions v1, v2, and v3 are mounted in read-only mode. This protects the file system from being corrupted in the event of a sudden power outage. To edit any files and make changes, you need to remount the file system in read-write mode. You can determine the current mode by checking if <code>ro</code> or <code>rw</code> is displayed in the terminal.</p> <p>Enabling Write Mode</p> <ul> <li>To enable write mode, run the command <code>rw</code>.</li> <li>To disable write mode, run the command <code>ro</code>.</li> <li>If you receive a \"Device is busy\" message, execute the <code>reboot</code> command.</li> </ul>"},{"location":"first_steps/#whats-next","title":"What's next?","text":"<ul> <li>Set up internet access using Port Forwarding or Tailscale VPN.</li> <li>Explore BLIKVM features using the table of contents on the left.</li> <li>Join our Discord to contact the community and developers.</li> <li>Check out the GitHub - BLIKVM is a Open Source project!</li> </ul>"},{"location":"first_steps/#faq-and-troubleshooting","title":"FAQ and Troubleshooting","text":"<p>If you have any questions or run into problems, take a look at the FAQ. Seriously, it's really useful! We've probably already found a solution for it :)</p> <p>For any other help and support, you can contact us via the Discord chat.</p>"},{"location":"flashing_os/","title":"Flasing the OS image","text":"<p>Micro-SD Card Requirements</p> <ul> <li>Minimum 16 Gb</li> <li>Class 10 is strongly recommended</li> </ul> <p>Why are there two versions of software, BLIKVM and PiKVM? What is the difference between the two versions? Which one should I choose? Can I use the official image of PiKVM?</p> <ul> <li>At the beginning of the BLIKVM project, the hardware was developed, and the software directly used PiKVM. With the continuous progress of the project, BLIKVM has developed its own software version of new architecture, which also lays the foundation for deeper cooperation with its own hardware;</li> <li>The core functions of BLIKVM and PiKVM are the same for users. Some subdivision functions are not the same. For example, BLIKVM supports multiple languages;</li> <li>Select according to your own use experience;</li> <li>You can use the PiKVM official image, but you need to make some adaptations according to the different hardware, mainly involving screens, fans, etc. Since the PiKVM official image is always updated, the specific adaptations need to be seen according to the specific situation you encounter at that time;</li> </ul>"},{"location":"flashing_os/#download-the-image","title":"Download the image","text":"<p>Currently, BLIKVM OS is available for all versions, while PiKVM OS is only provided for v1, v2, and v3. Users who need to run PiKVM on v4 can join the Discord group for support.</p>"},{"location":"flashing_os/#blikvm-software","title":"BLIKVM software","text":"<p>You can find BliKVM v1 CM4, v2 PCIe, v3 HAT, v4 Allwinner BLIKVM software image, v1 v2 v3 use a same image.</p> <ul> <li>BLIKVM image  The web UI style is as follows: </li> </ul>"},{"location":"flashing_os/#base-on-pikvm-software","title":"Base on PiKVM software","text":"<p>Raspberry 4B and CM4 board use different PiKVM software image. After entering the link, you can see the image named with each hardware version (HAT CM4 PCIe)</p> <ul> <li>PiKVM image</li> </ul>"},{"location":"flashing_os/#flash-the-image","title":"Flash the image","text":"<p>Tip</p> <p>Ignore request to format your sd card, this step is not nessessary. Choose the most suitable method for you. How to flash the eMMC on a Raspberry Pi Compute Module 4</p>"},{"location":"flashing_os/#board-link","title":"Board Link","text":"<p>If you use a CM4 with eMMC (like the CM4102016). You can use the v1 or v2 board to flash the eMMC. If your CM4 don't have eMMC, your device can just use a SD card to boot from. You don't need to look into this any further. Just flash to the SD card instead. First, use the jumper cap to short the boot pin (allowing you flash the EMMC memory).</p> <p>If you use BLIKVM CM4 version</p> <p>Then connect the data cable to the USB OTG interface. Power on blikvm and observe the act light, the green light is always on. </p> <p>If you use BLIKVM PCIe version</p> <p>Then connect the data cable to the USB-PC interface. Power on blikvm and observe the ACT and PWR LED isn't light.  After initialize EMMC through the usbboot/rpiboot, the ACT and PWR LED light is always on. </p> <p>EMMC knowledge</p> <p>If you use Raspberry Pi compute modules such as CM3 eMMC or CM4 eMMC version\uff0cyou can initialize eMMC through the usbboot project. Note that the eMMC board version cannot use the SD card to boot the image. Instead, you need to flash the eMMC storage by using the usbboot project that emulates USB Mass Storage Device (MSD). From this video you can learn how-to flash the image quickly. How to flash the eMMC on a Raspberry Pi Compute Module 4 video</p> <p>Taking Ubuntu system as an example:</p>"},{"location":"flashing_os/#linux-usbboot","title":"Linux usbboot","text":"<p>If you use an Micro-SD Card, you can skip the following steps and go to the next chapter down below.</p> <pre><code># sudo apt install git libusb-1.0-0-dev pkg-config build-essential\n# git clone --depth=1 https://github.com/raspberrypi/usbboot\n# cd usbboot\n# make\n# sudo ./rpiboot\n</code></pre> <p>If the content in the figure below appears, that indicates that the eMMC initialization went successfully. The next step is to flash the image to your eMMC chip. </p>"},{"location":"flashing_os/#flash-the-image-linux-macos-and-windows","title":"Flash the Image (Linux, MacOS and Windows)","text":"<p>We are using the \"RPi Imager\" application to flash the image in this example.</p> <ol> <li> <p>Download and install the latest version of RPi Imager.</p> </li> <li> <p>Run RPi Imager: </p> </li> <li> <p>Press CHOOSE OS and select Use custom image at bottom of the list: </p> </li> <li> <p>After clicking on this item, select the image file (<code>.img.xz</code>), then click CHOOSE STORAGE: </p> </li> <li> <p>Insert the memory card into the card reader. Choose the card reader from this list (or eMMC flash storage, in case you are using a Raspberry Pi Compute module with a eMMC chip). Be careful  and choose the right device:   </p> <p></p> </li> <li> <p>After choosing the memory card, press the WRITE button. Confirm the operation when you are asked about it: </p> </li> <li> <p>Wait for the process to finish. Get yourself a coffee or do some stretching :)  </p> </li> </ol> <p>Tip</p> <p>The process may hang at 99% for a long time, this is okay, just wait for it to complete</p> <p></p> <p>8.Remove the memory card after successful completion:  </p> <p></p> <p>Tip</p> <p>If an error occurs during flashing or booting PiKVM, repeat the process.</p>"},{"location":"hdmi-csi-i2s/","title":"HDMI to CSI&amp;I2S bridge guide","text":"<p>Convert HDMI signal acquisition into CSI signal and I2S audio signal.</p>"},{"location":"hdmi-csi-i2s/#introduction","title":"Introduction","text":"<p>This module takes the incoming HDMI signal and converts it into a separate CSI signal and I2S audio signal.  HDMI input supports up to 1080P60Hz. It works well on raspberry pi, there are three versions of this module  in history(C779\u3001C780\u3001C790). C790 is the latest version. C790 has mitigate HDMI backpowering,also has two csi  channels and four csi channels at the same time. </p>"},{"location":"hdmi-csi-i2s/#features","title":"Features","text":""},{"location":"hdmi-csi-i2s/#c790","title":"C790","text":"<p>hardware parameters</p> <ul> <li>HDMI input: supports up to 1080P60Hz on Raspberry Pi</li> <li>HDMI to CSI-2 bridge chip:Toshiba TC358743XBG</li> <li>4 CSI-2 channels &amp; clock</li> <li>The CSI-2 interface, with 15 pin FPC seat, spacing 1.0 mm, is located on the front of the C790 module.</li> <li>The CSI-2 interface, with 22 pin FPC seat, spacing 0.5 mm, is located on the back of the C790 module.</li> <li>Size: 30 x 45 mm</li> <li>Install:4 x M2.5</li> <li>Power supply:3.3V</li> <li>Weight: 10g</li> </ul> <p>Pi 4B only support 1080P50Hz, limited by the number of CSI-2 channels. CM4 support 1080P60HZ, So if you must use 1080P60Hz input, please use CM4 and C790 together.</p> <p>interface</p> <p> C790 has two csi output interface. In fornt of C790, the CSI-2 interface is 15 pin FPC seat,  spacing 1.0 mm. In back of C790, the CSI-2 interface is 22 pin FPC seat, spacing 0.5 mm.  </p> <p>size</p> <p> </p> <p>Install C790 on raspberry pi for reference</p> <p> </p>"},{"location":"hdmi-csi-i2s/#c780","title":"C780","text":"C780A hardware parameters <ul> <li>HDMI input: supports up to 1080P50Hz on raspberry pi(Limited by the number of CSI-2 channels)</li> <li>HDMI to CSI-2 bridge chip:Toshiba TC358743XBG</li> <li>2 CSI-2 channels &amp; clock</li> <li>CSI-2 interface: 15 pin FPC seat, spacing 1.0 mm</li> <li>Size: 30 x 65 mm (unbroken PCB size); 30 x 45 mm (PCB size after breaking)</li> <li>Install:6 x M2.5</li> <li>Power supply:3.3V</li> <li>Weight: 10g</li> </ul> C780B hardware parameters <ul> <li>HDMI input: supports up to 1080P60Hz on raspberry pi</li> <li>HDMI to CSI-2 bridge chip:Toshiba TC358743XBG</li> <li>4 CSI-2 channels &amp; clock</li> <li>CSI-2 interface: 22 pin FPC seat, spacing 0.5 mm</li> <li>Size: 30 x 65 mm (unbroken PCB size); 30 x 45 mm (PCB size after breaking)</li> <li>Install:6 x M2.5</li> <li>Power supply:3.3V</li> <li>Weight: 10g</li> </ul> interface <p> The wiring of audio part is shown in Figure. </p> size <p>The size of C780 is shown in Figure. There are 6 mounting holes with a diameter of 2.75mm,  which are suitable for M2.5 screws.  As shown in Figure, the user can directly fix the module on the raspberry pi zero.C780 is designed  to be broken, and the hole spacing before breaking can be perfectly installed with most series of  raspberry pi. </p>"},{"location":"hdmi-csi-i2s/#c779","title":"C779","text":"hardware parameters <ul> <li>HDMI input: supports up to 1080P50Hz on raspberry pi(Limited by the number of CSI-2 channels)</li> <li>HDMI to CSI-2 bridge chip:Toshiba TC358743XBG</li> <li>2 CSI-2 channels &amp; clock</li> <li>CSI-2 interface: 15 pin FPC seat, spacing 1.0 mm</li> <li>Size: 35 x 50 mm </li> <li>Install:4 x M2.5</li> <li>Power supply:3.3V</li> <li>Weight: 10g</li> </ul> size <p>The size of C779 is shown in Figure. There are 4 mounting holes with a diameter of 2.75mm,  which are suitable for M2.5 screws. </p>"},{"location":"hdmi-csi-i2s/#csi-interface-definitions","title":"CSI Interface Definitions","text":"<p>The CSI (Camera Serial Interface) interfaces C779 and C780A have 15 pins each, while the C780B interface has 22 pins. The C790 interface is unique as it supports both 15 and 22 PIN configurations.  </p>"},{"location":"hdmi-csi-i2s/#software-demo","title":"Software demo","text":"<p>The use guide of C790/C780/C779 depends on the official Raspberry Pi OS version you are using.  Different versions have different usage methods. If you have some questions, Join our BLIKVM Discord  Community for Support, FAQ &amp; News! To use the kernel drivers, please update your system. There are a few things that have changed with the  5.4 kernel, so these instructions are for 5.4 or later. If \u201cuname -a\u201d reports anything less, then fix  this before proceeding. <pre><code>pi@raspberrypi:~ $ uname -a\nLinux raspberrypi 5.10.63-v7l+ #1459 SMP Wed Oct 6 16:41:57 BST 2021 armv7l GNU/Linux\n</code></pre></p> <p>1. Update &amp; upgrade the raspberry pi system (It will take a long time depend on the different country)</p> <pre><code>sudo apt-get update\nsudo apt-get upgrade\n</code></pre> <p>2. Enable camera module (the camera is enabled by default in Raspberry pi Bullseys OS)</p> <p><pre><code>sudo raspi-config\nsudo reboot\n</code></pre> Navigate to \u2018Interfacing Options\u2019 and hit Enter. Now select the \u2018Camera\u2019 option, and hit the Enter  key to enable it. Select \u201cFinish\u201d and select to reboot your Raspberry Pi. reboot is important!!</p> <p>3. Edit /boot/config.txt (that will need sudo)</p> <p><pre><code>sudo nano /boot/config.txt\n</code></pre> Add the line: <pre><code>dtoverlay=tc358743\n</code></pre> Add the line if your shield support audio like C780 or C790. <pre><code>dtoverlay=tc358743-audio\n</code></pre> please append the If (and only if) you have a device such as the C780 or C790 that supports the 22pin  connector with all 4 lanes wired out, and are using a Compute Module with the CAM1 connector that also  has all 4 lanes wired up, you can use: <pre><code>dtoverlay=tc358743,4lane=1\n</code></pre></p> <p>!!! note \"4. Check the amount of memory assigned to the CMA heap with \u201cdmesg | grep cma\u201d. The first line      should be along the lines of\"     <pre><code>pi@raspberrypi:~ $ dmesg | grep cma\n[0.000000] cma: Reserved 256 MiB at 0x000000001ec00000\n</code></pre>     If it reports less than 96MB assigned to CMA, then edit /boot/cmdline.txt and add to the start of the line.      Do NOT add any carriage returns.     <pre><code>cma=96M\n</code></pre> !!! note \"5. Reboot. If all is well you should get a /dev/video0 device, and \u201cv4l2-ctl \u2013list-devices\u201d will      tell you that it is provided by Unicam. After connecting all the cables, power on the Raspberry Pi,      the C790 indicator light is normally green, and after opening the Raspberry Pi terminal, enter the      following command:\"     <pre><code>pi@raspberrypi:~ $ ls /dev/video0\n/dev/video0\npi@raspberrypi:~ $ v4l2-ctl --list-devices\nbcm2835-codec-decode (platform:bcm2835-codec):\n    /dev/video10\n    /dev/video11\n    /dev/video12\n    /dev/video18\n    /dev/media1\nbcm2835-isp (platform:bcm2835-isp):\n    /dev/video13\n    /dev/video14\n    /dev/video15\n    /dev/video16\n    /dev/media0\nunicam (platform:fe801000.csi):\n    /dev/video0\n    /dev/video1\n    /dev/media2\n</code></pre> !!! note \"6. This driver puts all the control in the hands of the user, or the user\u2019s application.      By default there is no EDID loaded into the chip to allow it to tell the HDMI source what      resolutions are supported. There are EDID editors around. If you create a file edid.txt,      then you can push this to the device using\"     The comment of edid.txt file:     <pre><code>00ffffffffffff005262888800888888\n1c150103800000780aEE91A3544C9926\n0F505400000001010101010101010101\n010101010101011d007251d01e206e28\n5500c48e2100001e8c0ad08a20e02d10\n103e9600138e2100001e000000fc0054\n6f73686962612d4832430a20000000FD\n003b3d0f2e0f1e0a2020202020200100\n020321434e041303021211012021a23c\n3d3e1f2309070766030c00300080E300\n7F8c0ad08a20e02d10103e9600c48e21\n0000188c0ad08a20e02d10103e960013\n8e210000188c0aa01451f01600267c43\n00138e21000098000000000000000000\n00000000000000000000000000000000\n00000000000000000000000000000000\n</code></pre> <pre><code>cd ~\nsudo nano edid.txt\n#copy the above commend in edid.txt, save&amp;exit;\npi@raspberrypi:~ $ v4l2-ctl --set-edid=file=edid.txt --fix-edid-checksums\n\nCTA-861 Header\n  IT Formats Underscanned: yes\n  Audio:                   yes\n  YCbCr 4:4:4:             no\n  YCbCr 4:2:2:             no\n\nHDMI Vendor-Specific Data Block\n  Physical Address:        3.0.0.0\n  YCbCr 4:4:4 Deep Color:  no\n  30-bit:                  no\n  36-bit:                  no\n  48-bit:                  no\n\nCTA-861 Video Capability Descriptor\n  RGB Quantization Range:  yes\n  YCC Quantization Range:  no\n  PT:                      Supports both over- and underscan\n  IT:                      Supports both over- and underscan\n  CE:                      Supports both over- and underscan\n</code></pre></p> <p>7. The driver does NOT automatically switch to the resolution detected. Use the command:</p> <p><pre><code>pi@raspberrypi:~ $ v4l2-ctl --query-dv-timings\nActive width: 1280\nActive height: 720\nTotal width: 1650\nTotal height: 750\nFrame format: progressive\nPolarities: -vsync -hsync\nPixelclock: 74250000 Hz (60.00 frames per second)\nHorizontal frontporch: 0\nHorizontal sync: 370\nHorizontal backporch: 0\nVertical frontporch: 0\nVertical sync: 30\nVertical backporch: 0\nStandards: \nFlags: \n</code></pre> You MUST set the timings via \u201cv4l2-ctl \u2013set-dv-bt-timings\u201d. You can pass in an index to the detected mode, or use: <pre><code>v4l2-ctl --set-dv-bt-timings query\n</code></pre> to select the currently detected timings. <pre><code>v4l2-ctl -V\n</code></pre> should now reflect the resolution detected.</p> <p>8. The chip supports two formats \u2013 BGR3 (the default) and UYVY. BGR3 is 24bpp, and UYVY is YUV4:2:2 16bpp.</p> <p>Over the normal 2 CSI-2 lanes the data rate is such that BGR3 can run at a maximum of 1080p30, whilst UYVY will  go up to 1080p50. Use the following command to select UYVY, however your application may override that. <pre><code>v4l2-ctl -v pixelformat=UYVY\n</code></pre></p> <p>9. Check that the audio drivers / card is available to ALSA.</p> <p><pre><code>pi@raspberrypi:~ $ arecord -l\n**** List of CAPTURE Hardware Devices ****\ncard 1: tc358743 [tc358743], device 0: bcm2835-i2s-dir-hifi dir-hifi-0 [bcm2835-i2s-dir-hifi dir-hifi-0]\n  Subdevices: 1/1\n  Subdevice #0: subdevice #0\n</code></pre> Note: card 1 means that the card number for the TC358743XBG is \u201c1\u201d and it might be different.</p> <p>10. Install GStreamer tool.</p> <p><pre><code>sudo apt install gstreamer1.0-tools\n</code></pre> Check gstreamer tool version: <pre><code>pi@raspberrypi:~ $ gst-launch-1.0 --version\ngst-launch-1.0 version 1.18.4\nGStreamer 1.18.4\nhttp://packages.qa.debian.org/gstreamer1.0\n</code></pre> Note: Different versions have different command line parameters, which is very annoying.</p> <p>11. Use gstreamer to record video and audio</p> <p><pre><code>#GStreamer v1.14 command\ngst-launch-1.0 v4l2src io-mode=5 ! video/x-raw, format=UYVY, framerate=25/1 ! v4l2h264enc output-io-mode=4 ! video/x-h264,profile=high ! h264parse ! queue ! matroskamux name=mux ! filesink location=foo.mkv alsasrc device=hw:1 ! audio/x-raw,rate=48000,channels=2 ! audioconvert ! avenc_aac bitrate=48000 ! aacparse ! queue ! mux.\n</code></pre> foo.mkv is the output file. If your gstreamer is version 1.8 or above, you can try the following test command. In addition, alsasrc  device=hw:1 represents the sound card of TC358743, you can use \u201carecord -l\u201d to query. <pre><code>#The command to recode a video with audio. (GStreamer 1.18.4)\ngst-launch-1.0 -vvv v4l2src ! \"video/x-raw,framerate=30/1,format=UYVY\" ! v4l2h264enc extra-controls=\"controls,h264_profile=4,h264_level=13,video_bitrate=256000;\" ! \"video/x-h264,profile=high, level=(string)4.2\" ! h264parse ! queue ! matroskamux name=mux ! filesink location=foo.mkv alsasrc device=hw:1 ! audio/x-raw,rate=48000,channels=2 ! audioconvert ! avenc_aac bitrate=48000 ! aacparse ! queue ! mux.\n#The sample command to recode a video without audio. (C779 doesn't support audio)\ngst-launch-1.0 -vvv v4l2src ! \"video/x-raw,framerate=30/1,format=UYVY\" ! v4l2h264enc extra-controls=\"controls,h264_profile=4,h264_level=13,video_bitrate=256000;\" ! \"video/x-h264,profile=high, level=(string)4.2\" ! h264parse ! queue ! matroskamux name=mux ! filesink location=foo.mkv\nPress CTRL+C to end recording.\n</code></pre> PS: We recommend that you modify the above framerate parameter to the actual frame rate of your HDMI signal,  the actual frame rate value is from the result of \u2018v4l2-ctl \u2013query-dv-timings\u2019 command.  For the above HDMI device, because the frame rate is 60, so we modify the framerate parameter to 60 like the followint command. Record the video only: <pre><code>gst-launch-1.0 -vvv v4l2src ! \"video/x-raw,framerate=60/1,format=UYVY\" ! v4l2h264enc extra-controls=\"controls,h264_profile=4,h264_level=13,video_bitrate=256000;\" ! \"video/x-h264,profile=high, level=(string)4.2\" ! h264parse ! queue ! matroskamux name=mux ! filesink location=foo.mkv\n</code></pre> Record the video and audio: (if your shield supports audio also) <pre><code>gst-launch-1.0 -vvv v4l2src ! \"video/x-raw,framerate=60/1,format=UYVY\" ! v4l2h264enc extra-controls=\"controls,h264_profile=4,h264_level=13,video_bitrate=256000;\" ! \"video/x-h264,profile=high, level=(string)4.2\" ! h264parse ! queue ! matroskamux name=mux ! filesink location=foo.mkv alsasrc device=hw:1 ! audio/x-raw,rate=48000,channels=2 ! audioconvert ! avenc_aac bitrate=48000 ! aacparse ! queue ! mux.\n</code></pre> Note: alsasrc device=hw:1 \u2013 \u201c1\u201d means the audio card number, You must change to correct audio card number. (Query the car number via \u2018arecord \u2013l\u2019, refer to step 9)</p>"},{"location":"hdmi-csi-i2s/#packing-list","title":"Packing List","text":"C790"},{"location":"hdmi-csi-i2s/#test-video","title":"Test video","text":"<p>C780A test:https://www.youtube.com/watch?v=ecqyINoiHNQ</p> <p>C780B test:https://www.youtube.com/watch?v=nc-hwPT2Uak&amp;t=15s</p>"},{"location":"hdmi-csi-i2s/#purchase-link","title":"Purchase link","text":"<p>Purchase\uff1aC790 &amp; C780</p> <p>Purchase\uff1aC779</p>"},{"location":"hid/","title":"Virtual Keyboard","text":"<p>The virtual keyboard supports the use of combination keys. To do this, click and hold the corresponding virtual key with the mouse, drag it outside the virtual keyboard, and then release it to complete the operation of the combination key. For example, using the ctrl+alt+del combination key has the following effect:  </p> <p>Currently, when pressing cmd+other keys simultaneously on a Mac computer, the other keys will not be released when cmd is released. This bug has not been fixed yet. Users can solve this problem by clicking on the incorrectly released key on the virtual keyboard first.</p>"},{"location":"make-image/","title":"Make your own image","text":"<p>When you have made modifications to an image and want to create your own image, you can follow the steps below on Linux to create a minimal image.</p> <ol> <li> <p>Firstly, use the <code>gparted</code> software to open the SD card of the image you want to create. Use <code>gparted</code> to partition the unused space and set it as unallocated. This ensures that this portion of empty space without any valid content is not included in the image creation.    </p> </li> <li> <p>Next, use the <code>fdisk</code> command to view the size of the available space, as shown in the following image, which is 10151935.    </p> </li> <li> <p>Then, use the <code>dd</code> command to write to an empty img file. Set the <code>count</code> value to be greater than the size of the volume end obtained from <code>fdisk</code> by at least 1. <pre><code>touch blikvm-armbian-v4-20230623.img\nsudo dd if=/dev/sdb of=./blikvm-armbian-v4-20230623.img bs=512 count=10151936\n</code></pre></p> </li> <li> <p>Wait for the <code>dd</code> command to finish executing.</p> </li> </ol>"},{"location":"modify_pikvm_image/","title":"Modifying PiKVM image to work with BliKVM hardware","text":"<p>Because the blikvm hardware implementation scheme and PiKVM hardware implementation scheme are not exactly the same, you need to modify some errors through the following configuration for the official image of PiKVM. Of course, you can use the configured image.</p>"},{"location":"modify_pikvm_image/#fan-config","title":"Fan config","text":"<p>Since BliKVM's fan hardware is different to PiKVM's, you need to replace the control fan script first. The following default starting fan temperature is 40 degrees Celsius</p> <pre><code>su -\nrw\ngit clone https://github.com/ThomasVon2021/blikvm.git\ncd blikvm/package/kvmd-fan\nbash install-kvmd-fan.sh\nro\n</code></pre> <p>Edit the /etc/kvmd/override.yaml file and add the following content to remove the web UI error warning about fans.</p> <pre><code>kvmd:\n    info:\n        fan:\n            unix: ''\n</code></pre>"},{"location":"modify_pikvm_image/#check-edid-file-for-1080p60hz-input","title":"Check EDID file for 1080P60Hz input","text":"<p>The function of the EDID file is to set the controlled computer to input according to the expected resolution. Since the image EDID file of PiKVM in different periods does not necessarily meet 1080P60Hz, when you use the CM4 version of hardware, it is found that the default output of the controlled computer is not 1080P60Hz, you can modify /etc/kvmd/tc358743-edid.hex to the following contents</p> <pre><code>00FFFFFFFFFFFF005262888800888888\n1C150103800000780AEE91A3544C9926\n0F505400000001010101010101010101\n010101010101011D007251D01E206E28\n5500C48E2100001E8C0AD08A20E02D10\n103E9600138E2100001E000000FC0054\n6F73686962612D4832430A20000000FD\n003B3D0F2E0F1E0A202020202020014F\n020323454F041303021211012021A23C\n3D3E1F102309070766030C00300080E3\n007F8C8C0AD08A20E02D10103E9600C4\n8E210000188C0AD08A20E02D10103E96\n00138E210000188C0AA01451F0160026\n7C4300138E2100009800000000000000\n00000000000000000000000000000000\n00000000000000000000000000000087\n</code></pre> <p>make sure /boot/config.txt has the 4lane=1 entry in it for 1080p60hz support</p> <pre><code># Video and audio\ndtoverlay=tc358743,4lane=1\ndtoverlay=tc358743-audio\n</code></pre> <p>If you use webrtc can't get audio, try to edit /etc/kvmd/janus/janus.plugin.ustreamer.jcfg to add audio support.</p> <pre><code>audio: {\n    device = \"hw:0,0\"\n    tc358743 = \"/dev/kvmd-video\"\n}\n</code></pre>"},{"location":"modify_pikvm_image/#oled","title":"OLED","text":"<p>Follow the method below to enable OLED.</p> <p>If you use PiKVM official image, log in to PiKVM and run these commands: <pre><code># rw\n# systemctl enable --now kvmd-oled //Enable OLED\n# ro\n</code></pre> If the oled still can't work, you need to check whether there has \"dtparam=i2c_arm=on\" in \"/boot/config.txt\" file, and whether there has \"i2c-dev\" in \"/etc/modules-load.d/i2c.conf\" file. If not, please create and add them. If it still does not work after the above configuration, please burn the image provided by blikvm for testing to check whether the OLED hardware is damaged.  </p>"},{"location":"msd/","title":"Mass Storage Drive","text":"<p>Reinstall the system Video</p> <p></p> <p>BliKVM's USB device simulation feature allows you to remotely mount images on the virtual machine's mass storage drive, making it easy to install or reinstall operating systems and other software. This can be a useful feature for system administrators who need to manage multiple virtual machines remotely. By mounting an image on the mass storage drive, you can quickly and easily set up or configure a new virtual machine without having to physically connect a USB drive or other external storage device.</p> <p>Note: the size of the MSD is limited by the size of your sd card or eMMC module.</p>"},{"location":"msd/#web-ui","title":"Web UI","text":"<p>The entrance to the MSD virtual USB drive is as follows: </p> <p>Using the web to upload images and create bootable drives are both synchronous processes. If you exit the MSD UI interface after uploading an image, you can resume the upload from where it left off the next time you select the same image. However, once you exit the bootable drive creation process, you cannot resume it; you will need to start over.</p> <ul> <li>The default upload path for images is /mnt/upload. If an upload fails, you can manually delete the cache files that were not successfully uploaded.</li> <li>Due to the large size of some image files, image uploads are divided into slices and then merged. The merging process cannot be resumed, so please ensure you wait for the merge to complete (which may take some time) before proceeding to the next step.  </li> <li>Creating a bootable drive involves two steps: creating a virtual USB drive and copying the selected ISO image into the created virtual USB drive. Both steps have progress indicators. Please wait until both steps show 100% progress before clicking the next button.  </li> </ul>"},{"location":"msd/#upload-images-manually-without-web-ui","title":"Upload images manually (without Web UI)","text":"<ol> <li> <p>Confirm that the following four paths exist. If you are using the official latest image of blikvm, and it is fully configured, there is no need to check. <pre><code>    /usr/bin/blikvm/ventoy-1.0.88\n    /usr/bin/blikvm/kvmd-msd.sh\n    /mnt/msd/user    \n    /mnt/msd/ventoy\n</code></pre></p> </li> <li> <p>SSH logs in to blikvm, executes the rw command, and changes the system permission to writable. <pre><code>    rw\n</code></pre></p> </li> <li> <p>In your PC ,use scp cmd send iso file to kvm board.  <pre><code>    scp ***.iso blikvm@xxx.xxx.xxx.xxx:/mnt/msd/user/\n</code></pre></p> </li> <li> <p>excute msd cmd.wait until excute end. </p> </li> <li>If you don't use option paramter\uff1a</li> <li>The default size of the USB flash disk is 5GB.</li> <li>The default filename is scan /mnt/msd/user dir.</li> <li>The default msd name is ventoy. <pre><code>    sudo bash /usr/bin/blikvm/kvmd-msd.sh -c make\n</code></pre></li> <li>If your iso is large than 5GB.You can specify the optional parameter - s xxx, xxx is the Size.</li> <li>If you need specify iso ,you can use -f xxx.iso. </li> <li>If you want to specify the msd name, you can use -n xxx.  <pre><code>    sudo bash /usr/bin/blikvm/kvmd-msd.sh -c make -s 5 -n ventoy -f xxx.iso\n</code></pre></li> <li> <p>Tips: cp progress slowly, Please be patient. </p> </li> <li> <p>If you want to excute other cmd, you can use other option. c option contains :  make/conn/disconn/clean</p> </li> <li> <p>connect msd <pre><code>    sudo bash  /usr/bin/blikvm/kvmd-msd.sh -c conn\n</code></pre></p> </li> <li> <p>disconnect msd <pre><code>    sudo bash  /usr/bin/blikvm/kvmd-msd.sh -c disconn\n</code></pre></p> </li> <li> <p>clean msd <pre><code>    sudo bash  /usr/bin/blikvm/kvmd-msd.sh -c clean\n</code></pre></p> </li> <li> <p>throuht web restart PC, enter BIOS, modify boot priority,set blikvm USB first.</p> </li> <li> <p>according to step, select operate system , format partition and install system.</p> </li> </ol>"},{"location":"port-forwarding/","title":"Port forwarding","text":"<p>If your ISP provides an external IP address for the router, you can configure Port forwarding to access BliKVM:</p> <ul> <li>The web interface uses the HTTP protocol and occupies port 80;</li> <li>If your hardware is v1 v2 v3 and you are using web rtc transmission, the port is 8188;</li> <li>If your hardware is v4 and you are using mjepg transmission, the port is 8008;</li> <li>Note that the port does not support modification and can only be configured for forwarding;</li> </ul> <p>If you do not have an external IP address, we suggest trying to use Tailscale VPN\u3002</p>"},{"location":"rtc/","title":"RTC Clock","text":"<p>The purpose of an RTC (Real-Time Clock) is to provide real-time information about the current date and time for a device or system. It is an independent clock chip or module that has its own power source, allowing it to maintain accurate time even when the device is powered off or experiences a power outage. Due to shipping restrictions on international deliveries, the RTC hardware is shipped without a battery, and users need to purchase a CR1220 button cell battery themselves. The specific RTC clock model used in different versions of BliKVM may vary, and the usage methods may differ slightly.</p>"},{"location":"rtc/#blikvm-v2-pcie-and-blikvm-v3-hat-pcf8563","title":"BliKVM V2 PCIe and BliKVM V3 Hat - pcf8563","text":"<p>1. Check if the pcf8563 RTC clock hardware is properly recognized on the i2c bus. The pcf8563 RTC clock has an i2c address of 0x51. Execute the following command as root to verify if the rtc clock is correctly detected on the i2c bus:</p> <pre><code>root@mangopimcore:~# i2cdetect -y 1\n    0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f\n00:                         -- -- -- -- -- -- -- --\n10: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n20: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n30: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n40: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n50: -- 51 -- -- -- -- -- -- -- -- -- -- -- -- -- --\n60: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n70: -- -- -- -- -- -- -- --\n</code></pre> <p>2. Register a new i2c device with the Linux system's i2c subsystem. The device is a pcf8563 with an i2c address of 0x51. Use the command <code>ls /dev | grep rtc</code> to verify if the rtc1 device appears, indicating a successful registration.</p> <pre><code>echo pcf8563 0x51 &gt; /sys/class/i2c-adapter/i2c-1/new_device\n</code></pre> <p>3. Set the current system time to the RTC clock time.</p> <pre><code>hwclock -f /dev/rtc0 -w\n</code></pre> <p>4. Read the time from the RTC clock. If the time can be read, it indicates that the RTC module is functioning correctly.</p> <pre><code>root@mangopimcore:~# hwclock -f /dev/rtc0 -r\n2023-05-28 05:04:08.679152-02:30\n</code></pre>"},{"location":"rtc/#blikvm-v4-pcf8563","title":"BliKVM V4 - pcf8563","text":"<p>1. Check if the pcf8563 RTC clock hardware is properly recognized on the i2c bus. The pcf8563 RTC clock has an i2c address of 0x51. Execute the following command as root to verify if the rtc clock is correctly detected on the i2c bus:</p> <pre><code>root@mangopimcore:~# i2cdetect -y 0\n    0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f\n00:                         -- -- -- -- -- -- -- --\n10: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n20: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n30: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n40: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n50: -- 51 -- -- -- -- -- -- -- -- -- -- -- -- -- --\n60: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n70: -- -- -- -- -- -- -- --\n</code></pre> <p>2. Register a new i2c device with the Linux system's i2c subsystem. The device is a pcf8563 with an i2c address of 0x51. Use the command <code>ls /dev | grep rtc</code> to verify if the rtc1 device appears, indicating a successful registration.</p> <pre><code>echo pcf8563 0x51 &gt; /sys/class/i2c-adapter/i2c-0/new_device\n</code></pre> <p>3. Set the current system time to the RTC clock time.</p> <pre><code>hwclock -f /dev/rtc1 -w\n</code></pre> <p>4. Read the time from the RTC clock. If the time can be read, it indicates that the RTC module is functioning correctly.</p> <pre><code>root@mangopimcore:~# hwclock -f /dev/rtc1 -r\n2023-05-28 05:04:08.679152-02:30\n</code></pre>"},{"location":"serial_over_usb/","title":"Serial-over-USB connection","text":"<p>The BliKVM device can be accessed through the serial port terminal.</p> <p>1.For hardware connection, you should use the USB to ttl module to connect the USB of the computer to the uart of BliKVM. If you are using the Hat version, please connect the serial ports GPIO14 and GPIO15. If you are using the PCIe version, connect the GTR pin marked by the PCB</p> <p></p> <p>2.Install terminal login tools on the computer. For example, you can install putty tools on Windows</p> <p></p> <p>3. Use the putty instruction. Enter the correct COM port. The default baud rate is 115200. Select serial as the connection method, and then click Open\uff08Use PiKVM firmware as an example\uff09</p> <p> </p> <p>If your computer cannot correctly recognize the USB to TTL module, please follow the steps below to install the driver for your computer</p> <ol> <li>Connect the usb-a connector to your admin host (in this example, it's on a windows host). As a result, device manager will show a new USB Serial device in Other devices.  </li> <li>Download and extract/run drivers. In this example, I downloaded and extracted the ZIP file.  https://learn.sparkfun.com/tutorials/how-to-install-ch340-drivers/all</li> <li>Update driver for the new USB Serial device, point it to where you extracted the files, and click Next then Close. </li> <li>If done right, the new USB serial device should now show up under Ports as USB-SERIAL CH340 (COMX).   </li> </ol>"},{"location":"static_ip/","title":"Set static IP","text":"<p>To configure a static IP address on a BliKVM image, you can follow these steps:</p> <ol> <li>SSH into the BliKVM, If it is a read-only system, please use the <code>rw</code> command to make the system writable.</li> <li>Edit the network interfaces configuration file using the following command:    <pre><code>sudo vim /etc/dhcpcd.conf\n</code></pre></li> <li>Within the file, locate the section that starts with \"# Example static IP configuration\".</li> <li>Uncomment the lines below that section and modify them to set your desired static IP address, gateway, DNS servers, and other network settings. For example:    <pre><code>interface eth0\nstatic ip_address=192.168.1.100/24\nstatic routers=192.168.1.1\nstatic domain_name_servers=192.168.1.1\n</code></pre>    Adjust the values according to your network configuration.</li> <li>Save the changes.</li> <li>Restart the BliKVM for the changes to take effect:    <pre><code>sudo reboot\n</code></pre></li> </ol> <p>After the reboot, your BliKVM will use the configured static IP address instead of obtaining one dynamically from a DHCP server. Make sure the static IP address you choose is not already assigned to another device on the network and is within the same subnet.</p>"},{"location":"switch-guide/","title":"HDMI Switch Mannul","text":"<p>BliKVM-Switch-V1.0 uses and tests video, supporting BliKVM and PiKVM</p> <p></p>"},{"location":"switch-guide/#introduction","title":"Introduction","text":"<p>BliKVM-Switch-V1.0 is a four channel HDMI+USB switch, which supports panel button, desktop controller, KVM remote to switch between computers. Maximum support of the switch itself 4K@60HZ Plug and play, drive free. BliKVM-Switch-V1.0 uses the same hardware solution as XH-HK4401, AG7210 HDMI switching chip supports up to 4K@60Hz, CH444G USB switching chip supports USB2.0. The difference is that BliKVM-Switch-V1.0 is equipped with KVM USB cable, which can realize KVM port selection. BliKVM-Switch-V1.0 is compatible with BliKVM and PiKVM.</p> <p>points for attention</p> <ul> <li>The switch can be powered directly from the USB input to the computer, that is, the switch can work normally without power supply.</li> <li>If the USB power supply of the controlled computer cannot make the switch work, the switch can be powered independently.</li> <li>The switch package only provides a USB power cable, but does not provide a power adapter. The customer needs to configure a power adapter (5V).</li> <li>Desktop controller can control HDMI switch with USB cable. For customers who do not use KVM, this is another way of switching for easy cable management.</li> <li>HDMI input support up to 4096x2160/60Hz resolution</li> <li>4K 60Hz input, the power is about 200 mW.</li> </ul>"},{"location":"switch-guide/#interface-diagram","title":"Interface diagram","text":"<p>Front and back interface diagram, the control interface in the right figure is the remote control interface.</p> <p></p> <p>Schematic Diagram of Side Interface.</p> <p></p> <p>Equipment connection diagram.</p> <p></p>"},{"location":"switch-guide/#software-configuration","title":"Software configuration","text":"<p>!!! info \"If you are using BliKVM software and have powered on the switch and connected the cables before starting BliKVM, no additional configuration is needed. BliKVM will automatically detect the switch when it starts. If automatic detection fails, you can manually specify the switch device. First, confirm the device descriptor name of the switch by using the terminal, such as <code>/dev/ttyUSB0</code>. Then, edit the <code>switch_handle</code> field in <code>/usr/bin/blikvm/package.json</code>. Set <code>switch_enable</code> to 1 and <code>switch_path</code> to <code>/dev/ttyUSB0</code> in the configuration: . Afterward, restart BliKVM. Click MORE in the lower left corner, find the BliKVM switch column, and then switch. Note that the flashing blue dot of the corresponding channel indicates that the switch insertion is recognized and is in the current channel. If there is no blue dot, the switch insertion is not recognized\u3002\"     </p> <p>If you use PiKVM software, please configure it according to the following instructions.</p> <ol> <li>Log in to PiKVM through SSH. The user name and password are root;</li> <li>Uses the <code>rw</code> command on the terminal to change the system to a read-write system;</li> <li>Edit <code>/etc/kvmd/override. yaml</code> this file to make it contain the following contents. That is, add after the original content.     <pre><code>kvmd:\n    gpio:\n        drivers:\n            hk:\n                type: xh_hk4401\n                device: /dev/ttyUSB0\n        scheme:\n            ch0_led:\n                driver: hk\n                pin: 0\n                mode: input\n            ch1_led:\n                driver: hk\n                pin: 1\n                mode: input\n            ch2_led:\n                driver: hk\n                pin: 2\n                mode: input\n            ch3_led:\n                driver: hk\n                pin: 3\n                mode: input\n            ch0_button:\n                driver: hk\n                pin: 0\n                mode: output\n                switch: false\n            ch1_button:\n                driver: hk\n                pin: 1\n                mode: output\n                switch: false\n            ch2_button:\n                driver: hk\n                pin: 2\n                mode: output\n                switch: false\n            ch3_button:\n                driver: hk\n                pin: 3\n                mode: output\n                switch: false\n        view:\n            table:\n                - [\"#Input 1\", ch0_led, ch0_button]\n                - [\"#Input 2\", ch1_led, ch1_button]\n                - [\"#Input 3\", ch2_led, ch2_button]\n                - [\"#Input 4\", ch3_led, ch3_button]\n</code></pre></li> <li>Use the <code>ro</code> command on the terminal to reset the system to a read-only system;</li> <li>Use 'systemctl restart kvmd' on the terminal to restart the service;</li> <li>Enter the PiKVM web interface and click the GPIO menu. You should see 4 inputs, one of which has a green circle to indicate that it is currently selected. Click Other Inputs to change the selected host. </li> </ol>"},{"location":"switch-guide/#control-protocol","title":"Control protocol","text":"<p>If you want to use the blicube switch on other platforms, please refer to the following protocol</p> <ul> <li>The communication baud rate is 19200</li> <li>The message sent to switch by switching to channel 1 isSW1\\r\\nG01gA</li> <li>The message sent to switch by switching to channel 2 isSW2\\r\\nG02gA</li> <li>The message sent to switch by switching to channel 3 isSW3\\r\\nG03gA</li> <li>The message sent to switch by switching to channel 4 isSW4\\r\\nG04gA</li> <li>The message returned by the switch for the current channel is:G01gA,G02gA,G03gA,G04gA</li> </ul>"},{"location":"switch-guide/#packing-list","title":"Packing list","text":"product quantity note HDMI KVM Switch(4-channel) 1 110mm * 60mm * 33mm Desktop controller 1 USB cable of Desktop controller 4 length: 1.2m HDMI(Standard) cable 5 length: 1.5m USB power cable 1 length: 0.8m USB cable of KVM 1 length: 1.5m USB cable of Desktop controller 1 length: 1m"},{"location":"tailscale/","title":"Tailscale VPN","text":"<p>Tailscale can be used to access your BliKVM from the public internet. It is a convenient and free networking tool for setting up a small VPN network. This document provides an example for accessing your BliKVM over the internet, but you can also use Zerotier or other VPN solutions. The following is a basic example, and for any specific settings or functionalities, please refer to the Tailscale documentation.</p>"},{"location":"tailscale/#blikvmtailscale","title":"BliKVM\u5b89\u88c5Tailscale","text":"<p>First, make sure that your system has read-write access. If it's a read-only system, use the rw command to make it writable. Then, proceed with the Tailscale installation by running the following command: <pre><code>curl -fsSL https://tailscale.com/install.sh | sh\n</code></pre></p> <p>Note that in some regions, such as China, downloading Tailscale directly might be problematic due to network restrictions. Please configure your network accordingly.</p>"},{"location":"tailscale/#adding-blikvm-to-your-tailscale-network","title":"Adding BliKVM to your Tailscale Network","text":"<p>Register an account on the Tailscale website and generate your own keys in the settings. On the BliKVM terminal, use the following command to add BliKVM to your Tailscale network: <pre><code>sudo tailscale up --authkey=your-auth-key --accept-routes\n</code></pre> If everything goes well, you can run ip addr show tailscale0 on the BliKVM terminal to view the IP address assigned by Tailscale for the virtual network. Here's an example output: <pre><code>3: tailscale0: &lt;POINTOPOINT,MULTICAST,NOARP,UP,LOWER_UP&gt; mtu 1280 qdisc pfifo_fast state UNKNOWN group default qlen 500\n    link/none\n    inet 100.126.223.28/32 scope global tailscale0\n       valid_lft forever preferred_lft forever\n    inet6 fd7a:115c:a1e0:ab12:4843:cd96:627e:df1c/128 scope global\n       valid_lft forever preferred_lft forever\n    inet6 fe80::8955:99dc:4e7d:b08b/64 scope link stable-privacy\n       valid_lft forever preferred_lft forever\n</code></pre> The IP address, such as 100.126.223.28, can be used to access the BliKVM web interface from your host machine.</p>"},{"location":"tailscale/#tailscale","title":"\u4e3b\u673a\u5b89\u88c5Tailscale","text":"<p>Download and install Tailscale from the Tailscale website on your controlling host machine. Log in with your Tailscale account, and then you can check the Tailscale admin page to verify if both your machines are online. Once they are online, you can use the following address to access BliKVM from your controlling host machine: <pre><code>http://&lt;tailscale_kvm_ip&gt;\n</code></pre></p>"},{"location":"update/","title":"Software update introduction","text":""},{"location":"update/#introduction","title":"Introduction","text":"<p>The currently available versions of the BLIKVM project are hosted in the release package of the github. The update software function needs to keep the device connected. There are currently two ways to update the software.</p> <ul> <li>Method 1: Click the update button through the web interface, and the program will be updated automatically. Restart is required after the update.</li> <li>Method 2: Manually run the script on the KVM terminal to update, and restart after the update.</li> </ul> <p>Common causes of upgrade errors</p> <ul> <li>The device is not connected to the network;</li> <li>Network access to github is limited;</li> </ul> <p>We strongly recommend performing the update while you are in close proximity to the BliKVM hardware you are upgrading.  The reason is if anything goes wrong you can intervene.</p> <ul> <li>If you are familiar with command-line operations, we recommend manually updating so that you can monitor the command-line status in real time.</li> <li>If the update is abnormal and the web interface cannot exit the update status, use ssh to the terminal can and restart to recover.</li> </ul>"},{"location":"update/#manually-run-the-script-to-update","title":"Manually run the script to update","text":"<p>In the terminal\uff0cIf the current system terminal can see the ro keyword and it is a read-only system, it is necessary to use 'rw' to make the system writable.</p> <pre><code>sudo -i\ncd /opt/bin/blikvm/\ngit pull --rebase\npython3 /opt/bin/blikvm/script/update.py\n</code></pre> <p>Observe the output of the terminal. When you see the message of successful upgrade, the terminal enters reboot, and the reboot takes effect.</p> <p>If you are unable to update successfully due to network issues, you can download the latest release.tar.gz package on another PC with a stable network connection and follow the instructions below for installation.</p> <ul> <li>download address: https://github.com/ThomasVon2021/blikvm/releases</li> <li>v1 v2 v3 hardware use release.tar.gz</li> <li>v4 hardware use release-h616-v4.tar.gz SSH into the device terminal and use <code>tar -zxvf release.tar.gz</code> to extract the release.tar.gz file. <pre><code>rw\nsudo -i\ncd /your release path/\npython3 install_release.py --releasepath=./\nro\n</code></pre> You can compare the versions before and after in /usr/bin/blikvm/package.json. If you have upgraded to the specified version, the installation is successful, and you can reboot for the changes to take effect.</li> </ul>"},{"location":"update/#web-ui-update","title":"Web UI update","text":"<p>The current web upgrade function is temporarily disabled. Please use the command line to update</p> <p>After clicking the More Options button, find the CheckUpdate button and click it. If the available version is found, the pop-up box in the figure below will appear. Click OK to enter the upgrade process. The web interface is temporarily inoperable during the upgrade process. View the current update status by manually refreshing the page. When the message of successful update appears, it means that the update has been successful. Click the restart button, and the new version of software will take effect.</p> <p> </p>"},{"location":"usb-splitter-guide/","title":"USB/PWR Splitter guide","text":""},{"location":"usb-splitter-guide/#1-introduction","title":"1. Introduction","text":"<p>The adaptor allows the Raspberry Pi 4 to be used with a Pi USB-C power supply while allowing access to USB OTG data over a separate USB-C connection.</p> <p>USB-C (RPI4) &lt;&gt; USB-C (USB) and USB-C (PWR)</p> USB-C(RPI4) USB Type-C(USB) USB Type-C(PWR) 5V 5V D- D- D+ D+ CC1 10k to 5V CC1 5.1k to GND CC1 5.1k to GND CC2 10k to 5V CC2 5.1k to GND CC2 5.1k to GND GND GND GND <p>To use the adaptor with the Raspberry Pi 4 you need.</p> <ul> <li>USB-C to USB-C cable[1] between Pi4 and the adaptor board</li> <li>USB-C to USB-C or Type-A between adaptor board and PC</li> <li>Power[2] via Official Raspberry Pi USB Type-C Power Supply.</li> </ul> <p>[1] Whilst USB-C cables are generally designed for higher current I still advise using short power cable to the Pi where possible to reduce voltage drop.</p> <p>[2] PLEASE NOTE With the Pu/Pd resistors on this board it can only be used with 5V supply to power a 5V device.</p> <p>An adaptor of this kind does not fall within the USB specification. It's designed for use with the official Raspberry Pi USB-C power supply and raspberry pi, use with other power supplies/chargers and devices may cause issues/damage.</p>"},{"location":"usb-splitter-guide/#2mechanical-diagram","title":"2.Mechanical Diagram","text":""},{"location":"usb-splitter-guide/#3test-video","title":"3.Test video","text":"<p>USB splitter Video</p> <p></p>"},{"location":"usb-splitter-guide/#43d-printable-case","title":"4.3D printable case","text":"<p>A simple snap fit case for the USB splitter.</p> <p> </p> <p>Download file</p>"},{"location":"user-manager/","title":"User Manager","text":"<p>In the 'More Settings' section, click on 'User Management' to modify your username and password. After changing your account password, it is necessary to restart the KVM system for the changes to take effect. Please note that after the modification, the original 'admin' user will no longer be able to log in. The global default password path can be found at <code>/etc/kvm.d/conf/admin.ini</code>.  </p>"},{"location":"wake-on-lan/","title":"Wake-on-LAN","text":""},{"location":"wake-on-lan/#introduction","title":"Introduction","text":"<p>Wake-on-LAN, abbreviated as WOL or WoL, is a feature that allows a computer that is in sleep or shutdown state to be powered on remotely by KVM through a local network by sending a specific message. WoL requires support from the controlled computer; otherwise, the feature won't work. Additionally, it needs to be ensured that WoL is enabled and configured correctly. With this feature, you can power on the computer without needing to use the ATX function. If users encounter anomalies when using KVM's WoL, they can try testing it using software that supports WoL.</p>"},{"location":"wake-on-lan/#how-to-use","title":"How to Use","text":""},{"location":"wifi/","title":"Wifi Configure","text":"<p>Because BLIKVM has many kinds of hardware and supports different OS, such as BLIKVM OS and PiKVM OS, different OS confifure wifi methods may not be the same. Please confirm the hardware and OS usage before using the method in this document.</p> <ol> <li>Please confirm that the hardware you use supports wifi function, for example, the CM400200 version does not have wifi function;</li> <li>If the SOC of KVM hardware is CM4, please confirm whether wifi antenna is connected;</li> <li>PiKVM OS is arch linux;</li> <li>BLIKVM OS raspberry pi series is debian system, and H616 series is armbian system;</li> </ol>"},{"location":"wifi/#v1-v2-v3-use-raspi-config-for-wifi-configure-on-raspberry-pi-debian-system","title":"v1 v2 v3 use raspi-config for wifi configure on raspberry pi debian system","text":"<ol> <li>Log in to ssh, command: ssh blikvm@ip</li> <li>The system is reloaded as writable. Command: rw</li> <li>Start raspi-config, command: sudo raspi-config</li> <li>Select System Options</li> <li>Select Wireless LAN</li> <li>Select the country where wifi is located, and China will select CN. If it has been set before, this step will skip to 7</li> <li>Enter the ssid (name) of Wi-Fi</li> <li>Enter the Wi-Fi password. If there is no password, press Enter directly</li> <li>At this time, you will return to the interface in Step 4, press the tab key to select, and press Enter <li>Check whether to connect to wifi. Command: ifconfig wlan0. If you see the ip obtained, you are connected</li> <li>Mount the system as read-only. Command: ro</li>"},{"location":"wifi/#v4-hardware-using-armbian-system-with-armbian-config","title":"v4 Hardware using Armbian System with armbian-config","text":"<ol> <li>Log in via SSH using the command: <code>ssh blikvm@ip</code> to access the Armbian system.</li> <li>Enter the following command to launch the <code>armbian-config</code> tool: <pre><code>sudo armbian-config\n</code></pre></li> <li>In the <code>armbian-config</code> menu, navigate and select options using the arrow keys and press Enter.</li> <li>Scroll down to the \"Network\" option using the arrow keys and press Enter to enter the submenu.</li> <li>In the \"Network\" submenu, select the \"Wireless\" option and press Enter to enter the Wi-Fi configuration menu.</li> <li>In the Wi-Fi configuration menu, select the \"Connect to Wi-Fi\" option and press Enter to enter the Wi-Fi connection setup.</li> <li><code>armbian-config</code> will list the available wireless interfaces and already configured networks. Select the wireless interface you want to connect to and press Enter.</li> <li><code>armbian-config</code> will display the list of available Wi-Fi networks. Use the arrow keys to select the Wi-Fi network you want to connect to and press Enter.</li> <li>If the Wi-Fi network is password-protected, <code>armbian-config</code> will prompt you to enter the Wi-Fi password. Enter the password and press Enter.</li> <li>Wait for a moment while the Armbian system attempts to connect to the specified Wi-Fi network. If the connection is successful, you will see a corresponding message on the screen.</li> <li>Exit the <code>armbian-config</code> tool.</li> </ol> <p>Please note that the menu options and configurations mentioned above may vary slightly depending on the specific version of the Armbian system. Make sure to follow the appropriate steps based on your system version and configuration.</p>"},{"location":"zerotier/","title":"ZeroTier VPN","text":"<p>ZeroTier allow secure access to your BliKVM even throught NAT on both sides. It lets you build modern, secure multi-point virtualized networks of almost any type. This document provides an example for accessing your BliKVM over the internet, but you can also use Tailscale or other VPN solutions. The following is a basic example, and for any specific settings or functionalities, please refer to the ZeroTier documentation.</p>"},{"location":"zerotier/#installing-zerotier-on-blikvm","title":"Installing ZeroTier on BliKVM","text":"<p>First of all, prepare account and VPN network at ZeroTier with instructions here: Create a Network , save Network ID for later usage. Next, connect with BliKVM terminal using SSH protocol, and check for read-write access. If it's a read-only system, use the rw command to make it writable. Now install ZeroTier client using command below: <pre><code>curl -s https://install.zerotier.com | sudo bash\n</code></pre></p> <p>Note that in some regions, such as China, downloading ZeroTier directly might be problematic due to network restrictions. Please configure your network accordingly.</p>"},{"location":"zerotier/#adding-blikvm-to-your-zerotier-network","title":"Adding BliKVM to your ZeroTier Network","text":"<p>On the BliKVM terminal, use the following command to add BliKVM to your ZeroTier network (using ZeoroTier Network ID, for example d5e04297a16fa690): <pre><code>sudo zerotier-cli join d5e04297a16fa690\n</code></pre> If everything goes well, you can run ip addr show zerotier network device (name is starting with zt) on the BliKVM terminal to view the IP address assigned by ZeroTier for the virtual network. Here's an example output: <pre><code>3: zt6ovrlscs: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 2800 qdisc pfifo_fast state UNKNOWN group default qlen 1000\n    link/ether d6:e4:eb:ae:db:64 brd ff:ff:ff:ff:ff:ff\n    inet 172.25.96.75/16 brd 172.25.255.255 scope global zt6ovrlscs\n       valid_lft forever preferred_lft forever\n    inet6 fe80::d4e4:ebff:feae:db64/64 scope link \n       valid_lft forever preferred_lft forever\n</code></pre> The IP address, such as 172.25.96.75, can be used to access the BliKVM web interface from your host machine.</p>"},{"location":"zerotier/#installing-zerotier-on-client-computer","title":"Installing ZeroTier on client computer","text":"<p>Go to Download section at ZeroTier website and install ZeroTier on your controlling host machine. Join your ZeroTier Network ID, and then you can check your network page to verify if both your machines are online. Check if they are authorzied to connect to network there (Auth? column). Once they are online, you can use the following address to access BliKVM from your controlling host machine: <pre><code>http://&lt;zerotier_kvm_ip&gt;\n</code></pre></p>"}]}